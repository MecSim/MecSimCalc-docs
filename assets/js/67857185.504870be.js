"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[4564],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),c=m(n),d=l,h=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},s),{},{components:n})):a.createElement(h,o({ref:t},s))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,o=new Array(i);o[0]=c;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:l,o[1]=r;for(var m=2;m<i;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6569:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>o,metadata:()=>r,toc:()=>p,default:()=>s});var a=n(7462),l=(n(7294),n(3905));const i={sidebar_label:"Example 3",sidebar_position:4},o="Example 3: Folium",r={unversionedId:"maps/example-3",id:"maps/example-3",title:"Example 3: Folium",description:"This example provides a quick overview on how to create a Folium map with some simple shapes.",source:"@site/docs/maps/example-3.md",sourceDirName:"maps",slug:"/maps/example-3",permalink:"/maps/example-3",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Example 3",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Example 2",permalink:"/maps/example-2"},next:{title:"Overview",permalink:"/self-hosting-apps/overview"}},p=[{value:"Step 1: Inputs",id:"step-1-inputs",children:[],level:2},{value:"Step 2: Code",id:"step-2-code",children:[{value:"Creating a map",id:"creating-a-map",children:[],level:3},{value:"Adding shapes",id:"adding-shapes",children:[],level:3},{value:"Exporting the map",id:"exporting-the-map",children:[],level:3},{value:"Full code",id:"full-code",children:[],level:3}],level:2},{value:"Step 3: Output",id:"step-3-output",children:[],level:2}],m={toc:p};function s(e){let{components:t,...i}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"example-3-folium"},"Example 3: Folium"),(0,l.kt)("p",null,"This example provides a quick overview on how to create a ",(0,l.kt)("a",{parentName:"p",href:"https://python-visualization.github.io/folium/modules.html"},"Folium")," map with some simple shapes."),(0,l.kt)("div",{style:{width:"100%",height:"600px",overflow:"hidden"}},(0,l.kt)("iframe",{src:"https://mecsimcalc.com/app/2028570/map_drawing_shapes",width:"100%",height:"100%",title:"MecSimCalc",style:{position:"relative",left:"-45px",top:"-48px"},frameBorder:"0"})),(0,l.kt)("p",null,"To get started, go to ",(0,l.kt)("a",{parentName:"p",href:"https://mecsimcalc.com/create"},"mecsimcalc.com/create"),", click on ",(0,l.kt)("strong",{parentName:"p"},"Maps"),", and select ",(0,l.kt)("strong",{parentName:"p"},"Drawing shapes"),"."),(0,l.kt)("h2",{id:"step-1-inputs"},"Step 1: Inputs"),(0,l.kt)("p",null,"For the inputs, create a ",(0,l.kt)("strong",{parentName:"p"},"Single Select")," with the following properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Name:")," map_tile"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Label:")," Map Tile"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Options:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"OpenStreetMap"),(0,l.kt)("li",{parentName:"ul"},"Stamen Terrain"),(0,l.kt)("li",{parentName:"ul"},"Stamen Toner"),(0,l.kt)("li",{parentName:"ul"},"Stamen Watercolor")))),(0,l.kt)("p",null,"and create a ",(0,l.kt)("strong",{parentName:"p"},"Color Picker")," with the following properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Name:")," color"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Label:")," Shape color"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default value:")," #43BFF5")),(0,l.kt)("h2",{id:"step-2-code"},"Step 2: Code"),(0,l.kt)("h3",{id:"creating-a-map"},"Creating a map"),(0,l.kt)("p",null,"Start by creating a Folium map instance, ",(0,l.kt)("inlineCode",{parentName:"p"},"m")," that has the following attributes:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"location"),": the initial center of the map in latitude and longitude."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"zoom_start"),": the initial zoom level."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tiles"),": map tiles.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Map tiles specify the type of map to use, such as satellite vs. road."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"OpenStreetMap"')," is the standard tile used to see roads."),(0,l.kt)("li",{parentName:"ul"},"See possible map tiles ",(0,l.kt)("a",{parentName:"li",href:"https://python-visualization.github.io/folium/modules.html"},"here"),".")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"m = folium.Map(location=[45.372, -121.6972],\n                zoom_start=15, tiles=inputs['map_tile'])\n")),(0,l.kt)("h3",{id:"adding-shapes"},"Adding shapes"),(0,l.kt)("p",null,"To add shapes to your map, first create the shape and then use ",(0,l.kt)("inlineCode",{parentName:"p"},".add_to(m)")," to add it to your map."),(0,l.kt)("p",null,"Add two ",(0,l.kt)("a",{parentName:"p",href:"https://python-visualization.github.io/folium/modules.html#folium.map.Marker"},(0,l.kt)("inlineCode",{parentName:"a"},"Markers"))," to your map:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"location")," is the marker position in latitude and longitude."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"popup")," shows up when you click on the marker. You can use HTML in the string."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tooltip")," shows up when you hover over the marker."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"icon")," is the optional icon for the marker.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'folium.Marker(\n    [45.372, -121.6972], popup="<i>Italic popup text</i>", tooltip="Click on Marker"\n).add_to(m)\n\nfolium.Marker(  # Marker with icon\n    location=[45.371, -121.683],\n    popup="<b>Bold popup text</b>",\n    tooltip="Click on Marker",\n    icon=folium.Icon(color=inputs[\'color\'], icon="info-sign"),\n).add_to(m)\n')),(0,l.kt)("p",null,"Add a ",(0,l.kt)("a",{parentName:"p",href:"https://python-visualization.github.io/folium/modules.html#folium.vector_layers.PolyLine"},(0,l.kt)("inlineCode",{parentName:"a"},"PolyLine"))," to your map:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"locations")," is the list of points that when connected makes up the line."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"color")," is the color of the line as a hex color code."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tooltip")," shows up when you hover over the PolyLine."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"weight")," is the line thickness."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"opacity")," is the transparency of the line.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"lat_lng_points = [[45.372, -121.6972],\n                    [45.373, -121.6831],\n                    [45.371, -121.683]]\nfolium.PolyLine(locations=lat_lng_points,\n                color=inputs['color'],\n                tooltip=\"PolyLine\",\n                weight=5,  # line thickness\n                opacity=0.8  # transparency\n                ).add_to(m)\n")),(0,l.kt)("p",null,"Add a ",(0,l.kt)("a",{parentName:"p",href:"https://python-visualization.github.io/folium/modules.html#folium.vector_layers.Circle"},(0,l.kt)("inlineCode",{parentName:"a"},"Circle"))," to your map:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"radius")," is the radius of the circle."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"location")," is the center of the circle in latitude and longitude."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tooltip")," shows up when you hover over the Circle."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"popup")," shows up when you click on the circle. You can use HTML in the string."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"color")," is the color of the circle as a hex color code.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'folium.Circle(\n    radius=100,\n    location=[45.372, -121.6972],\n    tooltip="Click on Circle",\n    popup="Circle",\n    color=inputs[\'color\'],\n    fill=False,\n).add_to(m)\n')),(0,l.kt)("h3",{id:"exporting-the-map"},"Exporting the map"),(0,l.kt)("p",null,"Finally to export the map, simply use ",(0,l.kt)("inlineCode",{parentName:"p"},"._repr_html_()")," to convert the Folium map object into HTML that can be displayed in the output step."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'map_html = m._repr_html_()\nreturn {"map": map_html}\n')),(0,l.kt)("h3",{id:"full-code"},"Full code"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import folium\n\n\ndef main(inputs):\n    # Create a folium map\n    m = folium.Map(location=[45.372, -121.6972],\n                   zoom_start=15, tiles=inputs[\'map_tile\'])\n\n    # Add markers to map\n    folium.Marker(\n        [45.372, -121.6972], popup="<i>Italic popup text</i>", tooltip="Click on Marker"\n    ).add_to(m)\n    folium.Marker(  # Marker with icon\n        location=[45.371, -121.683],\n        popup="<b>Bold popup text</b>",\n        tooltip="Click on Marker",\n        icon=folium.Icon(color=inputs[\'color\'], icon="info-sign"),\n    ).add_to(m)\n\n    # Add line shape\n    lat_lng_points = [[45.372, -121.6972],\n                      [45.373, -121.6831],\n                      [45.371, -121.683]]\n    folium.PolyLine(lat_lng_points,\n                    color=inputs[\'color\'],\n                    tooltip="PolyLine",\n                    weight=5,  # line thickness\n                    opacity=0.8  # transparency\n                    ).add_to(m)\n\n    # Add circle shape\n    folium.Circle(\n        radius=100,\n        location=[45.372, -121.6972],\n        tooltip="Click on Circle",\n        popup="Circle",\n        color=inputs[\'color\'],\n        fill=False,\n    ).add_to(m)\n\n    # Export folium map as HTML string\n    map_html = m._repr_html_()\n\n    return {"map": map_html}\n')),(0,l.kt)("h2",{id:"step-3-output"},"Step 3: Output"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"{{ outputs.map }}\n")),(0,l.kt)("div",{style:{textAlign:"center"}},(0,l.kt)("p",null,(0,l.kt)("img",{alt:"img",src:n(2329).Z}))))}s.isMDXComponent=!0},2329:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ex3_map-240e68ebb93d0434b8b1c3e146a0eafd.png"}}]);