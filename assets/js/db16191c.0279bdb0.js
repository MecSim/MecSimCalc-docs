"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[190],{6412:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var i=s(5893),t=s(1151);const l={sidebar_label:"mecsimcalc Library",sidebar_position:100},d="Mecsimcalc v0.1.6 documentation",r={id:"mecsimcalc-library",title:"Mecsimcalc v0.1.6 documentation",description:"This library is designed to provide a set of functions for handling and converting various types of data, such as base64 encoded data, Pandas DataFrames, and Pillow images.",source:"@site/docs/mecsimcalc-library.md",sourceDirName:".",slug:"/mecsimcalc-library",permalink:"/mecsimcalc-library",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_label:"mecsimcalc Library",sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Parallelizing MC Simulation",permalink:"/advanced-applications/mp-monte-carlo"}},c={},a=[{value:"General",id:"general",level:2},{value:"input_to_file",id:"input_to_file",level:3},{value:"Description:",id:"description",level:4},{value:"Arguments:",id:"arguments",level:4},{value:"Raises:",id:"raises",level:4},{value:"Returns:",id:"returns",level:4},{value:"Example:",id:"example",level:4},{value:"metadata_to_filetype",id:"metadata_to_filetype",level:3},{value:"Description:",id:"description-1",level:4},{value:"Arguments:",id:"arguments-1",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"Example:",id:"example-1",level:4},{value:"Text",id:"text",level:2},{value:"string_to_file",id:"string_to_file",level:3},{value:"Description:",id:"description-2",level:4},{value:"Arguments:",id:"arguments-2",level:4},{value:"Raises:",id:"raises-1",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"Example:",id:"example-2",level:4},{value:"Code step:",id:"code-step",level:4},{value:"Outputs step:",id:"outputs-step",level:4},{value:"Spreadsheets",id:"spreadsheets",level:2},{value:"file_to_dataframe",id:"file_to_dataframe",level:3},{value:"Description:",id:"description-3",level:4},{value:"Arguments:",id:"arguments-3",level:4},{value:"Raises:",id:"raises-2",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"Example:",id:"example-3",level:4},{value:"input_to_dataframe",id:"input_to_dataframe",level:3},{value:"Description:",id:"description-4",level:4},{value:"Arguments:",id:"arguments-4",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"Example:",id:"example-4",level:4},{value:"print_dataframe",id:"print_dataframe",level:3},{value:"Description:",id:"description-5",level:4},{value:"Arguments:",id:"arguments-5",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"Example:",id:"example-5",level:4},{value:"Code step:",id:"code-step-1",level:4},{value:"Outputs step:",id:"outputs-step-1",level:4},{value:"Tables",id:"tables",level:2},{value:"table_to_dataframe",id:"table_to_dataframe",level:3},{value:"Description:",id:"description-6",level:4},{value:"Arguments:",id:"arguments-6",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"Example:",id:"example-6",level:4},{value:"print_table",id:"print_table",level:3},{value:"Description:",id:"description-7",level:4},{value:"Arguments:",id:"arguments-7",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"Example:",id:"example-7",level:4},{value:"Code step:",id:"code-step-2",level:4},{value:"Outputs step:",id:"outputs-step-2",level:4},{value:"Images",id:"images",level:2},{value:"file_to_PIL",id:"file_to_pil",level:3},{value:"Description:",id:"description-8",level:4},{value:"Arguments:",id:"arguments-8",level:4},{value:"Raises:",id:"raises-3",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"Example:",id:"example-8",level:4},{value:"Code step:",id:"code-step-3",level:4},{value:"Outputs step:",id:"outputs-step-3",level:4},{value:"input_to_PIL",id:"input_to_pil",level:3},{value:"Description:",id:"description-9",level:4},{value:"Arguments:",id:"arguments-9",level:4},{value:"Returns:",id:"returns-9",level:4},{value:"Example:",id:"example-9",level:4},{value:"print_image",id:"print_image",level:3},{value:"Description:",id:"description-10",level:4},{value:"Arguments:",id:"arguments-10",level:4},{value:"Returns:",id:"returns-10",level:4},{value:"Example:",id:"example-10",level:4},{value:"Code step:",id:"code-step-4",level:4},{value:"Outputs step:",id:"outputs-step-4",level:4},{value:"Plots",id:"plots",level:2},{value:"print_plot",id:"print_plot",level:3},{value:"Description:",id:"description-11",level:4},{value:"Arguments:",id:"arguments-11",level:4},{value:"Returns:",id:"returns-11",level:4},{value:"Example:",id:"example-11",level:4},{value:"Code step:",id:"code-step-5",level:4},{value:"Outputs step:",id:"outputs-step-5",level:4},{value:"Quiz Toolkit",id:"quiz-toolkit",level:2},{value:"append_to_google_sheet",id:"append_to_google_sheet",level:3},{value:"Description:",id:"description-12",level:4},{value:"Arguments:",id:"arguments-12",level:4},{value:"Returns:",id:"returns-12",level:4},{value:"Example:",id:"example-12",level:4},{value:"Code step:",id:"code-step-6",level:4},{value:"send_gmail",id:"send_gmail",level:3},{value:"Description:",id:"description-13",level:4},{value:"Arguments:",id:"arguments-13",level:4},{value:"Returns:",id:"returns-13",level:4},{value:"Example Usage:",id:"example-usage",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"mecsimcalc-v016-documentation",children:"Mecsimcalc v0.1.6 documentation"}),"\n",(0,i.jsx)(n.p,{children:"This library is designed to provide a set of functions for handling and converting various types of data, such as base64 encoded data, Pandas DataFrames, and Pillow images."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils",children:"GitHub Repository"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pypi.org/project/mecsimcalc/",children:"PyPi Page"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,i.jsx)(n.h3,{id:"input_to_file",children:"input_to_file"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/general_utils.py#L7C1-L56C61",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"input_to_file(input_file, metadata = False)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Converts a base64 encoded string into a file object and metadata"}),"\n",(0,i.jsx)(n.h4,{id:"arguments",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"input_file"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"Base64 encoded string, prefixed with metadata"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"metadata"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,i.jsx)(n.td,{children:"Flag to return metadata with the file. (Defaults to False)"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"raises",children:"Raises:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Exception"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ValueError"})})}),(0,i.jsx)(n.td,{children:"If the input string doesn't contain ';base64,' to separate metadata and file data."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Condition"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"io.BytesIO"})})}),(0,i.jsx)(n.td,{children:"The decoded file data (The thing you get when you open a file in Python)"}),(0,i.jsx)(n.td,{children:"metadata is False"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"(io.BytesIO, str)"})})}),(0,i.jsx)(n.td,{children:"The decoded file data and its metadata"}),(0,i.jsx)(n.td,{children:"metadata is True"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  file, metadata = msc.input_to_file(input_file, metadata = True)\n  print(metadata) # data:image/jpeg;base64,\n  print(type(file)) # <class '_io.BytesIO'>\n  return {\"file\":file}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"metadata_to_filetype",children:"metadata_to_filetype"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/general_utils.py#L59C1-L86C21",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"metadata_to_filetype(metadata):\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description-1",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Extracts the file type from the metadata"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-1",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"metadata"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsxs)(n.td,{children:['The metadata string in the form "Data:(MIME type);base64,"(returned from ',(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"input_to_file"})}),")"]})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"str"})})}),(0,i.jsx)(n.td,{children:'The file type (e.g. "jpeg")'})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  file, metadata = msc.input_to_file(input_file, metadata = True)\n  print(metadata) # data:image/jpeg;base64,\n\n  download_file_type = msc.metadata_to_filetype(metadata)\n  print(download_file_type) # jpeg\n  return {\"file\":file}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"text",children:"Text"}),"\n",(0,i.jsx)(n.h3,{id:"string_to_file",children:"string_to_file"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/text_utils.py#L4C1-L67C85",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'string_to_file(\n    text\n    filename= "myfile",\n    download_text = "Download File",\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"description-2",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Generates a downloadable text file containing the given text"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-2",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"text"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"Text to be downloaded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"filename"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'Name of the download file. (Defaults to "myfile")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_text"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'Text to be displayed as the download link. (Defaults to "Download File")'})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"raises-1",children:"Raises:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Exception"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"TypeError"})})}),(0,i.jsx)(n.td,{children:"If the input text is not a string."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"str"})})}),(0,i.jsx)(n.td,{children:"HTML download link"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example:"}),"\n",(0,i.jsx)(n.h4,{id:"code-step",children:"Code step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n  download_link = msc.string_to_file("Hello World!")\n  return {"download":download_link}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"outputs-step",children:"Outputs step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# outputs.downloadLink is the html download link generated by the function\n{{ outputs.download }}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"spreadsheets",children:"Spreadsheets"}),"\n",(0,i.jsx)(n.h3,{id:"file_to_dataframe",children:"file_to_dataframe"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/spreadsheet_utils.py#L9C1-L48C14",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"file_to_dataframe(file_data):\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description-3",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Converts a base64 encoded file data into a pandas DataFrame"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-3",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"file_data"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"io.BytesIO"})}),(0,i.jsxs)(n.td,{children:["Decoded file data (e.g. from ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"input_to_file"})}),")"]})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"raises-2",children:"Raises:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Exception"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pd.errors.ParserError"})})}),(0,i.jsx)(n.td,{children:"If the file data cannot be converted to a DataFrame (i.e. file is not an Excel or CSV file or is corrupted)"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pd.DataFrame"})})}),(0,i.jsx)(n.td,{children:"DataFrame created from file data"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-3",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  decoded_file = msc.input_to_file(input_file)\n  df = msc.file_to_dataframe(decoded_file)\n  print(df)\n  #    A  B  C\n  # 0  a  b  c\n  # 1  d  e  f\n  return {\"df\":df}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"input_to_dataframe",children:"input_to_dataframe"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/spreadsheet_utils.py#L51C1-L87C44",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"input_to_dataframe(file):\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description-4",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Converts a base64 encoded file data into a pandas DataFrame"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-4",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"input_file"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"Base64 encoded file data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"get_file_type"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"bool"})}),(0,i.jsx)(n.td,{children:"If True, the function also returns the file type (Defaults to False)"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Condition"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pd.DataFrame"})})}),(0,i.jsx)(n.td,{children:"DataFrame created from file data"}),(0,i.jsx)(n.td,{children:"get_file_type is False"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"(pd.DataFrame, str)"})})}),(0,i.jsx)(n.td,{children:"Tuple containing the DataFrame and the file type"}),(0,i.jsx)(n.td,{children:"get_file_type is True"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"example-4",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  df, file_type = msc.input_to_dataframe(input_file, get_file_type = True)\n  print(df)\n  #    A  B  C\n  # 0  a  b  c\n  # 1  d  e  f\n  print(file_type) # csv\n  return {\"df\":df}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"print_dataframe",children:"print_dataframe"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/spreadsheet_utils.py#L90C1-L186C39",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'print_dataframe(\n    df,\n    download = False,\n    download_text = "Download Table",\n    download_file_name = "mytable",\n    download_file_type = "csv",\n):\n'})}),"\n",(0,i.jsx)(n.h4,{id:"description-5",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Creates an HTML table and a download link for a given DataFrame"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-5",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"df"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"pd.DataFrame"})}),(0,i.jsx)(n.td,{children:"DataFrame to be converted"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,i.jsx)(n.td,{children:"If True, function returns a download link (Defaults to False)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_text"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'Text to be displayed as the download link (Defaults to "Download Table")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_file_name"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'Name of file when downloaded (Defaults to "mytable")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_file_type"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'File type of downloaded file (Defaults to "csv")'})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Condition"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"str"})})}),(0,i.jsx)(n.td,{children:"HTML table"}),(0,i.jsx)(n.td,{children:"download is False"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Tuple[str, str]"})})}),(0,i.jsx)(n.td,{children:"(HTML table, HTML download link)"}),(0,i.jsx)(n.td,{children:"download is True"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"example-5",children:"Example:"}),"\n",(0,i.jsx)(n.h4,{id:"code-step-1",children:"Code step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs[\'file\']\n  df = msc.input_to_dataframe(input_file)\n  table, download = msc.print_dataframe(df, download=True, download_file_name="FunkyTable", download_text="Download My Funky Table HERE!", download_file_type="xlsx")\n  return {\n    "table":table,\n    "download":download,\n  }\n'})}),"\n",(0,i.jsx)(n.h4,{id:"outputs-step-1",children:"Outputs step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# outputs.table is the HTML table\nDisplaying Table\n{{ outputs.table }}\n\n# outputs.download is the download link\nDownloading Table\n{{ outputs.download }}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"tables",children:"Tables"}),"\n",(0,i.jsx)(n.h3,{id:"table_to_dataframe",children:"table_to_dataframe"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/table_utils.py#L5C1-L44C54",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"table_to_dataframe(column_headers, rows) -> pd.DataFrame:\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description-6",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Create a DataFrame from given rows and column headers"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-6",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"column_headers"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"List[str]"})}),(0,i.jsx)(n.td,{children:"List of column headers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"rows"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"List[List[str]]"})}),(0,i.jsx)(n.td,{children:"List of rows to be converted into a DataFrame. Each column is a list of strings"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-6",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pd.DataFrame"})})}),(0,i.jsx)(n.td,{children:"DataFrame created from headers and rows"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-6",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n  column_headers = ["A", "B", "C"]\n  rows = [["a", "b", "c"], ["d", "e", "f"]]\n  df = msc.table_to_dataframe(column_headers, rows)\n  print(df)\n  #    A  B  C\n  # 0  a  b  c\n  # 1  d  e  f\n  return {"df":df}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"print_table",children:"print_table"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/table_utils.py#L47C1-L79C58",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"print_table(column_headers, rows):\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description-7",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Creates an HTML table from given rows and column headers"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-7",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"column_headers"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"List[str]"})}),(0,i.jsx)(n.td,{children:"List of column headers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"rows"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"List[List[str]]"})}),(0,i.jsx)(n.td,{children:"List of rows to be converted into a table. Each column is a list of strings"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"index"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,i.jsx)(n.td,{children:"Whether to use the first column as the DataFrame's index. (Defaults to True)"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-7",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"str"})})}),(0,i.jsx)(n.td,{children:"HTML table created from rows and headers"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-7",children:"Example:"}),"\n",(0,i.jsx)(n.h4,{id:"code-step-2",children:"Code step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n  column_headers = ["A", "B", "C"]\n  rows = [["a", "b", "c"], ["d", "e", "f"]]\n  table = msc.print_table(column_headers, rows)\n  return {"table":table}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"outputs-step-2",children:"Outputs step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# outputs.table is the HTML table\nDisplaying Table\n{{ outputs.table }}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"images",children:"Images"}),"\n",(0,i.jsx)(n.h3,{id:"file_to_pil",children:"file_to_PIL"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/image_utils.py#L23C1-L51C88",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"file_to_PIL(file):\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description-8",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Transforms a file into a Pillow Image object"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-8",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"file"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"Decoded file data (returned from input_to_file)"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"raises-3",children:"Raises:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Exception Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ValueError"})})}),(0,i.jsx)(n.td,{children:"If the file does not contain image data"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-8",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Image"})})}),(0,i.jsx)(n.td,{children:"Pillow Image object"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-8",children:"Example:"}),"\n",(0,i.jsx)(n.h4,{id:"code-step-3",children:"Code step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  decoded_file = msc.input_to_file(input_file)\n  image = msc.file_to_PIL(decoded_file)\n  return {\"image\":image}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"outputs-step-3",children:"Outputs step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# outputs.image is the Pillow Image object\nDisplaying Image\n{{ outputs.image }}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"input_to_pil",children:"input_to_PIL"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/image_utils.py#L54C1-L102C17",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"input_to_PIL(input_file, get_file_type=False):\n"})}),"\n",(0,i.jsx)(n.h4,{id:"description-9",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Converts a base64 encoded file data into a pillow image"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-9",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"input_file"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"Base64 encoded file data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"get_file_type"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"bool"})}),(0,i.jsx)(n.td,{children:"If True, the function also returns the file type (Defaults to False)"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-9",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Condition"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"PIL.Image.Image"})})}),(0,i.jsx)(n.td,{children:"Pillow Image object"}),(0,i.jsx)(n.td,{children:"get_file_type is False"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Tuple[PIL.Image.Image, str]"})})}),(0,i.jsx)(n.td,{children:"(pillow image, metadata)"}),(0,i.jsx)(n.td,{children:"get_file_type is True"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"example-9",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  image, file_type = msc.input_to_PIL(input_file, get_file_type=True)\n  print(file_type) # jpeg\n  print(type(image)) # <class 'PIL.JpegImagePlugin.JpegImageFile'>\n  return {\"image\":image}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"print_image",children:"print_image"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/image_utils.py#L105C1-L213C36",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'print_image(\n    image,\n    width = 200,\n    height = 200,\n    original_size = False,\n    download = False,\n    download_text = "Download Image",\n    download_file_name= "myimg",\n    download_file_type = "png",\n):\n'})}),"\n",(0,i.jsx)(n.h4,{id:"description-10",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Transforms a Pillow image into an HTML image, with an optional download link"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-10",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"image"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"PIL.Image.Image"})}),(0,i.jsx)(n.td,{children:"Pillow image"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"width"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,i.jsx)(n.td,{children:"Output width of the image in pixels (Defaults to 200)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"height"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,i.jsx)(n.td,{children:"Output height of the image in pixels (Defaults to 200)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"original_size"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,i.jsx)(n.td,{children:"If True, the HTML image will be displayed in its original size (Defaults to False)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,i.jsx)(n.td,{children:"If True, function returns a download link (Defaults to False)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_text"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'The text to be displayed on the download link (Defaults to "Download Image")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_file_name"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'The name of the image file when downloaded (Defaults to "myimg")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_file_type"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'The file type of the image when downloaded (Defaults to "png")'})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-10",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Condition"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"str"})})}),(0,i.jsx)(n.td,{children:"HTML image"}),(0,i.jsx)(n.td,{children:"download is False"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Tuple[str, str]"})})}),(0,i.jsx)(n.td,{children:"(HTML image, download link)"}),(0,i.jsx)(n.td,{children:"download is True"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"example-10",children:"Example:"}),"\n",(0,i.jsx)(n.h4,{id:"code-step-4",children:"Code step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs[\'file\']\n  image, metadata = msc.input_to_PIL(input_file)\n  html_image, download = msc.print_image(image, original_size=True, download=True, download_text="Download Image Here", download_file_name="myimage", download_file_type="jpeg")\n  return {\n    "image":html_image,\n    "download":download,\n  }\n'})}),"\n",(0,i.jsx)(n.h4,{id:"outputs-step-4",children:"Outputs step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# outputs.image is the HTML image\nDisplaying Image\n{{ outputs.image }}\n\n# outputs.download is the download link\nDownloading Image\n{{ outputs.download }}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"plots",children:"Plots"}),"\n",(0,i.jsx)(n.h3,{id:"print_plot",children:"print_plot"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/plotting_utils.py#L9C1-L99C35",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'print_plot(\n    plot_obj,\n    width = 500,\n    dpi= 100,\n    download= False,\n    download_text = "Download Plot",\n    download_file_name = "myplot",\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"description-11",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Converts a matplotlib.pyplot.axis or matplotlib.figure into an HTML image tag and optionally provides a download link for the image"}),"\n",(0,i.jsx)(n.h4,{id:"arguments-11",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"plot_obj"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"axes or figure"})}),(0,i.jsx)(n.td,{children:"Matplotlib figure"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"width"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,i.jsx)(n.td,{children:"Output width of the image in pixels (Defaults to 500)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dpi"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,i.jsx)(n.td,{children:"Output dpi of the image in pixels (Defaults to 100)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,i.jsx)(n.td,{children:"If True, function returns a download link (Defaults to False)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_text"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'The text to be displayed on the download link (Defaults to "Download Plot")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"download_file_name"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:'The name of the image file when downloaded (Defaults to "myplot")'})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-11",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Condition"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"str"})})}),(0,i.jsx)(n.td,{children:"HTML image"}),(0,i.jsx)(n.td,{children:"download is False"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Tuple[str, str]"})})}),(0,i.jsx)(n.td,{children:"(HTML image, HTML download link)"}),(0,i.jsx)(n.td,{children:"download is True"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"example-11",children:"Example:"}),"\n",(0,i.jsx)(n.h4,{id:"code-step-5",children:"Code step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import matplotlib.pyplot as plt\nimport numpy as np\nimport mecsimcalc as msc\n\ndef main(inputs):\n  x = np.linspace(0, 2 * np.pi, 400)\n  y = np.sin(x)\n  fig, ax = plt.subplots()\n  ax.plot(x, y)\n  ax.set_title(\'A single plot\')\n  image, download = msc.print_plot(fig, width=500, dpi=100, download=True, download_text="Download Sin Function Plot", download_file_name="sin(x)")\n  return {\n    "image":image,\n    "download":download,\n  }\n'})}),"\n",(0,i.jsx)(n.h4,{id:"outputs-step-5",children:"Outputs step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# outputs.image is the HTML image\nDisplaying Image\n{{ outputs.image }}\n\n# outputs.download is the download link\nDownloading Image\n{{ outputs.download }}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"quiz-toolkit",children:"Quiz Toolkit"}),"\n",(0,i.jsx)(n.h3,{id:"append_to_google_sheet",children:"append_to_google_sheet"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/quiz_utils.py#L12",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'append_to_google_sheet(\n    service_account_info = {...},\n    spreadsheet_id = "123abc...",\n    values = [["name", 12837, ...]],\n    range_name = \'Sheet1!A1\',\n    include_timestamp = True\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"description-12",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"This function appends given values to a specified Google Sheet and optionally includes a current timestamp with each entry. It transforms data into a Google Sheets document, facilitating dynamic data entry directly from your application."}),"\n",(0,i.jsx)(n.h4,{id:"arguments-12",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"service_account_info"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"dict"})}),(0,i.jsx)(n.td,{children:"The service account credentials used for Google Sheets API authentication."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"spreadsheet_id"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"The unique identifier of the target Google Spreadsheet."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"values"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"list of lists"})}),(0,i.jsx)(n.td,{children:"The data to append. Each list element represents a row of data."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"range_name"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,i.jsx)(n.td,{children:"The A1 notation of the range to start appending data (Defaults to 'Sheet1!A1')."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"include_timestamp"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,i.jsx)(n.td,{children:"If True, appends the current timestamp to each row of data (Defaults to True)."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-12",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dict"})})}),(0,i.jsx)(n.td,{children:"The response from the Google Sheets API, containing details of the append operation."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-12",children:"Example:"}),"\n",(0,i.jsx)(n.h4,{id:"code-step-6",children:"Code step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n    service_account_info = {\n        # Your service account info here\n    }\n    spreadsheet_id = 'your_spreadsheet_id_here'\n    values = [\n    [ inputs['input_1'], inputs['input_2'], inputs['input_3'] ],\n    ]    \n    result = msc.append_to_google_sheet(service_account_info, spreadsheet_id, values)\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"send_gmail",children:"send_gmail"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/mecsimcalc/quiz_utils.py#L124",children:(0,i.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'send_gmail(\n\tsender_email=\'sender@example.com\', \n\treceiver_email=\'receiver@example.com\', \n\tsubject="Quiz", \n\tapp_password = "xxxx xxxx xxxx xxxx", \n\tvalues = [\n\t["name", "grade"]\n\t]\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"description-13",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"This function sends an email with specified values formatted in the message body, utilizing a service account for authentication."}),"\n",(0,i.jsx)(n.h4,{id:"arguments-13",children:"Arguments:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"sender_email"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"The email address of the sender."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"receiver_email"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"The email address of the receiver."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"subject"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"The subject line of the email."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"app_password"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"str"})}),(0,i.jsx)(n.td,{children:"The app-specific password for the sender's email account."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"values"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"list"})}),(0,i.jsx)(n.td,{children:"A list of lists. Each list contains data to be included in the email body."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-13",children:"Returns:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Return Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"bool"})})}),(0,i.jsx)(n.td,{children:"Returns True if the email was sent successfully, otherwise False."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"example-usage",children:"Example Usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Example code to use the send_gmail function\nimport mecsimcalc as msc\n\ndef main(inputs):\n    # Define parameters\n    sender_email = 'sender@example.com'\n    receiver_email = 'receiver@example.com'\n    subject = 'Test Email'\n    app_password = 'your_app_password_here'\n    \n    name = inputs['name']\n    grade = inputs['grade']\n    \n    values = [\n    [name, grade]\n    ]\n\n    # Send the email\n    msc.send_gmail(sender_email, receiver_email, subject, app_password, values)\n\n"})})]})}function o(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>d});var i=s(7294);const t={},l=i.createContext(t);function d(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);