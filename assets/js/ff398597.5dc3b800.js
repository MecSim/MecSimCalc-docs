"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[6120],{9676:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var n=l(5893),i=l(1151);const o={sidebar_label:"Plots",sidebar_position:2},s="Plots",r={id:"output/plots",title:"Plots",description:"MecSimCalc supports the two most popular plotting libraries:",source:"@site/docs/output/plots.md",sourceDirName:"output",slug:"/output/plots",permalink:"/output/plots",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Plots",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/output/overview"},next:{title:"Animated Plots",permalink:"/output/animated-plots"}},a={},p=[{value:"Matplotlib",id:"matplotlib",level:2},{value:"Code",id:"code",level:3},{value:"Output",id:"output",level:3},{value:"Plotly",id:"plotly",level:2},{value:"Code",id:"code-1",level:3},{value:"Output",id:"output-1",level:3},{value:"Plotly Slider",id:"plotly-slider",level:3},{value:"Code",id:"code-2",level:3},{value:"Output",id:"output-2",level:3}];function c(t){const e={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"plots",children:"Plots"})}),"\n",(0,n.jsx)(e.p,{children:"MecSimCalc supports the two most popular plotting libraries:"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsx)(e.li,{children:"Matplotlib"}),"\n",(0,n.jsx)(e.li,{children:"Plotly"}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"matplotlib",children:"Matplotlib"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsx)(e.p,{children:"Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python."}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Visit ",(0,n.jsx)(e.a,{href:"https://matplotlib.org/",children:"matplotlib.org"})," for full documentation on how to use Matplotlib:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://matplotlib.org/stable/users/index.html",children:"Users guide"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://matplotlib.org/stable/api/index.html",children:"Reference"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://matplotlib.org/stable/tutorials/index.html",children:"Tutorials"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Once your Matplotlib figure is ready to be displayed, convert it to a HTML string using the mecsimcalc library as follows:"}),"\n",(0,n.jsx)(e.h3,{id:"code",children:"Code"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:'import matplotlib.pyplot as plt\nimport numpy as np\nimport mecsimcalc as msc\n\n\ndef main(inputs):\n    # Create matplotlib figure\n    x = np.arange(0, 2, 0.01)\n    y = 2*(np.cos(4*x))\n    plt.plot(x, y)\n\n    # Convert figure to html using msc.print_plot()\n    plot_html = msc.print_plot(plt)\n    return {"plot": plot_html}\n'})}),"\n",(0,n.jsx)(e.h3,{id:"output",children:"Output"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-html",children:"{{ outputs.plot }}\n"})}),"\n",(0,n.jsxs)(e.p,{children:["See ",(0,n.jsx)(e.a,{href:"../getting-started/example-2",children:"Example 2"})," in the introduction section for a detailed example on using Matplotlib."]}),"\n",(0,n.jsx)(e.h2,{id:"plotly",children:"Plotly"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsx)(e.p,{children:"Plotly's Python graphing library makes interactive, publication-quality graphs."}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Visit ",(0,n.jsx)(e.a,{href:"https://plotly.com/python/",children:"plotly.com/python"})," for full documentation on how to use Plotly:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://plotly.com/python-api-reference/",children:"Reference"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://plotly.com/python/plotly-fundamentals/",children:"Fundamentals"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Once your Plotly figure is ready to be displayed, convert it to a HTML string that can be embedded into the outputs step. As follows:"}),"\n",(0,n.jsx)(e.h3,{id:"code-1",children:"Code"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:'import plotly.express as px\nimport pandas as pd\nimport numpy as np\n\n\ndef main(inputs):\n    # Create plotly figure\n    x = np.arange(0, 2, 0.01)\n    y = 2*(np.cos(4*x))\n    fig = px.line(x, y, title="Cosine")\n\n    # Convert figure to html using to_html()\n    plot_html = fig.to_html(include_plotlyjs=True, full_html=False)\n    return {"plot": plot_html}\n'})}),"\n",(0,n.jsx)(e.admonition,{type:"caution",children:(0,n.jsxs)(e.p,{children:["In ",(0,n.jsx)(e.code,{children:".to_html()"}),", ",(0,n.jsx)(e.code,{children:"include_plotlyjs"})," must be set to ",(0,n.jsx)(e.code,{children:"True"})," for the plot to be displayed."]})}),"\n",(0,n.jsx)(e.h3,{id:"output-1",children:"Output"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-html",children:"{{ outputs.plot }}\n"})}),"\n",(0,n.jsx)(e.h3,{id:"plotly-slider",children:"Plotly Slider"}),"\n",(0,n.jsx)(e.p,{children:"Plotly is a plotting library similar to Matplotlib, but it also supports interactive plots. The MecSimCalc library provides a function to simplify creating a plotly figure with a slider."}),"\n",(0,n.jsxs)(e.p,{children:["MecSimCalc's ",(0,n.jsx)(e.code,{children:"plot_slider"})," function takes in a function as an argument and returns the plotly figure with a slider. The function has two arguments: the first argument is the value of the slider, and the second argument is the x value."]}),"\n",(0,n.jsx)(e.h3,{id:"code-2",children:"Code"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef parabola(a, x): # a is the value of the slider\n    return a * x ** 2\n\ndef main(inputs):\n    a = inputs['a'] # initial value of the slider\n    plot_html = msc.plot_slider(parabola, x_range=(-10, 10), y_range=(-100, 100), initial_value=a, slider_range=(-10,10))\n    return {\"plot\": plot_html}\n"})}),"\n",(0,n.jsx)(e.h3,{id:"output-2",children:"Output"}),"\n",(0,n.jsx)("div",{style:{width:"100%",height:"550px",overflow:"hidden"},children:(0,n.jsx)("iframe",{src:"https://mecsimcalc.com/app/1422118/plotly_slider_parabola",style:{position:"relative",left:"-45px",top:"-48px"},width:"100%",height:"550",title:"MecSimCalc",frameBorder:"0"})})]})}function d(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(c,{...t})}):c(t)}},1151:(t,e,l)=>{l.d(e,{Z:()=>r,a:()=>s});var n=l(7294);const i={},o=n.createContext(i);function s(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),n.createElement(o.Provider,{value:e},t.children)}}}]);