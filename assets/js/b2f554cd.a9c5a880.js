"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"release-11-2023","metadata":{"permalink":"/blog/release-11-2023","source":"@site/blog/2023-11-07-release.md","title":"\ud83d\ude80 Exciting New Features","description":"Hello MecSimCalc Community \ud83d\udc4b,","date":"2023-11-07T00:00:00.000Z","formattedDate":"November 7, 2023","tags":[{"label":"Product Update","permalink":"/blog/tags/product-update"}],"readingTime":1.585,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"release-11-2023","title":"\ud83d\ude80 Exciting New Features","tags":["Product Update"]},"nextItem":{"title":"Streamlit vs. MecSimCalc","permalink":"/blog/vs-streamlit-2023"}},"content":"Hello MecSimCalc Community \ud83d\udc4b,\\n\\nWe\'re thrilled to introduce you to a wave of game-changing features that will transform your MecSimCalc experience. Our team of dedicated developers has been hard at work, and we can\'t wait to share what\'s new with you.\\n\\n## 1. App Monetization \ud83d\udcb8\\n\\nMecSimCalc has partnered with Stripe payments, opening up a world of opportunities for our app developers. Now, even with a free account, you can start earning by charging users a monthly fee.\\n\\n### [Start monetizing!](https://docs.mecsimcalc.com/monetization)\\n\\n## 2. More Compute Resources \ud83d\udda5\ufe0f\\n\\nDo you crave more CPU power, memory, and storage? We\'ve rebuilt our infrastructure from the ground up, giving you the power to configure the resources you need for each app execution. It\'s as simple as selecting your preferences above the \'Submit App\' button. Start maximizing your computing capabilities today.\\n\\n## 3. Enhanced Developer Tools \ud83d\udee0\ufe0f\\n\\nWe\'ve been listening to your feedback and are excited to unveil a set of features that take your development experience to the next level. Some highlights include:\\n\\n1. **Custom Python Environments:** Install any Python 3 version and pip install any Python package. You can even add files to the filesystem. [**Learn more**](https://docs.mecsimcalc.com/code/environments).\\n2. **Private Apps:** Share your apps with a select group of users. [**Learn more**](https://docs.mecsimcalc.com/getting-started/quick-overview#sharing)\\n3. **Conditional Inputs:** Create interactive apps with inputs that dynamically appear and disappear as users interact. [**Learn more**](https://docs.mecsimcalc.com/inputs/conditional-input)\\n4. **Dynamic Tables:** Allow users to add more rows on-the-fly, unleashing the potential of your input groups. [**Learn more**](https://docs.mecsimcalc.com/inputs/table-group#dynamic-table)\\n5. **AI Chatbot:** Simplify app creation with our new AI chatbot. [**Learn more**](https://docs.mecsimcalc.com/getting-started/create#create-using-ai)\\n6. **New Tabs Layout:** Display input groups as tabs for a more streamlined app experience.\\n\\nExplore all the new developer features [here](https://mecsimcalc.com/pricing) and kickstart your journey with a 30-day free trial!\\n\\n### \u2728 [Get started!](https://mecsimcalc.com/pricing) \u2728\\n\\nWe can\'t wait to see the incredible creations you\'ll build with these new tools. Keep innovating, keep creating!\\n\\nYours truly,<br/>\\nThe MecSimCalc Team"},{"id":"vs-streamlit-2023","metadata":{"permalink":"/blog/vs-streamlit-2023","source":"@site/blog/2023-10-23-vs-streamlit.md","title":"Streamlit vs. MecSimCalc","description":"Banner","date":"2023-10-23T00:00:00.000Z","formattedDate":"October 23, 2023","tags":[{"label":"Compare","permalink":"/blog/tags/compare"}],"readingTime":4.73,"hasTruncateMarker":false,"authors":[{"name":"Weichen Qiu","title":"MecSimCalc Co-founder","url":"https://github.com/w3ichen","imageURL":"https://avatars.githubusercontent.com/u/57570491","key":"wqiu"}],"frontMatter":{"slug":"vs-streamlit-2023","title":"Streamlit vs. MecSimCalc","authors":["wqiu"],"tags":["Compare"]},"prevItem":{"title":"\ud83d\ude80 Exciting New Features","permalink":"/blog/release-11-2023"},"nextItem":{"title":"Anvil vs. MecSimCalc","permalink":"/blog/vs-anvil-works-2023"}},"content":"![Banner](/blog/compare/vs_streamlit_banner.jpg)\\n\\nStreamlit and MecSimCalc both offer solutions to simplify app development and data visualization with Python. However, they cater to different user bases and provide unique features. In this article, we\'ll delve into a detailed comparison between Streamlit and MecSimCalc.\\n\\n## Overview\\n\\nLet\'s start with an overview of both platforms.\\n\\n| Feature            | Streamlit                                                                                                                                                           | MecSimCalc                                                                                                            |\\n| ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |\\n| Website            | [Streamlit](https://streamlit.io/)                                                                                                                                  | [MecSimCalc](https://mecsimcalc.com/)                                                                                 |\\n| Description        | \\"A faster way to build and share data apps. Streamlit turns data scripts into shareable web apps in minutes. All in pure Python. No front\u2011end experience required.\\" | \\"The simplest way to build and share computational tools. Create and share your Python web apps in minutes for free.\\" |\\n| Target Audience    | Python developers                                                                                                                                                   | Python developers and non-technical users                                                                             |\\n| Required Knowledge | Python, Terminal, GitHub, Markdown, Streamlit library                                                                                                               | Python                                                                                                                |\\n| Ideal Use Case     | Data visualization                                                                                                                                                  | Computational simulation and calculation                                                                              |\\n| Cost               | Free                                                                                                                                                                | Free                                                                                                                  |\\n\\n## Features Comparison\\n\\nNow, let\'s explore the specific features and functionalities of both Streamlit and MecSimCalc.\\n\\n| Feature                    | Streamlit                                                | MecSimCalc                                                   |\\n| -------------------------- | -------------------------------------------------------- | ------------------------------------------------------------ |\\n| Documentation              | [docs.streamlit.io](https://docs.streamlit.io)           | [docs.mecsimcalc.com](https://docs.mecsimcalc.com)           |\\n| Blog                       | [blog.streamlit.io](https://blog.streamlit.io)           | [docs.mecsimcalc.com/blog](https://docs.mecsimcalc.com/blog) |\\n| Discourse Forum            | [streamlit.io/community](https://streamlit.io/community) | [community.mecsimcalc.com](https://community.mecsimcalc.com) |\\n| Download Required          | Yes                                                      | No                                                           |\\n| Custom Code Syntax         | Yes, requires custom `streamlit` functions               | No, works with plain Python                                  |\\n| Resource Limits            | 1 GB RAM, sleeps after 7 days of inactivity              | 7 days, 16 vCPUs, 120 GB RAM, 200GB disk space               |\\n| Monetize Apps              | :x:                                                      | :white_check_mark:                                           |\\n| Conditional Inputs         | :white_check_mark:                                       | :white_check_mark:                                           |\\n| Dynamic Tables             | :white_check_mark:                                       | :white_check_mark:                                           |\\n| Interactivity & Animations | :white_check_mark:                                       | :x:                                                          |\\n| Plotting                   | :white_check_mark:                                       | :white_check_mark:                                           |\\n| Maps                       | :white_check_mark:                                       | :white_check_mark:                                           |\\n| Embeddable                 | :white_check_mark:                                       | :white_check_mark:                                           |\\n| Drag-and-drop interface    | :x:                                                      | :white_check_mark:                                           |\\n| Run in Background          | :x:                                                      | :white_check_mark:                                           |\\n\\n## The Workflow\\n\\nNext, we will briefly explore the workflow of both Streamlit and MecSimCalc, from creating an app to deploying it.\\n\\n### Streamlit\\n\\nInternally, Streamlit uses Tornado as its web server. Streamlit runs on websockets, making it suitable for interactive real-time applications.\\n\\nHere is a simplified workflow for creating and deploying a basic Streamlit app:\\n\\n**Step 1:** Download and start streamlit via the terminal:\\n\\n```bash\\n# Prerequisite: download Python and pip, if not already installed\\npip install streamlit\\ntouch my_app.py\\nstreamlit run my_app.py\\n```\\n\\nAfter running `streamlit run`, a new tab will open in your browser with the app running at a `localhost` url. All the coding will be done locally on your computer and edits in `my_app.py` will automatically be reflected in the browser.\\n\\n**Step 2:** Write the Streamlit code inside `my_app.py`. Refer to Streamlit docs for custom `st` functions required to build the interface and layout.\\n\\n```python\\n# my_app.py\\n\\nimport streamlit as st\\n\\nst.write(\\"# a+b\\")\\n\\ncol1, col2, col3 = st.columns([6, 1, 6])\\nwith col1:\\n    a = st.number_input(\\"a\\", value=12)\\nwith col2:\\n    st.write(\\"# +\\")\\nwith col3:\\n    b = st.number_input(\\"b\\", value=34)\\n\\nsum = a + b\\nproduct = a * b\\n\\nst.write(\\"The sum of the two numbers is \\" + str(sum))\\nst.write(\\"The product of the two numbers is \\" + str(product))\\n```\\n\\n**Step 3:** The inputs, code, and outputs are all handled in the single Python file. The localhost webpage looks like this:\\n![Streamlit app](/blog/compare/streamlit_app.png)\\n\\n**Step 4:** Before deploying the app, first create a [Github](https://github.com/) account and a new Github repository. Then save the code to the repository by downloading and using the Github desktop app or using the terminal:\\n\\n```bash\\ngit add .\\ngit commit -m \\"saving my_app.py\\"\\ngit push\\n```\\n\\n**Step 4:** Finally, to deploy the app to Streamlit cloud, create a streamlit cloud account and fill out the _Deploy an app_ form with the Github repository link. Once submitted, the app will build for a few minutes before becoming accessible at a streamlit url.\\n\\n<div style={{ width:\\"100%\\", overflow: \\"hidden\\" }}>\\n<video muted=\\"\\" loop=\\"\\" controls style={{ width:\\"100%\\", overflow: \\"hidden\\" }}>\\n    <source src=\\"https://s3-us-west-2.amazonaws.com/assets.streamlit.io/videos/streamlit_sharing_silent.mp4\\"/>\\n</video>\\n</div>\\n\\n### MecSimCalc\\n\\nInternally, MecSimCalc uses serverless functions to run Python functions, make it suitable for computational simulation and calculation, which may require more computing power and longer runtimes.\\n\\nHere is a simplified workflow for creating and deploying a basic MecSimCalc app:\\n\\n**Step 1:** Visit https://mecsimcalc.com/create and select one of the templates to create a new app.\\n![Create page](/blog/compare/mecsimcalc_create.png)\\n\\n**Step 2:** On the inputs step, use the drag and drop interface to add, delete, and position the inputs. Edit the each input by clicking on it.\\n![Inputs step](/blog/compare/mecsimcalc_inputs.png)\\n![Edit inputs](/blog/compare/mecsimcalc_edit_inputs.png)\\n\\n**Step 3:** On the code step, write the Python code that uses the `inputs` to calculate the output. No need for custom functions nor installations. The toolbar on the right allows for installing Python packages, debugging the code, and seeing the input variables.\\n![Code step](/blog/compare/mecsimcalc_code.png)\\n\\n**Step 4:** On the outputs step, use the rich text editor to stylize the outputs and embed the outputs variables from the code.\\n![Outputs step](/blog/compare/mecsimcalc_outputs.png)\\n\\n**Step 5:** Finally, to deploy the app, simply click on the _Publish_ button at the bottom of the Preview step and the app will be accessible at a MecSimCalc url within a few seconds.\\n![Publish](/blog/compare/mecsimcalc_publish.png)\\n\\nThis is the final app:\\n![MecSimCalc app](/blog/compare/mecsimcalc_app.png)\\n\\n## Conclusion\\n\\nStreamlit and MecSimCalc offer solutions to different segments of users. Streamlit is designed for developers who want to create interactive data apps rapidly but may require familiarity with custom Streamlit functions and terminal/Github integration. On the other hand, MecSimCalc is tailored for non-technical users, eliminating the need to change existing Python codes and works in-browser."},{"id":"vs-anvil-works-2023","metadata":{"permalink":"/blog/vs-anvil-works-2023","source":"@site/blog/2023-10-22-vs-anvil-works.md","title":"Anvil vs. MecSimCalc","description":"Banner","date":"2023-10-22T00:00:00.000Z","formattedDate":"October 22, 2023","tags":[{"label":"Compare","permalink":"/blog/tags/compare"}],"readingTime":4.175,"hasTruncateMarker":false,"authors":[{"name":"Weichen Qiu","title":"MecSimCalc Co-founder","url":"https://github.com/w3ichen","imageURL":"https://avatars.githubusercontent.com/u/57570491","key":"wqiu"}],"frontMatter":{"slug":"vs-anvil-works-2023","title":"Anvil vs. MecSimCalc","authors":["wqiu"],"tags":["Compare"]},"prevItem":{"title":"Streamlit vs. MecSimCalc","permalink":"/blog/vs-streamlit-2023"},"nextItem":{"title":"MecSimCalc Hackathon 5.0 (January 21st - January 28th, 2023) Winners","permalink":"/blog/Comp01212023-Winners"}},"content":"![Banner](/blog/compare/vs_anvil_banner.jpg)\\n\\nIn today\'s fast-paced digital world, the ability to develop web applications quickly and efficiently can make a significant difference for businesses and developers alike. Anvil and MecSimCalc are two tools that aim to simplify web app development, offering the power of Python without the complexity of traditional web development. In this article, we will compare Anvil and MecSimCalc across various dimensions to help you choose the one that best suits your needs.\\n\\n## Overview\\n\\nBefore diving into the technical details, let\'s take a look at the basic information.\\n\\n| Feature            | Anvil                                                                                                                                                   | MecSimCalc                                                                                                            |\\n| ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |\\n| Website            | [Anvil Works](https://anvil.works/)                                                                                                                     | [MecSimCalc](https://mecsimcalc.com/)                                                                                 |\\n| Description        | \\"Build web apps with nothing but Python. Build seriously powerful web apps with all the flexibility of Python. No web development experience required.\\" | \\"The simplest way to build and share computational tools. Create and share your Python web apps in minutes for free.\\" |\\n| Target Audience    | Enterprise                                                                                                                                              | Designed for non-technical users                                                                                      |\\n| Required Knowledge | Python, Anvil library                                                                                                                                   | Python                                                                                                                |\\n| Ideal Use Case     | Business websites with database                                                                                                                         | Computational simulation and calculation                                                                              |\\n| Cost               | Free                                                                                                                                                    | Free                                                                                                                  |\\n\\n## Features Comparison\\n\\nNow, let\'s dive into the specific features and functionalities of both Anvil and MecSimCalc.\\n\\n| Feature                        | Anvil                                                  | MecSimCalc                                                   |\\n| ------------------------------ | ------------------------------------------------------ | ------------------------------------------------------------ |\\n| Documentation                  | [anvil.works/docs](https://anvil.works/docs)           | [docs.mecsimcalc.com](https://docs.mecsimcalc.com)           |\\n| Blog                           | [anvil.works/blog](https://anvil.works/blog)           | [docs.mecsimcalc.com/blog](https://docs.mecsimcalc.com/blog) |\\n| Discourse Forum                | [anvil.works/community](https://anvil.works/community) | [community.mecsimcalc.com](https://community.mecsimcalc.com) |\\n| Drag-and-drop interface        | :white_check_mark:                                     | :white_check_mark:                                           |\\n| Cloud Deployment               | :white_check_mark:                                     | :white_check_mark:                                           |\\n| Self-Host                      | :white_check_mark:                                     | :white_check_mark:                                           |\\n| Github Integration             | :white_check_mark:                                     | :x:                                                          |\\n| Built-in Database              | :white_check_mark: Postgres DB                         | :x:                                                          |\\n| Built-in External Integrations | :white_check_mark: Stripe, OAuth, Jupyter, Email, etc. | :x:                                                          |\\n| In-Browser Editor              | :white_check_mark: No intellisense                     | :white_check_mark:                                           |\\n| Run in Background              | :white_check_mark:                                     | :white_check_mark:                                           |\\n| Custom Domain                  | :white_check_mark:                                     | :x:                                                          |\\n| App Marketplace                | :x:                                                    | :white_check_mark:                                           |\\n\\n## The Workflow\\n\\nCreating web applications should be a straightforward process. Let\'s explore how Anvil and MecSimCalc facilitate the app building and deploying process.\\n\\n### Anvil\\n\\nAnvil runs a web server that communicates with a database and other processes.\\n\\n**Step 1:** Create a new app by selecting from one of the Anvil templates\\n![Create page](/blog/compare/anvil_create.jpg)\\n\\n**Step 2:** On the inputs page, use the side menu on the right to configure each input settings and drag-and-drop in more inputs.\\n![Inputs page](/blog/compare/anvil_inputs.png)\\n![New component](/blog/compare/anvil_new_component.png)\\n\\n**Step 3:** On the code page, use custom anvil functions to write the Python code that uses the input values to execute commands, such as database executions.\\n![Code page](/blog/compare/anvil_code.png)\\n\\n**Step 4:** Finally, to deploy the app, open the Publish popup and click on Publish\\n![Publish](/blog/compare/anvil_publish.png)\\n\\n**Step 5:** The app is now deployed and accessible at an Anvil url:\\nKeep in mind that Anvil apps on the free tier come with a banner at the top.\\n\\n![Anvil app](/blog/compare/anvil_app.png)\\n\\n### MecSimCalc\\n\\nInternally, MecSimCalc uses serverless functions to run Python functions, make it suitable for computational simulation and calculation, which may require more computing power and longer runtimes.\\n\\nHere is a simplified workflow for creating and deploying a basic MecSimCalc app:\\n\\n**Step 1:** Visit https://mecsimcalc.com/create and select one of the templates to create a new app.\\n![Create page](/blog/compare/mecsimcalc_create.png)\\n\\n**Step 2:** On the inputs step, use the drag and drop interface to add, delete, and position the inputs. Edit the each input by clicking on it.\\n![Inputs step](/blog/compare/mecsimcalc_inputs.png)\\n![Edit inputs](/blog/compare/mecsimcalc_edit_inputs.png)\\n\\n**Step 3:** On the code step, write the Python code that uses the `inputs` to calculate the output. No need for custom functions nor installations. The toolbar on the right allows for installing Python packages, debugging the code, and seeing the input variables.\\n![Code step](/blog/compare/mecsimcalc_code.png)\\n\\n**Step 4:** On the outputs step, use the rich text editor to stylize the outputs and embed the outputs variables from the code.\\n![Outputs step](/blog/compare/mecsimcalc_outputs.png)\\n\\n**Step 5:** Finally, to deploy the app, simply click on the _Publish_ button at the bottom of the Preview step and the app will be accessible at a MecSimCalc url within a few seconds.\\n![Publish](/blog/compare/mecsimcalc_publish.png)\\n\\nThis is the final app:\\n![MecSimCalc app](/blog/compare/mecsimcalc_app.png)\\n\\n## Conclusion\\n\\nBoth Anvil and MecSimCalc aim to simplify web application development, enabling users to leverage the power of Python without the need for extensive web development experience. While Anvil is designed for building full-fledged websites and offers more features, MecSimCalc is geared towards non-technical users and simplifies complex computations.\\n\\n### Key Takeaways\\n\\n- MecSimCalc offers a solution for simplifying complex calculations with Python.\\n- Anvil\'s extensive feature set can create complexity, but it is more suitable for building full-fledged websites.\\n- MecSimCalc excels at simplifying the app-building process for non-technical users.\\n\\nIn summary, the choice between Anvil and MecSimCalc depends on your specific needs and the complexity of the web applications you intend to develop. Both tools offer the power of Python, but with different target audiences and features."},{"id":"Comp01212023-Winners","metadata":{"permalink":"/blog/Comp01212023-Winners","source":"@site/blog/2023-03-05-Hackathon-5-Winners.md","title":"MecSimCalc Hackathon 5.0 (January 21st - January 28th, 2023) Winners","description":"At the beginning of 2023, MecSimCalc ran our sixth hackathon. This competition sponsored by 1984 Ventures and echo3D, was aimed to showcase MecSimCalc as a platform for creating web applications in Python. The theme for this hackathon was \\"Creating a calculator that you would use for one of your classes\\". Users created an app on the MecSimCalc website, tagged it as \\"Comp01212023\\" and published it for a chance to win $100. Throughout the competition there were 66 sign-ups and 8 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s January 21st - January 28th, 2023 Hackathon 5.0. To view all apps submitted during the competition, you can check out this collection: Hackathon 5.0 Submissions.","date":"2023-03-05T00:00:00.000Z","formattedDate":"March 5, 2023","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"Comp01212023","permalink":"/blog/tags/comp-01212023"},{"label":"hackathon","permalink":"/blog/tags/hackathon"}],"readingTime":4.335,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"Comp01212023-Winners","title":"MecSimCalc Hackathon 5.0 (January 21st - January 28th, 2023) Winners","authors":["dtrinh"],"tags":["MecSimCalc","Comp01212023","hackathon"]},"prevItem":{"title":"Anvil vs. MecSimCalc","permalink":"/blog/vs-anvil-works-2023"},"nextItem":{"title":"MecSimCalc Hackathon 4.0 (December 17th - December 24th, 2022) Winners","permalink":"/blog/Comp12172022-Winners"}},"content":"At the beginning of 2023, MecSimCalc ran our sixth hackathon. This competition sponsored by 1984 Ventures and echo3D, was aimed to showcase MecSimCalc as a platform for creating web applications in Python. The theme for this hackathon was **\\"Creating a calculator that you would use for one of your classes\\"**. Users created an app on the MecSimCalc website, tagged it as \\"Comp01212023\\" and published it for a chance to win $100. Throughout the competition there were 66 sign-ups and 8 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s January 21st - January 28th, 2023 Hackathon 5.0. To view all apps submitted during the competition, you can check out this collection: [Hackathon 5.0 Submissions](https://mecsimcalc.com/collection/304941d7-e854-41bf-9353-508d2c8e0cad).\\n\\n![Hackathon 5.0 Poster](/blog/Hackathon_5.0.png)\\n\\n| App | Author(s) | Win |\\n| ----- | ----- | ----- |\\n| [Annualized Rate of Return](https://mecsimcalc.com/app/3050759/annualized_rate_of_return) | Philippe Saint-Amand | Grand Prize Winner ($100) |\\n[Offset-C](https://mecsimcalc.com/app/8220162/offset_c) | Devaraja G | Top 5 App |\\n[Visualizer](https://mecsimcalc.com/app/2263771/visualizer) | Raj Kumar | Top 5 App |\\n[Equation Balancer](https://mecsimcalc.com/app/5280055/equation_balancer) | Pulkit Govrani | Top 5 App |\\n[Black Scholes](https://mecsimcalc.com/app/8739983/black_scholes) | Amysoj J A Exson Joseph | Top 5 App |\\n\\n___________________________________________________________________________________________________________\\n## **[Annualized Rate of Return (Grand Prize Winner)](https://mecsimcalc.com/app/3050759/annualized_rate_of_return)**\\n___________________________________________________________________________________________________________\\n\\n## Philippe Saint-Amand\\n\\n### ___About Me___\\n\\nMy name is Philippe and I live in Belgium.\\n\\nI\u2019m eager to learn and in my free time, I love playing around with Python and test libraries in various area : Data Analytics, Security, Web Development, Image processing, Geolocation/Geomapping, \u2026\\n\\nSo when I saw a site where the key message is \u201cCreate and share your Python web apps in minutes for free\u201d, I have of course to test it!\\n\\nI added also an extra challenge by participating to my first hackathon. So I\u2019m really astonished but very proud about the end result.\\n\\n### ___About my app and why I made it___\\n\\nAs the theme of the hackathon was creating a calculator, I was first thinking of traditional conversion calculator (like height, weight, distance, etc.) as I\u2019m from Europe & you are from North America.\\n\\nMeanwhile It sounds too simple & I want also to try the possibility to display some visuals (what sounds difficult with a conversion calculator).\\n\\nThen comes to me this idea of Annualized RoR  with also explanation of compound interest. Also, the Annualized RoR  is really useful if you want to compare different possible investments & not so straight forward to obtain by doing mental calculation (at least for me \ud83d\ude09). So I can indeed rely on a tool for this calculation & this can be useful for others as well so a good reason to publish on a web site.\\n\\n### ___My experience with MecSimCalc___\\n\\nI have to say MecSimCalc is really easy to use & it corresponds to my philosophy of working. Indeed, my side I prefer to work on the business logic part (backend side) of an app and  don\u2019t want to pass too much time developing the frontend part. So having a framework proposing me a no-code approach for the presentation part meets my expectations. Your idea to have a reach text editor, a collection of input fields with pre-validation of parameter values is really great.\\n\\nFor the input part, I was able to very quickly present/document the app using text editor (instead of HTML or Markdown that will takes more time). The default template of presentation is good. Of course there is no possibility to have too much customization but for me, at the moment I have a default nice layout, I have no problem to stitch to it. The only issue I have seen is related to the mobile view (see more details at the end of this e-mail)\\n\\nFor the output part, integrating Jinja to a rich text editor instead of HTML is just awesome.\\n___________________________________________________________________________________________________________\\n## **[Black Scholes (Top 5 App)](https://mecsimcalc.com/app/8739983/black_scholes)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Amysoj J A Exson Joseph___\\n\\nI am a computer science engineering student in my final year, hailing from Tamil Nadu, India. Building websites and native applications is a hobby of mine, and I am eager to take the skills and knowledge I have gained through my studies to the next level. I am excited to see where my interests in technology will take me in the future.\\n\\n### ___About my App___\\n\\nI built a Black-Scholes option pricing calculator app to provide a simple and user-friendly interface for determining option prices. My goal is to support informed decision-making in finance by combining my technical and financial knowledge.\\n\\n### ___My experience with MecSimCalc___\\n\\nI recently started using MecSimCalc and I am thoroughly impressed with its capabilities. As a Python developer, I appreciate the ease with which I can create and share web applications with just a few clicks. The platform\'s intuitive interface and streamlined process have saved me so much time and effort compared to other similar tools I have used in the past. I highly recommend MecSimCalc to any Python developer looking for a fast and simple way to create and share web applications.\\n\\n______________________________________________________________________________________\\n\\n## __We are hosting another hackathon from March 18th - March 25th 2023. For a chance to win $100, please check out the [DevPost](https://mecsimcalc-hackathon-6.devpost.com/) to find out more!__\\n\\n![Hackathon 6.0 Poster](/blog/Hackathon_6.0.png)"},{"id":"Comp12172022-Winners","metadata":{"permalink":"/blog/Comp12172022-Winners","source":"@site/blog/2023-01-09-Hackathon-4-Winners.md","title":"MecSimCalc Hackathon 4.0 (December 17th - December 24th, 2022) Winners","description":"During December of 2022 MecSimCalc ran a hackathon the week before Christmas. This competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform, as well as give one lucky winner some cash for the holidays. Users created an app on the MecSimCalc website, tagged it as \\"Comp12172022\\" and published it for a chance to win $150. Throughout the competition there were 141 sign-ups and 21 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s December 17th - December 24th, 2022 Hackathon 4.0. To view all apps submitted during the competition, visit this collection: Hackathon 4.0 Submissions.","date":"2023-01-09T00:00:00.000Z","formattedDate":"January 9, 2023","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"Comp12172022","permalink":"/blog/tags/comp-12172022"},{"label":"hackathon","permalink":"/blog/tags/hackathon"}],"readingTime":7.185,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"Comp12172022-Winners","title":"MecSimCalc Hackathon 4.0 (December 17th - December 24th, 2022) Winners","authors":["dtrinh"],"tags":["MecSimCalc","Comp12172022","hackathon"]},"prevItem":{"title":"MecSimCalc Hackathon 5.0 (January 21st - January 28th, 2023) Winners","permalink":"/blog/Comp01212023-Winners"},"nextItem":{"title":"MecSimCalc Hackathon 3.0 (November 5th - November 12th, 2022) Winners","permalink":"/blog/Comp011052022-Winners"}},"content":"During December of 2022 MecSimCalc ran a hackathon the week before Christmas. This competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform, as well as give one lucky winner some cash for the holidays. Users created an app on the MecSimCalc website, tagged it as \\"Comp12172022\\" and published it for a chance to win $150. Throughout the competition there were 141 sign-ups and 21 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s December 17th - December 24th, 2022 Hackathon 4.0. To view all apps submitted during the competition, visit this collection: [Hackathon 4.0 Submissions](https://mecsimcalc.com/collection/a8da9c90-b761-4041-9ee7-80f1a5121d3c).\\n\\n![Hackathon 4.0 Poster](/blog/Hackathon_4.0.png)\\n\\n| App | Author(s) | Win |\\n| ----- | ----- | ----- |\\n| [Financial Portal](https://mecsimcalc.com/app/9137239/financial_portal) | Braxton Diaz, Travis Lee, Kim Ngoc Thien Phan, Nicole Encinas | Grand Prize Winner ($150) |\\n[NYC Vehicle Collision Visualization](https://mecsimcalc.com/app/4491678/nyc_vehicle_collision_visualization) | Tanya Sabarwal, Piyush Mohan | Top 5 App |\\n[Indonesia Tourism Destination Recommendation System](https://mecsimcalc.com/app/4014960/indonesia_tourism_destination_recommendation_syste) | Rafka Imanda Putra | Top 5 App |\\n[Statistics Helper](https://mecsimcalc.com/app/6935137/statistics_helper) | Akshay Kumar Sandra | Top 5 App |\\n[Color Pallet Generatior](https://mecsimcalc.com/app/1127600/color_pallet_generator) | Kevin Ohara | Top 5 App |\\n\\n___________________________________________________________________________________________________________\\n## **[Financial Portal (Grand Prize Winner)](https://mecsimcalc.com/app/9137239/financial_portal)**\\n___________________________________________________________________________________________________________\\n\\n## Braxton Diaz\\n\\n### ___About Me___\\n\\nMy name is Braxton Diaz and I am currently a Senior at the University of Washington Bothell. I am studying computer science and hope to land a job as a full-stack engineer. I worked with a team of 3 other students to complete this project.\\n\\n### ___About our App___\\n\\nFinancial portal is a dashboard that allows users to calculate their monthly expenses, savings goals, and calculate the future value of their investments. We made this app to let people easy track and visualize their spending so they can improve their financial habits.\\n\\n### ___My experience with MecSimCalc___\\n\\nMecSimCalc was a great, easy-to-use platform for developing web applications. It was very intuitive and allowed for creating applications without the need for HTML/CSS or JavaScript. This allowed us quickly ship a full stack application only using python.\\n\\n## Nicole Encinas\\n\\n### ___About Me___\\n\\nMy name is Nicole and I am a graduate student studying Human Computer Interaction. I am passionate about using technology and design to simplify complex issues.\\n\\n### ___About our App___\\n\\nThe Financial Portal helps people manage money better and make smart financial decisions. Our team recognized the universal relevance of financial management and wanted to create an app that could address a common issue.\\n\\n### ___My experience with MecSimCalc___\\n\\nWe found MecSimCalc intuitive and easy-to-use.\\n\\n## Kim Ngoc Thien Phan\\n\\n### ___About Me___\\n\\nI go by Kim Phan (she/her). My major is Computer Science. Besides, I also learn UX/UI design because I like making template for the website. \\n\\n### ___About our App___\\n\\nOur financial portal app is a great tool to help people calculate the percent of expense you spend in a month. We also help you figure how long you will reach your saving goal based on your current contribution each month. The last feature is to calculate the power of compound interest when you invest. Finance is really important in our life. Knowing how to manage it will bring you to a successful future.\\n\\n### ___My experience with MecSimCalc___\\n\\nThis is the first time I use MecSimCalc to do a Hackathon. It is a user friendly tool and convenient to design template for the input, output. \\n___________________________________________________________________________________________________________\\n## **[NYC Vehicle Collision Visualization](https://mecsimcalc.com/app/4491678/nyc_vehicle_collision_visualization)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Tanya Sabarwal and Piyush Mohan___\\n\\nHey! I am Tanya Sabarwal from Chennai, India. I am in the final year of my Computer Science and Engineering undergraduate degree. My passion for Machine Learning, Data Science, and Visualization drew me to this hackathon and I also intend to pursue my master\'s degree in this field.\\n\\nHello! I\u2019m Piyush Mohan from India and I\u2019m a student currently in my final year of B.Tech. I enjoy taking part in various hackathons and bringing innovative ideas to life via projects such as the one mentioned here. My area of interests lie in fields of Data Analytics and Visualisation and I also like to work with Machine Learning & Deep Learning.\\n\\n### ___About our App___\\n\\nAs soon as we decided to take part in the hackathon, we hopped onto MecSimCalc\u2019s explore page and also went through the list of supported libraries. While doing so, we realised that there weren\u2019t enough apps made with Folium and having worked with it before in previous hackathons, we decided to go with it.\\n\\nThe application provides an insight to the Vehicle Collision problem in New York. It provides an easy way of simplifying and analysing the data with interactive maps that can be customised on the basis of user inputs. Apart from spreading awareness about the issue, the app also helps in visualising and learning more about the problem which would eventually lead to better solutions and regulations to road safety.\\n\\n### ___My experience with MecSimCalc___\\n\\nMecSimCalc is a very good platform for beginners and its flexibility also makes it a wonderful tool for experienced developers to create apps of any kind. The website\'s samples and tutorials were quite helpful and beginner-friendly which is always a great kickstart. We loved being able to write code and test it directly in the browser. The drag-and-drop interface for input widgets is simple to use and helped in adding or changing elements quickly. Overall, we are glad to have tried it and will definitely continue using it for future projects.\\n\\n___________________________________________________________________________________________________________\\n## **[Indonesia Tourism Destination Recommendation System](https://mecsimcalc.com/app/4014960/indonesia_tourism_destination_recommendation_syste)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Rafka Imanda Putra___\\n\\n12th-grade student from SMK Negeri 4 Bandung majoring in software engineering. I started learning programming in early 2021 and have an interest in machine learning and back-end development. Apart from that, I am also active in coaching students to become skilled by taught basics of web development and personal branding for members of the IT extracurricular at my school.\\n\\n### ___About my App___\\n\\nThe Indonesia Tourism Destination Recommendation System aims to provide recommendations on tourist attractions for tourists who want to visit the top 5 cities in Indonesia, especially on the island of Java. This recommendation system is built with content-based filtering which will return locations based on the similarity of the category the user wants.\\n\\n### ___My experience with MecSimCalc___\\n\\nIt is an excellent platform for building computing tools and even implementing machine learning. At first, the app that I had only ran on a local notebook, where the user had to run all the code to get recommendations. But with MecSimCalc, users can directly input what they want and quickly where recommendations will be displayed.\\n\\n___________________________________________________________________________________________________________\\n## **[Statistics Helper](https://mecsimcalc.com/app/6935137/statistics_helper)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Akshay Kumar Sharma___\\n\\nHi! I\'m Akshay Kumar Sharma. I am a full-stack web developer. I am currently in 11th standard. I love maths and coding.\\n\\n### ___About my App___\\n\\nI made the Statistics Helper app in Mecsimcalc Hackathon 4. I made this statistics problem solver app to automate some of the hard work to do when we are solving stats. This app can provide quick results via tables, graphs, formulas etc. This app is also a great resource to learn stats for newcomers as it explains every step of it\'s solution.\\n\\nI built this project because there\'s been a lot of times when I have solve lengthy questions on stats and one silly mistake can make all the efforts go into vain. So, to learn myself and to help others learn stats, I made this app. Stats is a very interesting subject, It can reveal many fascinating outcomes but before that you have to do some hard calculations if your data is big. There are many calculators on the internet but a very few of them provide solution and nothing is like \\"Statistics Helper\\" which also provides tables, graphs, what formula was used etc.\\n\\n### ___My experience with MecSimCalc___\\n\\nI really enjoyed participating in the mecsimcalc hackathon and thought that the event was very well-organized. I appreciated the opportunity to work on my own projects and get help and support from the mentors and organizers when needed. The prizes and incentives were also motivating, and I felt that they added an extra level of excitement to the event. Overall, my experience at the hackathon was excellent and I would definitely participate in future events hosted by mecsimcalc. Thank you for putting on such a great event!\\n\\n___________________________________________________________________________________________________________\\n## **[Color Pallet Generator](https://mecsimcalc.com/app/1127600/color_pallet_generator)**\\n___________________________________________________________________________________________________________\\n\\n## __We are hosting another hackathon from January 21st - January 28th 2023. For a chance to win $100, please check out the [DevPost](https://mecsimcalc-hackathon-5.devpost.com/) to find out more!__\\n\\n![Hackathon 5.0 Poster](/blog/Hackathon_5.0.png)"},{"id":"Comp011052022-Winners","metadata":{"permalink":"/blog/Comp011052022-Winners","source":"@site/blog/2022-11-19-Hackathon-3-Winners.md","title":"MecSimCalc Hackathon 3.0 (November 5th - November 12th, 2022) Winners","description":"Being the second competition of our monthly Fall/Winter Hackathons of 2022/2023, this competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform. Users created an app on the MecSimCalc website, tagged it as \\"Comp11052022\\" and published it for a chance to win $100. Throughout the competition there were 57 sign-ups and 8 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s November 5th - November 12th, 2022 Hackathon 3.0. To view all apps submitted during the competition, visit this collection: Hackathon 3.0 Submissions.","date":"2022-11-19T00:00:00.000Z","formattedDate":"November 19, 2022","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"Comp11052022","permalink":"/blog/tags/comp-11052022"},{"label":"hackathon","permalink":"/blog/tags/hackathon"}],"readingTime":4.455,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"Comp011052022-Winners","title":"MecSimCalc Hackathon 3.0 (November 5th - November 12th, 2022) Winners","authors":["dtrinh"],"tags":["MecSimCalc","Comp11052022","hackathon"]},"prevItem":{"title":"MecSimCalc Hackathon 4.0 (December 17th - December 24th, 2022) Winners","permalink":"/blog/Comp12172022-Winners"},"nextItem":{"title":"MecSimCalc Build-A-Thon (October 8th - October 15th, 2022) Winners","permalink":"/blog/Comp010082022-Winners"}},"content":"Being the second competition of our monthly Fall/Winter Hackathons of 2022/2023, this competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform. Users created an app on the MecSimCalc website, tagged it as \\"Comp11052022\\" and published it for a chance to win $100. Throughout the competition there were 57 sign-ups and 8 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s November 5th - November 12th, 2022 Hackathon 3.0. To view all apps submitted during the competition, visit this collection: [Hackathon 3.0 Submissions](https://mecsimcalc.com/collection/d12dd380-cbac-439c-9476-615901eebfe5).\\n\\n![Hackathon 3.0 Poster](/blog/MecSimCalc_Presents_3.png)\\n\\n| App | Author(s) | Win |\\n| ----- | ----- | ----- |\\n| [Linear Algebra Genie](https://mecsimcalc.com/app/7399793/linear_algebra_genie) | Vaibhav Thalanki | Grand Prize Winner ($100) |\\n[Car-cation](https://mecsimcalc.com/app/6751833/car_cation) | Sankalp Saini | Top 5 App |\\n[Counting and Binomial Distribution](https://mecsimcalc.com/app/7814722/counting_binomial_distribution) | Zouhair Fakhoury | Top 5 App |\\n[CipherBot](https://mecsimcalc.com/app/2298110/cipher_bot) | Rishi Sandrana | Top 5 App |\\n[Complex Number Solver and Grapher](https://mecsimcalc.com/app/7130470/complex_number_solver_and_grapher) | Akshay Kumar Sharma | Top 5 App |\\n\\n___________________________________________________________________________________________________________\\n## **[Linear Algebra Genie (WINNER)](https://mecsimcalc.com/app/7399793/linear_algebra_genie)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Vaibhav Thalanki___\\n\\nI am Vaibhav Thalanki from Chennai, India. I am currently pursuing my undergraduate in computer science at VIT University. Some things I am very much interested in are deep learning and product development. I have participated in quite a few hackathons before this one. I also attended the previous MecSlimCalc buildathons. (Vaibhav has participated in 3/3 MecSimCalc hackathons so far!)\\n\\n### ___About My App___\\n\\nAs a computer science undergraduate at university, I encountered the linear algebra course. It included heavy use of matrices and operations on them, which can get a little out of hand as they are not easy to calculate and comprehend. I used many online calculators for matrix operations to save time. I then decided to create this app titled \\"Linear Algebra Genie\\". This can prove extremely useful to other university students and professors.\\n\\nThe app has operations like matrix multiplication, matrix inverse, row-space,column-space, and null-space calculations, QR decomposition, and eigenvector solving. You can input any 3x3 matrix into the app for any of the operations mentioned above and click \\"Submit\\" to get the answers. The Output page also consists of definitions and formulae which is used to calculate the same.\\n\\n### ___My experience with MecSimCalc___\\n\\nMecSlimCalc is an amazing platform to work on and explore. The professor and the students behind the MecSlimCalc project have succeeded in their goals. The website is simply brilliant and I would be using it for a lot more stuff.\\n\\n___________________________________________________________________________________________________________\\n## **[Car-cation](https://mecsimcalc.com/app/6751833/car_cation)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Sankalp Saini___\\n\\nHello, I\u2019m a fifth year Computer Science Undergraduate student at the U of A.\\n\\n### ___About My App___\\n\\nI made this app because my family loves to go on road trips and we\u2019ve always had to calculate/estimate our trips by hand. I wanted to create a calculator that could just do this for me!\\n\\n### ___My experience with MecSimCalc___\\n\\nI enjoyed using MecSimCalc a lot and I think with more libraries, it has tremendous potential!\\n___________________________________________________________________________________________________________\\n## **[Counting and Binomial Distribution](https://mecsimcalc.com/app/7814722/counting_binomial_distribution)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Zouhair Fakhoury___\\n\\nHi, this is Zouhair. I\'m a Lebanese senior high school student passionate about coding and motorsports. I started programming at 14 years old with Python. I\'m interested in various tech disciplines, such as Cybersecurity, Arduino, and multi-platform app development. I plan on following a major in Computer Science to specialize in Software Engineering. \\n\\n### ___About My App___\\n\\nAs I continuously improve and advance in mathematics, I tend to consolidate my knowledge by various means. In this case, it\'s programming. Thus, I built a Counting and Binomial Distribution tool for MecSimCalc\'s Hackathon 3.0. \\nThe app accomplishes two majors tasks:\\n- Return a customizable list of combinations, permutations, etc., with given arguments of any character set\\n- Calculate binomial probabilities with their means, variances, and standard deviations\\n\\n### ___My experience with MecSimCalc___\\n\\nI am a recurring MecSimCalc user. What kept me going for this platform was its intuitiveness and ease of use. The features of all types help you build computational tools regardless of what you\'re dealing with. Remarkably, it\'s accessible by users from any device without the constraints of deploying your applications. I always am hyped to see its future improvements.\\n\\n___________________________________________________________________________________________________________\\n## **[CipherBot](https://mecsimcalc.com/app/2298110/cipher_bot)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Rishi Sandrana___\\n\\nHello! I\'m Rishi and I\'m a junior at Walter Payton College Prep.\\n\\n### ___About My App___\\n\\nCryptography has been a passion of mine for some time, so I thought that creating CipherBot, a program that could encrypt/decrypt in multiple ciphers, would be a fun project that\'d utilize my Python knowledge.\\n\\n### ___My experience with MecSimCalc___\\n\\nI thought that MecSimCalc was a good platform for making your own web application and I liked its simplicity and beginner-friendly interface, though multi-file support and more customizability for the home page would be fantastic.\\n\\n___________________________________________________________________________________________________________\\n## **[Complex Number Solver and Grapher](https://mecsimcalc.com/app/7130470/complex_number_solver_and_grapher)**\\n___________________________________________________________________________________________________________\\n\\n### ___About Akshay Kumar Sharma___\\n\\nHi! I am Akshay.\\n\\n### ___About My App___\\n\\nI built this app to show the properties of complex numbers and to take part in mecsimcalc hackathon 3.\\n\\n### ___My experience with MecSimCalc___\\n\\nI had a great experience building this all on MecSimCalc platform.\\n\\n\\n## __We are hosting another hackathon from December 17th - December 24th 2022. For a chance to win $150, please check out the [DevPost](https://mecsimcalc-hackathon-4-0.devpost.com/) to find out more!__\\n\\n![Hackathon 4.0 Poster](/blog/Hackathon_4.0.png)"},{"id":"Comp010082022-Winners","metadata":{"permalink":"/blog/Comp010082022-Winners","source":"@site/blog/2022-10-22-Build-a-Thon-2-Winners.md","title":"MecSimCalc Build-A-Thon (October 8th - October 15th, 2022) Winners","description":"After the success of MecSimCalc\'s first hackathon in July, we had decided to run a Hackathon each month starting in October. This competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform. Users would create an app on the MecSimCalc website, tag it as \\"Comp10082022\\" and publish it for a chance to win $100.  Throughout the competition there were 56 sign-ups and 16 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s October 8th - October 15th, 2022 Build-A-Thon 2.0. To view all apps submitted during the competition, visit this collection: Build-a-Thon 2.0 Submissions.","date":"2022-10-22T00:00:00.000Z","formattedDate":"October 22, 2022","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"Comp10082022","permalink":"/blog/tags/comp-10082022"},{"label":"hackathon","permalink":"/blog/tags/hackathon"}],"readingTime":5.635,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"Comp010082022-Winners","title":"MecSimCalc Build-A-Thon (October 8th - October 15th, 2022) Winners","authors":["dtrinh"],"tags":["MecSimCalc","Comp10082022","hackathon"]},"prevItem":{"title":"MecSimCalc Hackathon 3.0 (November 5th - November 12th, 2022) Winners","permalink":"/blog/Comp011052022-Winners"},"nextItem":{"title":"Johns Yu\'s Apps 2","permalink":"/blog/JohnYu-apps2"}},"content":"After the success of MecSimCalc\'s first hackathon in July, we had decided to run a Hackathon each month starting in October. This competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform. Users would create an app on the MecSimCalc website, tag it as \\"Comp10082022\\" and publish it for a chance to win $100.  Throughout the competition there were 56 sign-ups and 16 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s October 8th - October 15th, 2022 Build-A-Thon 2.0. To view all apps submitted during the competition, visit this collection: [Build-a-Thon 2.0 Submissions](https://mecsimcalc.com/collection/ceea08c9-be23-4dfb-8b68-61f7d311d9eb).\\n\\n![Hackathon 2.0 Poster](/blog/MecSimCalc_Hackathon_2.png)\\n\\n| App | Author(s) | Win |\\n| ----- | ----- | ----- |\\n| [Quadratic Equations Solver](https://mecsimcalc.com/app/3128476/quadratic_equations_solver) | Zouhair Fakhoury | Grand Prize Winner ($100) |\\n[Quality of Life App](https://mecsimcalc.com/app/6185690/quality_of_life_app) | Anika Krishnan | Top 5 App |\\n[Your Trip Buddy](https://mecsimcalc.com/app/0866015/your_trip_buddy) | Vaibhav Thalanki | Top 5 App |\\n[Sudoku Solver](https://mecsimcalc.com/app/3166730/sudoku_solver) | Michael Jean | Top 5 App |\\n[Auto Base64 Decode](https://mecsimcalc.com/app/7698150/auto_base_64_decode) | Noah Ergezinger | Top 5 App |\\n\\n\\n___________________________________________________________________________________________________________\\n## **[Quadratic Equations Solver (WINNER)](https://mecsimcalc.com/app/3128476/quadratic_equations_solver)**\\n___________________________________________________________________________________________________________\\n### ___About Zouhair Fakhoury___\\n\\nHi, this is Zouhair! I\'m a Lebanese senior high school student passionate about coding and motorsports. I started programming at 14 years old with Python. I like other tech disciplines such as Cybersecurity, Arduino, and multi-platform app development. I\'m planning on following a major in Computer Science to specialize in Software Engineering. \\n\\n### ___About My App___\\n\\nBeing a math passionate, I\'ve always wondered if I could automate some mathematical processes of solving problems. I knew there was something that we use more often than we realize: the quadratic functions. \\nHence, on the occasion of MecSimCalc\'s Hackathon 2.0, I made a Quadratic Equations Solver. As its name suggests, it solves quadratic equations in their standard form: ax\xb2 + bx + c = 0, providing you with analytical and descriptive results to help you find solutions easily.\\n\\n### ___My experience with MecSimCalc___\\n\\nI\'m so grateful for joining MecSimCalc. I\'ve had a wonderful experience working in its coding environment. MecSimCalc solves the hard side of creating GUIs with a drag-and-drop solution. The interface is very intuitive and easy to understand. It has more features than I expected like the integration of LaTeX, geospatial utilities, handling files and processing images, etc... The best part is that you don\'t need prior experience in web development. You can simply create a Python web app and deploy it instantly within minutes!\\n___________________________________________________________________________________________________________\\n## **[Quality of Life App](https://mecsimcalc.com/app/6185690/quality_of_life_app)**\\n___________________________________________________________________________________________________________\\n### ___About Anika Krishnan___\\n\\nI am a high schooler in Redmond, WA, USA. I love to build social and community apps, especially apps that use data science/analytics.\\n\\n### ___About My App___\\n\\nAt this time, Air quality in my area is poor and some of my friends that have asthma/allergies are having to temporarily move to other locations. This was the inspiration for the idea. When one moves to a city, many things are important for your quality of your life, eg.: Air Quality, Safety, Traffic, Covid Risk, Cost of Milk and Eggs, Housing costs and more.. Wouldn\'t it be nice to know how the city measures on all the things that are important to you? The Quality of Life app uses many sources to gather data and calculate scores in different areas like air quality, pollen, job climate so you can visualize all the data and make informed decisions.\\n\\n### ___My experience with MecSimCalc___\\n\\nIt was very easy to get started. The examples and tutorials were very helpful. It took very little time to have the triangle example working. While building the application, I really appreciated being able to write the code and test it directly in the browser and was able to build a good app with some UI during the hackathon. Things that would make this platform more powerful include being able to more during inputs ( html/js), more support for additional libraries ( maybe allow users to add). It was a bit hard to debug ( being able to step through Jupyter notebooks may be useful). Overall I really enjoyed this experience and being able to build an app with UI and inputs/outputs without having to learn about all the other systems.\\n___________________________________________________________________________________________________________\\n## **[Your Trip Buddy](https://mecsimcalc.com/app/0866015/your_trip_buddy)**\\n___________________________________________________________________________________________________________\\n### ___About Vaibhav Thalanki___\\n\\nI am Vaibhav Thalanki from Chennai, India. I am currently pursuing my undergraduate in computer science at VIT University. Some things I am very much interested in are deep learning and product development. I have participated in quite a few hackathons before this one. I also attended the previous MecSlimCalc buildathon.\\n\\n### ___About My App___\\n\\nThe app that I created for this hackathon is called \'Your Trip Buddy\', it gives you information about the weather, airports, and time zones for your trip\'s destination. I used a few APIs for building the app. It eases the process by collecting information from different sources and putting it in a friendly format for the user to read. \\n\\n### ___My experience with MecSimCalc___\\n\\nMecSimCalc is an amazing platform to work on and explore. The professor and the students behind the MecSlimCalc project have succeeded in their goals. The website is simply brilliant and I would be using it for a lot more stuff. Ciao!\\n___________________________________________________________________________________________________________\\n## **[Auto Base64 Decode](https://mecsimcalc.com/app/7698150/auto_base_64_decode)**\\n___________________________________________________________________________________________________________\\n### ___About Noah Ergezinger___\\n\\nI graduated in December 2021 and started working full-time at Ezoic this past February. I actually worked on this website during one of the summer breaks while in university, so I was very excited when they announced the Buildathon. It was great to see the progress made since I had last worked on it and that it was seeing lots of use.\\n\\n### ___About My App___\\n\\nIn a nutshell, Auto Base64 Decode takes a string, finds any base64-encoded portions, decodes them, and inserts them back into the original string. I made my app because it was actually something I needed at work. Many of our web requests contain encoded data, and when debugging, we constantly need to copy the data into a decoder, which gets tedious. I thought it would be great to be able to automatically decode the relevant portions without needing to copy each one by hand. I\'ve shared it with my team, and we\'ve already been using it a ton.\\n\\n### ___My experience with MecSimCalc___\\n\\nBuilding a script or tool and easily sharing it was precisely the original use case for MecSimCalc, and I\'m happy to see that come to fruition. I look forward to what comes next, and I hope the MecSimCalc team sees nothing but success!\\n___________________________________________________________________________________________________________\\n\\n## __We are hosting another hackathon from November 5th - November 12th 2022, please check out the [DevPost](https://mecsimcalc-hackathon-3.devpost.com/) to find out more!__\\n\\n![Hackathon 3.0 Poster](/blog/MecSimCalc_Presents_3.png)"},{"id":"JohnYu-apps2","metadata":{"permalink":"/blog/JohnYu-apps2","source":"@site/blog/2022-08-22-John-apps2.md","title":"Johns Yu\'s Apps 2","description":"The following blogposts were written by John Yu for apps he had created on MecSimCalc. John Yu was a student researcher working with MecSimCalc for 8 months. We will miss you John!","date":"2022-08-22T00:00:00.000Z","formattedDate":"August 22, 2022","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"Engineering","permalink":"/blog/tags/engineering"},{"label":"Math","permalink":"/blog/tags/math"},{"label":"Linear Algebra","permalink":"/blog/tags/linear-algebra"}],"readingTime":1.54,"hasTruncateMarker":false,"authors":[{"name":"John Yu","title":"University Researcher","key":"jyu"},{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"JohnYu-apps2","title":"Johns Yu\'s Apps 2","authors":["jyu","dtrinh"],"tags":["MecSimCalc","Engineering","Math","Linear Algebra"]},"prevItem":{"title":"MecSimCalc Build-A-Thon (October 8th - October 15th, 2022) Winners","permalink":"/blog/Comp010082022-Winners"},"nextItem":{"title":"Vivid Hacks v1.5 MecSimCalc Workshop","permalink":"/blog/Vivid-Hacks-1.5-MecSimCalc-Workshop"}},"content":"The following blogposts were written by John Yu for apps he had created on MecSimCalc. John Yu was a student researcher working with MecSimCalc for 8 months. We will miss you John!\\n\\n## **Algebraic Operation on Complex Numbers**\\n\\nThis blog post is dedicated to the [Algebraic Operation on Complex Numbers](https://mecsimcalc.com/app/3941579/algebraic_operations_on_complex_numbers) app created by John Yu.\\n\\n### ___About the app___\\n\\nThe Algebraic Operation on Complex Numbers app is intended for students taking a linear\\nalgebra course. This app helps students better grasp how operations are performed with\\ncomplex numbers. The app lets you perform 4 types of operations: addition, subtraction,\\nmultiplication, and division. Addition and subtraction using complex numbers is best performed\\nusing vectors and the app walks users through the steps using visual aids. Multiplication and\\ndivision using complex numbers is best performed using euler form and the app provides\\nexcellent visual aids to assist students in learning the step-by-step process. Learning how to\\nperform operations on complex numbers is very important for any engineering student.\\nComplex numbers have many practical applications particularly in electrical and computer\\nengineering where these skills will be invaluable. Students who use this app will find themselves\\nbetter prepared for their future engineering courses.\\n\\n## **Understanding Vector Fields**\\n\\nThis blog post is dedicated to the [Understanding Vector Fields](https://mecsimcalc.com/app/9890961/understanding_vector_fields) app created by John Yu.\\n\\n### ___About the app___\\n\\nThe Understanding Vector Fields app lets you visually generate a vector field. The app takes in\\nan equation representing your vector field and plots each vector on a graph. It is useful in a\\nvariety of applications. Vector calculus is a very important skill and many engineering students\\ntake a calculus class dedicated to this subject. You can plot simple equations like the flow of a\\nriver with the equation . You can plot more complicated vector fields like a magnetic field using\\nthe equation ."},{"id":"Vivid-Hacks-1.5-MecSimCalc-Workshop","metadata":{"permalink":"/blog/Vivid-Hacks-1.5-MecSimCalc-Workshop","source":"@site/blog/2022-08-10-VividHacks.md","title":"Vivid Hacks v1.5 MecSimCalc Workshop","description":"This blog post is dedicated to the MecSimCalc Workshop for the Vivid Hacks v1.5 Hackathon on August 6th, 2022. For more info on Vivid Hacks visit Vivid Hacks and to see the project gallery for the hackathon visit their DevPost.","date":"2022-08-10T00:00:00.000Z","formattedDate":"August 10, 2022","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"hackathon","permalink":"/blog/tags/hackathon"}],"readingTime":0.615,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"Vivid-Hacks-1.5-MecSimCalc-Workshop","title":"Vivid Hacks v1.5 MecSimCalc Workshop","authors":["dtrinh"],"tags":["MecSimCalc","hackathon"]},"prevItem":{"title":"Johns Yu\'s Apps 2","permalink":"/blog/JohnYu-apps2"},"nextItem":{"title":"John Yu\'s Apps","permalink":"/blog/JohnYu-apps"}},"content":"This blog post is dedicated to the MecSimCalc Workshop for the Vivid Hacks v1.5 Hackathon on August 6th, 2022. For more info on Vivid Hacks visit [Vivid Hacks](https://www.vividhacks.tech/) and to see the project gallery for the hackathon visit their [DevPost](https://vividhacks-1-5.devpost.com/).\\n\\nThis is a recording of the workshop detailing how to use MecSimCalc. In this workshop, I create a simple app that returns the product of two variables and prints a message in the output specified by the user. The entire process for making an app on MecSimCalc from start to publishing is shown and takes around 10 mintues. Make sure to visit the [MecSimCalc YouTube Channel](https://www.youtube.com/channel/UCh9c4pzjNCNsHMJyv8uYczw/featured) and subscribe.\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/EvyC54PfJO4\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>"},{"id":"JohnYu-apps","metadata":{"permalink":"/blog/JohnYu-apps","source":"@site/blog/2022-08-05-John-apps.md","title":"John Yu\'s Apps","description":"The following blogposts were written by John Yu for various apps he had created on MecSimCalc.","date":"2022-08-05T00:00:00.000Z","formattedDate":"August 5, 2022","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"Computer Science","permalink":"/blog/tags/computer-science"},{"label":"Engineering","permalink":"/blog/tags/engineering"},{"label":"Math","permalink":"/blog/tags/math"},{"label":"Statistics","permalink":"/blog/tags/statistics"}],"readingTime":3.155,"hasTruncateMarker":false,"authors":[{"name":"John Yu","title":"University Researcher","key":"jyu"}],"frontMatter":{"slug":"JohnYu-apps","title":"John Yu\'s Apps","authors":["jyu"],"tags":["MecSimCalc","Computer Science","Engineering","Math","Statistics"]},"prevItem":{"title":"Vivid Hacks v1.5 MecSimCalc Workshop","permalink":"/blog/Vivid-Hacks-1.5-MecSimCalc-Workshop"},"nextItem":{"title":"Useful Webtools","permalink":"/blog/websiteplanet-2022"}},"content":"The following blogposts were written by John Yu for various apps he had created on MecSimCalc. \\n\\n## **Pairwise Testing Generator**\\n\\nThis blog post is dedicated to the [Pairwise Testing Generator](https://mecsimcalc.com/app/8809236/pairwise_testing_generator) app created by John Yu.\\n\\n### ___About the Pairwise Testing Generator___\\n\\nThe pairwise testing generator is an app that can generate a set of test cases with up to 5\\nindependent variables. The app uses a technique called Taguchi Orthogonal Arrays such that\\nevery pairing of variables appears in at least one test case. This method is significantly more\\npowerful and more efficient compared to brute-force testing. You can get full testing coverage\\nof your program using significantly less test cases. This can save you a lot of time and a lot of\\nmoney depending on the size of your program.\\n\\n### ___Why I made this app___\\n\\nSoftware testing is a critical step in the software development lifecycle. There are countless\\nopportunities for mistakes and defects to come up at any point in the development of software.\\nFixing code is equally as important as creating code. Finding these bugs early in the\\ndevelopment lifecycle will help to mitigate issues that come up later. The hard part of testing\\ncode is generating test cases. Full code coverage often comes with a huge set of test cases\\nwhich is expensive and time consuming. A small set of test cases is cost effective but lacks code\\ncoverage. I made this app to help software engineers generate test cases that can provide\\nadequate code coverage in a reasonable amount of test cases. This saves you a lot of time and\\nmoney and improves the quality of your code.\\n\\n## **Simple Linear Regression and Discrete Probability Distribution**\\n\\nThis blog post is dedicated to the [Simple Linear Regression](https://mecsimcalc.com/app/3625435/simple_linear_regression) and [Visualizing Discrete Probability Distributions](https://mecsimcalc.com/app/8359657/visualizing_discrete_probability_distributions) apps created by John Yu.\\n\\n### ___About the Simple Linear Regression and the Discrete Probability Distribution App___\\n\\nThe simple linear regression app can generate a regression line from your set of data points.\\nThe app is intended to be a helpful tool for Statistics students to understand how the linear\\nregression line is calculated. There are no statistical libraries used in the calculation of the\\nregression line. All calculations are done using equations from my statistics textbook. The app\\nwill calculate the regression line as well as show you how the calculation is performed. In\\nstatistics, there are many formulas that can calculate a regression line. This app uses the\\nsimplest equation to help students gain a better understanding of how the regression line is\\ncalculated.\\n\\nThe Discrete Probability Distribution app can visualize common probability distributions in\\nStatistics. This app is intended to be a helpful tool for students taking Statistics to understand\\nhow these probability distributions work. The user can play around with the parameters of the\\ndistributions defined in the app inputs to understand how these parameters impact the graph.\\n\\n## **Truth Table Generator**\\n\\nThis blog post is dedicated to the [Truth Table Generator](https://mecsimcalc.com/app/4669459/truth_table_generator) app created by John Yu.\\n\\n### ___About the Truth Table Generator App___\\n\\nThe truth table generator is an app that can generate a truth table by defining a logical\\nexpression. You can define a logic expression simply by typing it into the app inputs. The app\\nwill evaluate your expression with each possible combination of inputs and return the expected\\noutput. This app is intended to be used by students taking a digital logic class who need to\\nquickly generate a truth table. Sometimes a logic expression may be very complicated to\\nevaluate by hand. This app can generate a truth table with any expression no matter how\\ncomplicated it is. Students will find this app by helpful for verifying your truth table. The app\\nhas been tested multiple times to ensure that the expected outputs are correct."},{"id":"websiteplanet-2022","metadata":{"permalink":"/blog/websiteplanet-2022","source":"@site/blog/2022-08-03-Webtools.md","title":"Useful Webtools","description":"This blogpost is dedicated to webtools developed by WebsitePlanet. You can visit all of their webtools at WebsitePlanet.","date":"2022-08-03T00:00:00.000Z","formattedDate":"August 3, 2022","tags":[],"readingTime":0.665,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"websiteplanet-2022","title":"Useful Webtools","authors":["dtrinh"]},"prevItem":{"title":"John Yu\'s Apps","permalink":"/blog/JohnYu-apps"},"nextItem":{"title":"MecSimCalc Build-A-Thon (July 9th - July 16th, 2022) Winners","permalink":"/blog/Comp07092022-Winners"}},"content":"This blogpost is dedicated to webtools developed by WebsitePlanet. You can visit all of their webtools at [WebsitePlanet](https://www.websiteplanet.com/webtools/).\\n\\n| App | Description |\\n| ----- | ----- |\\n| [JS and CSS Minifier](https://www.websiteplanet.com/webtools/jscssminifier/) | This tool makes your website run faster and take up less data by \\"minifying\\" the JavaScript and CSS code.|\\n| [JS and CSS Unminifier](https://www.websiteplanet.com/webtools/unminify-js/) | This tool unminifies JavaScript and CSS code to be more readable for users.|\\n| [Image Compressor](https://www.websiteplanet.com/webtools/imagecompressor/) | This tool compresses PNG/JPG images to up to 80% of it\'s original size, lowering it\'s data size.|\\n| [QR Code Generator](https://www.websiteplanet.com/webtools/free-qr-code-generator/) | This tool creates a custom, high-resolution QR code that directs users to websites, emails, social media sites and more.|\\n| [Favicon Generator](https://www.websiteplanet.com/webtools/favicon-generator/) | This tool automatically resizes an image to a favicon in PNG format.|"},{"id":"Comp07092022-Winners","metadata":{"permalink":"/blog/Comp07092022-Winners","source":"@site/blog/2022-07-18-Build-A-Thon-Winners.md","title":"MecSimCalc Build-A-Thon (July 9th - July 16th, 2022) Winners","description":"MecSimCalc had it\'s first ever hackathon in July 2022. This competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform. Users would create an app on the MecSimCalc website, tag it as \\"Comp07092022\\" and publish it for a chance to win up to $500. $400 would be given to the app with the highest score and $100 would be given to the most viewed app. However, since we had received so many high quality submissions, three additional bonus prizes were given out to apps that had not won but were innovative uses of the platform. Throughout the competition there were 77 sign-ups and 13 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s July 9th - July 16th, 2022 Build-A-Thon. To view all apps submitted during the competition, look for the tag \\"Comp07092022\\" on the MecSimCalc Explore page.","date":"2022-07-18T00:00:00.000Z","formattedDate":"July 18, 2022","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"},{"label":"Comp07092022","permalink":"/blog/tags/comp-07092022"},{"label":"hackathon","permalink":"/blog/tags/hackathon"}],"readingTime":10.23,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"Comp07092022-Winners","title":"MecSimCalc Build-A-Thon (July 9th - July 16th, 2022) Winners","authors":["dtrinh"],"tags":["MecSimCalc","Comp07092022","hackathon"]},"prevItem":{"title":"Useful Webtools","permalink":"/blog/websiteplanet-2022"},"nextItem":{"title":"Masonry Calculators","permalink":"/blog/masonry-calculators-2022"}},"content":"MecSimCalc had it\'s first ever hackathon in July 2022. This competition sponsored by 1984 Ventures, was aimed to increase the number of users and showcase the versatility of the platform. Users would create an app on the MecSimCalc website, tag it as \\"Comp07092022\\" and publish it for a chance to win up to $500. $400 would be given to the app with the highest score and $100 would be given to the most viewed app. However, since we had received so many high quality submissions, three additional bonus prizes were given out to apps that had not won but were innovative uses of the platform. Throughout the competition there were 77 sign-ups and 13 submissions. This blog post is dedicated to the top 5 scoring apps from MecSimCalc\'s July 9th - July 16th, 2022 Build-A-Thon. To view all apps submitted during the competition, look for the tag \\"Comp07092022\\" on the MecSimCalc Explore page.\\n\\n| App | Author(s) | Win | Prize |\\n| ----- | ----- | ----- | ----- |\\n| [iMedic](https://mecsimcalc.com/app/6179554/%F0%9D%90%A2_%F0%9D%90%8C_%F0%9D%90%9E_%F0%9D%90%9D_%F0%9D%90%A2_%F0%9D%90%9C_high_tech_accessible_care_%F0%9D%90%85_%F0%9D%90%A8_%F0%9D%90%AB_%F0%9D%90%80_%F0%9D%90%A5_%F0%9D%90%A5) | Zarik Khan, Dorsa Rohani, Videet Mehta | Grand Prize Winner (Highest score) | $400 CAD |\\n[Javelin Power Saver](https://mecsimcalc.com/app/1569496/javelin_power_saver_cuts_your_electricity_bill_smartly) | Chetan Tyagi | Most viewed app | $100 CAD |\\n[Grids for artists](https://mecsimcalc.com/app/5416553/grids_for_artists) | Camilo Andr\xe9s Rojas Hern\xe1ndez | Innovative use of MecSimCalc | $100 CAD | \\n[2D Heat Equation Visualizer](https://mecsimcalc.com/app/5317027/2_d_heat_equation_visualizer) | Jasper Eitzen | Innovative use of MecSimCalc | $100 CAD |\\n[LymeML](https://mecsimcalc.com/app/4663263/lyme_ml) | Soham Jain | Innovative use of MecSimCalc | $100 CAD |\\n\\n___________________________________________________________________________________________________________\\n## **[iMedic](https://mecsimcalc.com/app/6179554/%F0%9D%90%A2_%F0%9D%90%8C_%F0%9D%90%9E_%F0%9D%90%9D_%F0%9D%90%A2_%F0%9D%90%9C_high_tech_accessible_care_%F0%9D%90%85_%F0%9D%90%A8_%F0%9D%90%AB_%F0%9D%90%80_%F0%9D%90%A5_%F0%9D%90%A5)**\\n___________________________________________________________________________________________________________\\n### ___Bio: Dorsa Rohani___\\n\\nDorsa Rohani is a current high school student at Pierre Elliott Trudeau High School in Ontario, Canada. From electrical and computer engineering to healthcare and medicine, Dorsa is passionate about the intersection between technology and healthcare. In creating iMedic, Dorsa aimed to define the patient experience, and to address the ongoing predicament surrounding the chronic lack of access to efficient and accurate medical diagnosis. Indeed, across the continuum of care, the execution of ethical medical examination is of high precedence. In her spare time, she enjoys challenging herself, as well as performing the cello with her local string orchestra. \\n\\n### ___Bio: Videet Mehta___\\n\\nVideet Mehta is a rising Junior at Dulles High School in Sugar Land Texas. He is passionate about both medicine and technology. For the last four years, he has built robots that have been placed at the top of the First Tech Challenge state and world championships. He also does competitive programming and is currently in the silver division of the USACO competition. He learned python and ML just over a year ago. And since then, he has created many medically related machine learning projects. Additionally, he is the co-founder of two ed-tech companies: Project SUCCEED ([projectsucceed.org](https://projectsucceed.org/)) and Xceleration ([xceleration.org](https://xceleration.org/dl/welcome)). \\n\\n### ___Bio: Zarik Khan___\\n\\nHi, I\'m Zarik Khan and I\'m a rising junior at Dulles High School. I\'m passionate about machine learning, bioinformatics, web development, biomedical engineering, and app development. I worked with Videet and Dorsa to create iMedic to contribute to the distribution of medical technology in areas around the world that lack accessible access. Our project was made to detect some of the fatal causes of death in these areas to provide people a way to monitor their health and take necessary action quickly. MecsimCalc allowed us to integrate our python code into an easy, aesthetic, and secure front-end system. We hope to innovate on our current project by improving the accuracy of our calculations, expanding our app\'s reach, and developing new features. \\n\\n### ___About iMedic___\\n\\nFrom the detection of infectious, cancerous, and cardiovascular diseases using a variety of means; to academic tools such as 3D computations of Chaos Theory, iMedic is a multipurpose platform that uses ML, AI, libraries, and big data. As an app created for Third World countries & rural areas, it is for individuals who do not have access to medical support nor fast and efficient examination. iMedic is designed to be used frequently to evaluate one\'s risks for the most common medical conditions, and to provide users with knowledge of their current health. In addition, iMedic includes cutting-edge tools for research. By including a chaos calculator\u2014that computes & graphs chaotic systems such as the Lorenz Attractor & Logistic Map with yielded data via input\u2014iMedic has many applications to fields extending far beyond medicine, such as data science, math, and CS as well.\\n___________________________________________________________________________________________________________\\n## **[Javelin Power Saver](https://mecsimcalc.com/app/1569496/javelin_power_saver_cuts_your_electricity_bill_smartly)**\\n___________________________________________________________________________________________________________\\n### ___Bio: Chetan Tyagi___\\n\\nI am Chetan Tyagi, who will be joining University of Alberta for the undergraduate in Computing Science this fall, and is very keen to learn new things about the subject and keep up to date with the latest technologies.\\n\\n### ___About Javelin Power Saver___\\n\\nMy app is called \\"Javelin Power Saver\\". As the name suggests, this application aims to conserve your energy, and therefore cut your bill. With the help of this easy-to-use app, you will be able to\\n-calculate the power your appliances uses per month -the total money you spend on them in a month \\n-compare yourself with the electricity bill of an average citizen \\n-compare your appliances with popular products in the same range\\n\\n### ___Why I made this app___\\n\\nAs per a report by World Economic Forum, the end use efficiency of electricity in residential environment in USA is a mere 65%, signifying the level of wastage of energy. The waste of electricity ends up in increasing the costs for the user, while also making a carbon footprint on the environment. The application will focus on conserving electricity. The target users of this application will be all the people who use electricity in their homes.\\n\\nA big proportion of people in both urban and rural areas use electrical appliances and pay the electricity bill. It is common to look at the bill and thinking how the cost can be reduced. But as there is no way of accurately understanding how, we guess on different appliances, which makes the process harder. This application solves this. Also, before getting a new electrical appliance, we will be able to estimate the total power consumption, estimate total costs, compare with average households, and recommend how the user can make the combination of electrical appliances more efficient.\\n\\n### ___My experience with MecSimCalc___\\n\\nCompared from my previous experiences of creating web-apps, making apps here is much easier than anywhere else I have seen on the internet. It is completely free, encouraging both beginners and professionals to create apps without any hindrance. Overall, this is a great website to work on and I will recommend it to everyone interested in creating apps using Python.\\n___________________________________________________________________________________________________________\\n## **[Grids for artists](https://mecsimcalc.com/app/5416553/grids_for_artists)**\\n___________________________________________________________________________________________________________\\n### ___Bio: Camilo Andr\xe9s Rojas Hern\xe1ndez___\\n\\nI am Camilo Andr\xe9s Rojas Hern\xe1ndez, mathematics student at the Universidad Nacional de Colombia Medellin, since about 6 years ago I have learned on my own the development in python, its libraries and frameworks, something that identifies me is self-taught learning because over the years I have developed both soft skills and technical skills in the language, I am very motivated by programming and learning things every day.\\n\\n### ___About Grids for artists___\\n\\nI made this application because since my sister studies plastic arts, sometimes she has problems when it comes to making guide grids for her canvases, so I wanted to satisfy that need she had using python and the MecSimCalc tool, it is very easy to use, plus it has the main libraries, such as machine learning and image processing, in this case with Pillow, the input and output of data is very comfortable, anyone can share and create applications in record time. Awesome!\\n\\n___________________________________________________________________________________________________________\\n## **[2D Heat Equation Visualizer](https://mecsimcalc.com/app/5317027/2_d_heat_equation_visualizer)**\\n___________________________________________________________________________________________________________\\n\\n### ___Bio: Jasper Eitzen and About 2D Heat Equation Visualizer___\\n\\nMy name is Jasper Eitzen, I\u2019m currently a graduate student at the University of Alberta, pursuing a Master of Science in Mechanical Engineering. The work I do for my thesis mostly consists of lab experiments, although I do have experience using Python to analyse experimental data as well as some programming experience from my undergrad and graduate studies. I came up with the idea for 2D Heat Equation Visualizer from having written some simple numerical solvers in the past and seeing that MecSimCalc could provide a convenient way to get inputs from the user. I thought that the results of such an app could look quite interesting since I\u2019ve done similar projects in the past, and I always found it cool to set up an initial condition and see how it evolves over time based on math and physics. With contour plots as outputs, users can play around with the app\u2019s inputs to try and get unique results. I needed quite a few inputs and the input page on MecSimCalc was very useful in letting me lay them all out and provide explanations so that the user could pick values that provide good results. As someone with no experience in web development, I wouldn\u2019t have been able to make something like this app without the interface that MecSimCalc provided.\\n___________________________________________________________________________________________________________\\n## **[LymeML](https://mecsimcalc.com/app/4663263/lyme_ml)**\\n___________________________________________________________________________________________________________\\n### ___Bio: Soham Jain___\\n\\nSoham Jain is currently a sophomore with a passion for machine learning at Thomas Jefferson High School for Science and Technology, a prestigious high school that is ranked #1 in the United States. He works as a Machine Learning Engineer for a local start-up company called Vytal, where he assists in creating novel ML algorithms for fast and comprehensive neurologic and cardiac assessment through smartphone-based applications. In the past, he has worked closely with machine learning models using classification techniques to diagnose medical conditions, such as Malaria and Lyme disease. He has also won several awards from hackathons in the past through developing contemporary algorithms and deploying applications to assist with effective clinical diagnoses. As a technology specialist on the executive committee for his school\'s Student Government Association, Soham has used his experience in computer science to assist the student body with leading events and initiatives. Soham is also passionate about competition math, as he has competed in numerous national-level contests such as AIME, AMC 10, and MathCounts. Outside of school, Soham likes to tutor other students, play the piano, spend time with friends, and listen to music.\\n\\n### ___About LymeML___\\n\\nLymeML is an application built on MecSimCalc that uses novel machine learning algorithms to diagnose Lyme disease, a prevalent issue in numerous countries around the world. Research suggests that 14% of the world\'s population is currently affected or has been affected in the past with Lyme disease, contributing to the significance of this issue. Contemporary methods to diagnose this disease require a blood test. with lab reports anticipated to arrive three or four weeks after the patient seeks medical attention. However, waiting several days to receive a diagnosis allows symptoms to worsen, causing detrimental and irreversible damage to the brain or heart. Soham Jain, a current high school sophomore in the United States and Machine Learning Engineer at a local startup company, noticed that this issue can be resolved through creating a machine learning algorithm that sends an effective and immediate result to the user through image classification and a self-check symptoms diagnosis. This app implements convolutional neural networks (CNNs) and Python libraries such as NumPy and TensorFlow to accurately diagnose Lyme disease. Implementing this app will help several individuals living in remote areas to expedite the process of receiving a medical diagnosis, and differentiate their symptoms/rashes from those of other diseases. With the help of machine learning and MecSimCalc for making this app available to others, countless individuals will receive an instant diagnosis of Lyme disease and can treat their symptoms faster.\\n\\n### ___My experience with MecSimCalc___\\nWith the help of MecSimCalc, LymeML will continue on its mission to aid countless more individuals living in remote areas to receive an instant diagnosis for Lyme disease, and can treat their symptoms more efficiently. Through featuring LymeML as a winner for this hackathon, the opportunities for telemedicine and machine learning algorithms in the future has opened, and soon more accurate and immediate models will be created to diagnose several diseases. Creating the LymeML app through MecSimCalc was very straightforward and many Python libraries were accessible. The documentation and app analytics were also available, making my experience with this website more professional and enjoyable."},{"id":"masonry-calculators-2022","metadata":{"permalink":"/blog/masonry-calculators-2022","source":"@site/blog/2022-07-18-masonry-calculators.md","title":"Masonry Calculators","description":"Masonry is the building of structures from individual units, which are often laid in and bound together by mortar.","date":"2022-07-18T00:00:00.000Z","formattedDate":"July 18, 2022","tags":[{"label":"Calculators","permalink":"/blog/tags/calculators"},{"label":"Civil Engineering","permalink":"/blog/tags/civil-engineering"},{"label":"Engineering","permalink":"/blog/tags/engineering"}],"readingTime":2.74,"hasTruncateMarker":false,"authors":[{"name":"Mark Hagel","title":"Executive Director of Alberta Masonry Council","key":"mhagel"},{"name":"John Yu","title":"University Researcher","key":"jyu"}],"frontMatter":{"slug":"masonry-calculators-2022","title":"Masonry Calculators","authors":["mhagel","jyu"],"tags":["Calculators","Civil Engineering","Engineering"]},"prevItem":{"title":"MecSimCalc Build-A-Thon (July 9th - July 16th, 2022) Winners","permalink":"/blog/Comp07092022-Winners"},"nextItem":{"title":"Circuit Analysis Calculators","permalink":"/blog/electrical-calculators-2022"}},"content":"> **Masonry** is the building of structures from individual units, which are often laid in and bound together by mortar.\\n\\n![masonry](/blog/masonry.jpeg)\\n\\n### Authors\\n\\n**Dr. Mark D. Hagel** is the Executive Director of Alberta Masonry Council and has kindly made his masonry calculators available on MecSimCalc.\\nMark holds a Bachelor of Science in Actuarial Science and Applied Mathematics, a Bachelor of Science in Civil Engineering, and a Doctor of Philosophy in Civil Engineering all from the University of Calgary. Mark\u2019s fields of expertise include thermal and hygrothermal modeling of building systems, corrosion modeling, Life Cycle Cost Analysis, structural analysis and design, and the durability of building components. In 2018 Mark served on the National Research Council of Canada\u2019s (NRC) working group that developed the Guideline on Design for Durability of the Building Envelope.\\n\\n**John Yu** is a university researcher who converted Dr. Hagel\'s excel files into MecSimCalc apps.\\n\\n## Thermal calculation apps\\n\\n| Thermal calculation app                                                                                           | Description                                                                                                                                                                                                                                                                                                                                                    |\\n| ----------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| [BVCU Thermal Catalog App](https://mecsimcalc.com/app/6855626/bvcu_thermal_catalog_app)                           | An App that calculates the clear field (Uo) and linear transmittance (psi) values for foundation, floor, parapet corner and window/doors for Brick Veneer Concrete Block Unit (BVCU) wall systems for any value of exterior insulation. These values are needed to thermal bridging calculations to comply with the National Energy Code for Buildings (NECB). |\\n| [BVWS Thermal Catalog App](https://mecsimcalc.com/app/1652032/bvws_thermal_catalog_app)                           | An App that calculates the clear field Uo and linear transmittance values for foundation, floor, parapet corner and window/doors for Brick Veneer Concrete Block Unit (BVCU) wall systems for any value of exterior insulation. These values are needed to thermal bridging calculations to comply with the National Energy Code for Buildings (NECB).         |\\n| [BVSS Thermal Catalog App](https://mecsimcalc.com/app/6727343/bvss_thermal_catalog_app)                           | An App that calculates the clear field Uo and linear transmittance values for foundation, floor, parapet corner and window/doors for Brick Veneer Steel Stud (BVSS) wall systems for any value of exterior insulation. These values are needed to thermal bridging calculations to comply with the National Energy Code for Buildings (NECB).                  |\\n| [Thermal Bridging Assembly Calculation](https://mecsimcalc.com/app/7431858/thermal_bridging_assembly_calculation) | An App based on the BC hydro/Fortis/Powersmart \u201cEnhanced Thermal Performance Spreadsheet\u201d. The app calculates the impact on the clear field of a wall elevation from the thermal bridging effects of linear transmittances (foundation, floor, roof, corner, window/doors) and point transmittances (signage, etc.)                                            |\\n\\n## Life cycle cost analysis apps\\n\\n| Life cycle cost analysis app                                                                                                              | Description                                                                                                                                                                                      |\\n| ----------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\n| [Cladding Life Cost Comparison](https://mecsimcalc.com/app/3605070/cladding_life_cost_comparison)                                         | An App that calculates the cost of up to three different cladding systems for a given building service life, inflation rate and discount rate using Life Cycle Cost Analysis (LCCA).             |\\n| [Building Envelope Life Cost Comparison Calculator](https://mecsimcalc.com/app/8921970/building_envelope_life_cost_comparison_calculator) | An App that calculates the cost of up to three different cladding AND roofing systems for a given building service life, inflation rate and discount rate using Life Cycle Cost Analysis (LCCA). |\\n\\n## Carbon sequestration apps\\n\\n| Carbon sequestration app                                                                                | Description                                                                                         |\\n| ------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------- |\\n| [CMU Block Wall Carbon Calculator](https://mecsimcalc.com/app/9771381/cmu_block_wall_carbon_calculator) | An App to calculate the amount of carbon sequestered when constructing with concrete block masonry. |\\n| [Brick Veneer Carbon Calculator](https://mecsimcalc.com/app/2907334/brick_veneer_carbon_calculator)     | An App to calculate the amount of carbon sequestered when constructing with clay brick veneer.      |"},{"id":"electrical-calculators-2022","metadata":{"permalink":"/blog/electrical-calculators-2022","source":"@site/blog/2022-06-20-electrical-calculators.md","title":"Circuit Analysis Calculators","description":"This blog post is dedicated to circuit analysis calculators created for MecSimCalc.","date":"2022-06-20T00:00:00.000Z","formattedDate":"June 20, 2022","tags":[{"label":"Calculators","permalink":"/blog/tags/calculators"},{"label":"Electrical Engineering","permalink":"/blog/tags/electrical-engineering"},{"label":"Engineering","permalink":"/blog/tags/engineering"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"Daren Trinh","title":"MecSimCalc COO","url":"https://www.linkedin.com/in/daren-trinh-3816b0187/","key":"dtrinh"}],"frontMatter":{"slug":"electrical-calculators-2022","title":"Circuit Analysis Calculators","authors":["dtrinh"],"tags":["Calculators","Electrical Engineering","Engineering"]},"prevItem":{"title":"Masonry Calculators","permalink":"/blog/masonry-calculators-2022"},"nextItem":{"title":"Pharmacy Tools","permalink":"/blog/pharmacy-tools-2022"}},"content":"This blog post is dedicated to circuit analysis calculators created for MecSimCalc.\\n\\n| App | Description |\\n| ----- | ----- |\\n| [Thevenin Equivalent Circuit Calculator](https://mecsimcalc.com/app/6170581/thevenin_equivalent_circuit_calculator) | This app shows the Thevenin equivalent circuit for a simple circuit with a parallel load. The Thevenin voltage, Thevenin resistance and current flowing through the load resistor is returned.|\\n| [Voltage Divider Calculator](https://mecsimcalc.com/app/2144200/voltage_divider_calculator) | This is an app for a voltage divider circuit. The user first inputs the input voltage (V), and the values of two resistors (\u03a9, k\u03a9, M\u03a9). Using the inputs and the voltage divider equation, the output voltage (V) measured across resistor 2 is returned.|\\n| [Current Divider Calculator](https://mecsimcalc.com/app/9979869/current_divider_calculator) | This is an app for a current divider circuit. The user inputs an input voltage (V) and the values of up to 5 resistors (\u03a9) in parallel. After finding the total current, the calculator uses the current divider equation to generate a table showing the various current (A) flowing through each resistor.|\\n| [Op-Amp Gain and Output Voltage Calculator](https://mecsimcalc.com/app/8349728/op_amp_gain_and_output_voltage_calculator) | Operational amplifiers are an active circuit component commonly used in various circuits. This app uses an op-amp in two common configurations, an inverting and non-inverting amplifier. The user selects which configuration they are using, the value of the input resistor (\u03a9, k\u03a9, M\u03a9), the feedback resistor (\u03a9, k\u03a9, M\u03a9) and the input voltage (V). Depending on the circuit chosen, a gain and the corresponding output voltage is calculated and displayed as well as an image of the circuit schematic. |\\n| [Parallel Resistance Calculator](https://mecsimcalc.com/app/8934998/parallel_resistance_calculator) | This app calculates the equivalent resistance of a circuit containing resistors in parallel. The user inputs up to 8 resistors (\u03a9) and using the parallel resistance equation, an equivalent resistance for the circuit is returned. |\\n| [Resistor Color Code Calculator (4 Band)](https://mecsimcalc.com/app/7370385/resistor_color_code_calculator) | This app decodes the value of a 4 band axial lead resistor. The user selects 4 colors (left to right), and the corresponding resistance value and tolerance is given. |"},{"id":"pharmacy-tools-2022","metadata":{"permalink":"/blog/pharmacy-tools-2022","source":"@site/blog/2022-06-19-pharmacy-tools.md","title":"Pharmacy Tools","description":"At MecSimCalc, our hope is to bring industries still using spreadsheets and PDFs online. With MecSimCalc, it is now possible to share tools easier and run calculations faster than ever before.","date":"2022-06-19T00:00:00.000Z","formattedDate":"June 19, 2022","tags":[{"label":"Calculators","permalink":"/blog/tags/calculators"},{"label":"Pharmacy","permalink":"/blog/tags/pharmacy"},{"label":"Medicine","permalink":"/blog/tags/medicine"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[{"name":"Weichen Qiu","title":"MecSimCalc Co-founder","url":"https://github.com/w3ichen","imageURL":"https://avatars.githubusercontent.com/u/57570491","key":"wqiu"},{"name":"Samer Adeeb","title":"MecSimCalc Co-founder","url":"https://sameradeeb.srv.ualberta.ca/","imageURL":"https://avatars.githubusercontent.com/u/67557373?v=4","key":"sadeeb"}],"frontMatter":{"slug":"pharmacy-tools-2022","title":"Pharmacy Tools","authors":["wqiu","sadeeb"],"tags":["Calculators","Pharmacy","Medicine"]},"prevItem":{"title":"Circuit Analysis Calculators","permalink":"/blog/electrical-calculators-2022"},"nextItem":{"title":"CSA S16-19 CivE Calculators","permalink":"/blog/csa-calculators-2022"}},"content":"At MecSimCalc, our hope is to bring industries still using spreadsheets and PDFs online. With MecSimCalc, it is now possible to share tools easier and run calculations faster than ever before.\\n\\nThis blog post is dedicated to Pharmacy tools that we have converted from PDF files into interactive online tools.\\n\\n| Tool                                                                                                                                   | Source                                                                                                                     |\\n| -------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\\n| [Diabetes Risk](https://mecsimcalc.com/app/0233855/diabetes_risk)                                                                      | [Health Canada](https://health.canada.ca/apps/canrisk-standalone/pdf/canrisk-en.pdf)                                       |\\n| [Body Surface Area (BSA)](https://mecsimcalc.com/app/8086574/body_surface_area_bsa)                                                    | [Pharmacists.ca](https://www.pharmacists.ca/cpha-ca/assets/File/education-practice-resources/CalcAndDosing_EN_26Feb08.pdf) |\\n| [Body Surface Area in Infants, Children or Adults](https://mecsimcalc.com/app/5081549/body_surface_area_in_infants_children_or_adults) | [Pharmacists.ca](https://www.pharmacists.ca/cpha-ca/assets/File/education-practice-resources/CalcAndDosing_EN_26Feb08.pdf) |\\n| [Ideal Body Weight (IBW)](https://mecsimcalc.com/app/5519816/ideal_body_weight_ibw)                                                    | [Pharmacists.ca](https://www.pharmacists.ca/cpha-ca/assets/File/education-practice-resources/CalcAndDosing_EN_26Feb08.pdf) |\\n| [Adjusted Body Weight (ABW)](https://mecsimcalc.com/app/7850429/adjusted_body_weight_abw)                                              | [Pharmacists.ca](https://www.pharmacists.ca/cpha-ca/assets/File/education-practice-resources/CalcAndDosing_EN_26Feb08.pdf) |\\n| [Creatinine Clearance (ClCr)](https://mecsimcalc.com/app/8292339/creatinine_clearance_cl_cr)                                           | [Pharmacists.ca](https://www.pharmacists.ca/cpha-ca/assets/File/education-practice-resources/CalcAndDosing_EN_26Feb08.pdf) |\\n| [Framingham Risk Score (FRS)](https://mecsimcalc.com/app/9081445/framingham_risk_score_frs)                                            | [Canadian Cardiovascular Society](https://ccs.ca/app/uploads/2020/12/FRS_eng_2017_fnl_greyscale.pdf)                       |\\n| [UKPDS Cardiac Risk Calculator](https://mecsimcalc.com/app/0114458/ukpds_cardiac_risk_calculator)                                      | [MDApp](https://www.mdapp.co/ukpds-cardiac-risk-calculator-215/)                                                           |"},{"id":"csa-calculators-2022","metadata":{"permalink":"/blog/csa-calculators-2022","source":"@site/blog/2022-06-10-csa-calculators.md","title":"CSA S16-19 CivE Calculators","description":"I\u2019ve spent the last month creating apps for the purpose of designing flexural members, compression members, tension members, and beam-columns in accordance with CSA S16-19.","date":"2022-06-10T00:00:00.000Z","formattedDate":"June 10, 2022","tags":[{"label":"Calculators","permalink":"/blog/tags/calculators"},{"label":"Civil Engineering","permalink":"/blog/tags/civil-engineering"},{"label":"Engineering","permalink":"/blog/tags/engineering"}],"readingTime":2.37,"hasTruncateMarker":false,"authors":[{"name":"Rana El Sadig","title":"University researcher","key":"relsadig"}],"frontMatter":{"slug":"csa-calculators-2022","title":"CSA S16-19 CivE Calculators","authors":"relsadig","tags":["Calculators","Civil Engineering","Engineering"]},"prevItem":{"title":"Pharmacy Tools","permalink":"/blog/pharmacy-tools-2022"},"nextItem":{"title":"Starter Calculators","permalink":"/blog/starter-calculators-2021"}},"content":"I\u2019ve spent the last month creating apps for the purpose of designing flexural members, compression members, tension members, and beam-columns in accordance with CSA S16-19.\\n\\nFirst, I had to learn Python. I took a 12-hour beginners course which was sufficient for learning the basics to Python, however not specific enough to be able to code the apps and get them to function as desired. Luckily, there are plenty of resources online and through watching YouTube tutorials, I was able to code the apps. Overall, learning python required lots of trial and error but was overall a smooth process due to the available resources.\\n\\nI also had a very good experience using MecSimCalc as I found it incredibly easy to use and efficient, and it did not take long to adjust to.\\n\\nFive applications have been created for design calculations in accordance with CSA S16-19. All applications require an input of the Cross Section, Yield Strength, and Unbraced Length of the member. The applications and their capabilities are presented below.\\n\\n| Calculator                                                                                                                                       | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\\n| ------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| [Design of Flexural Members with W-Section](https://mecsimcalc.com/app/4389397/design_of_flexural_members_with_w_section_csa_s_16_19)            | This application computes the Section Class, Plastic or Yield Flexural Moment, Factored Flexural Moment Resistance, and Factored Shear Resistance of W-Sections under uniformly distributed load. Along with the mentioned inputs, there is also a lateral support option. If the beam is laterally unsupported, the Equivalent Moment Factor and Critical Elastic Flexural Moment are also computed for the purpose of calculating the Factored Moment Resistance.                                             |\\n| [Design of Compression Members](https://mecsimcalc.com/app/7445336/design_of_compression_members_in_accordance_with_csa_s_16_19)                 | This application checks the Width-to-Thickness Ratio, Slenderness, and computes the Factored Compression Resistance for W-Sections and HSS. Along with the general inputs for the CSA apps, there is also the option of support conditions, which is used to determine the Effective Length Factor in the Factored Compression Resistance calculations. If the compression member does not pass the Width-to-Thickness Ratio Check, the app stops there as the predicted resistance cannot actually be reached. |\\n| [Design of Tension Members](https://mecsimcalc.com/app/0029258/design_of_tension_members_in_accordance_with_csa_s_16_19)                         | This application calculates the Factored Tensile Resistance based on gross section yielding and performs a Serviceability Limit State (SLS) vibration check for W-Sections and HSS.                                                                                                                                                                                                                                                                                                                             |\\n| [W-Section Beam-Columns under Major Axis Bending](https://mecsimcalc.com/app/3708352/w_shaped_beam_columns_under_major_axis_bending_csa_s_16_19) | This application performs the four limit state checks for Beam-Columns with W-Sections under major axis bending. Along with the general inputs, the app requires the user to input the Factored Compression Load, Smaller End Factored Moment, Larger End Factored Moment, Frame Type, and Moment Distribution. The four limit states that are checked are: Cross-Sectional Strength, Overall Member Strength, Lateral-Torsional Buckling Strength, and Moment Check.                                           |\\n| [W-Section Beam-Columns under Biaxial Bending](https://mecsimcalc.com/app/6568576/w_shaped_beam_columns_under_biaxial_bending_csa_s_16_19)       | This application performs the four limit state checks for Beam-Columns with W-Sections under biaxial bending. The inputs and outputs are similar to the app for Beam-Columns under major axis bending.                                                                                                                                                                                                                                                                                                          |"},{"id":"starter-calculators-2021","metadata":{"permalink":"/blog/starter-calculators-2021","source":"@site/blog/2022-04-17-starter-calculators.md","title":"Starter Calculators","description":"The following are free-to-use calculators developed by researchers at the University of Alberta for a variety of disciplines.","date":"2022-04-17T00:00:00.000Z","formattedDate":"April 17, 2022","tags":[{"label":"Calculators","permalink":"/blog/tags/calculators"},{"label":"Engineering","permalink":"/blog/tags/engineering"}],"readingTime":5.08,"hasTruncateMarker":false,"authors":[{"name":"Darius Fang","title":"University researcher","key":"dfang"},{"name":"Saif Husnain","title":"University researcher","key":"shusnain"},{"name":"Qian Zheng","title":"PhD student in Civil Engineering","key":"qzheng"},{"name":"Weichen Qiu","title":"MecSimCalc Co-founder","url":"https://github.com/w3ichen","imageURL":"https://avatars.githubusercontent.com/u/57570491","key":"wqiu"},{"name":"Samer Adeeb","title":"MecSimCalc Co-founder","url":"https://sameradeeb.srv.ualberta.ca/","imageURL":"https://avatars.githubusercontent.com/u/67557373?v=4","key":"sadeeb"}],"frontMatter":{"slug":"starter-calculators-2021","title":"Starter Calculators","authors":["dfang","shusnain","qzheng","wqiu","sadeeb"],"tags":["Calculators","Engineering"]},"prevItem":{"title":"CSA S16-19 CivE Calculators","permalink":"/blog/csa-calculators-2022"},"nextItem":{"title":"Welcome to MecSimCalc","permalink":"/blog/welcome"}},"content":"The following are free-to-use calculators developed by researchers at the University of Alberta for a variety of disciplines.\\n\\n## Civil Engineering\\n\\n| App                                                                                                                                                    | Category               | Description                                                                                                                                                                                                                                                                                                          |\\n| ------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| [CSA S16-1](https://mecsimcalc.com/app/8201998/csa_s_16_1)                                                                                             | Structural Engineering | An application to determine class, moments and maximum shear of W section Steel beams.                                                                                                                                                                                                                               |\\n| [CSA S16-2](https://mecsimcalc.com/app/0595262/csa_s_16_2)                                                                                             | Structural Engineering | Gives all beams with specified input                                                                                                                                                                                                                                                                                 |\\n| [CSA S16 Tension Member](https://mecsimcalc.com/app/0935172/csa_s_16_tension_member)                                                                   | Structural Engineering | CSA S16 Tension Member                                                                                                                                                                                                                                                                                               |\\n| [CSA S16 Compression Member](https://mecsimcalc.com/app/0201297/csa_s_16_compression_member)                                                           | Structural Engineering | CSA S16 Compression Member                                                                                                                                                                                                                                                                                           |\\n| [CSA S16 Flexure](https://mecsimcalc.com/app/9717102/csa_s_16_flexure)                                                                                 | Structural Engineering | CSA S16 Flexure                                                                                                                                                                                                                                                                                                      |\\n| [Strain Demand in Pipes Subjected to Ground Movement](https://mecsimcalc.com/app/6888704/strain_demand_in_pipes_subjected_to_ground_movement)          | Pipeline Engineering   | This page analyzes the response of the pipe to ground movements induced by geotechnical activities, e.g., ground heave and subsidence, slope instability, landslides, liquefaction-induced action, and tectonic faults.                                                                                              |\\n| [Stress Design of Straight Pipe According to CSA Z662.19](https://mecsimcalc.com/app/4446725/stress_design_of_straight_pipe_according_to_csa_z_662_19) | Pipeline Engineering   | CSA Z662.19 provides equations limiting the circumferential and longitudinal stresses in steel pipelines. Given the pipe properties and field conditions, this page performs the required checks according to sections 4.3.5.1, 4.7, and 4.8.                                                                        |\\n| [Stress Strain Curve of Steel Materials](https://mecsimcalc.com/app/9389449/stress_strain_curve_of_steel_materials)                                    | Pipeline Engineering   | This page calculates converts the Engineering stress-strain curve to true stress-strain curve using the well known conversion equations. The page outputs the stress-plastic strain data required by some finite element analysis software and provides the best-fit Ramberg-Osgood approximation to the given data. |\\n\\n## Electrical Engineering\\n\\n| App                                                                                                               | Category             | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\\n| ----------------------------------------------------------------------------------------------------------------- | -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\n| [Processor Comparison](https://mecsimcalc.com/app/5558606/processor_comparison)                                   | Hardware Engineering | Compares two processors by utilizing benchmark times for different programs.                                                                                                                                                                                                                                                                                                                                                                                                                                 |\\n| [Discrete Signals Difference Equations](https://mecsimcalc.com/app/8483456/discrete_signals_difference_equations) | Signal Processing    | An application to determine values of a difference equation. Assumptions are sets the x(n)=\u03b4(n) (the impulse function) and y(n)=0 for n<0. Make sure n is greater than the size of Y coefficients.                                                                                                                                                                                                                                                                                                           |\\n| [Convolution](https://mecsimcalc.com/app/9697406/convolution)                                                     | Signal Processing    | An application to determine x[n]\\\\*h[n] = y[n]. The input contains the n index of each coefficient, such as the first element is n = 0 for the x function.                                                                                                                                                                                                                                                                                                                                                    |\\n| [Circular Convolution](https://mecsimcalc.com/app/1085971/circular_convolution)                                   | Signal Processing    | An application to determine the circular convolution of 2 functions.                                                                                                                                                                                                                                                                                                                                                                                                                                         |\\n| [Floating point binary numbers](https://mecsimcalc.com/app/5513818/floating_point_binary_numbers)                 | Binary               | Floating point numbers can be represented using IEEE 754 in binary. This system uses one sign bit, then a set number of exponent (k) bits and finally, fraction (n) bits. Depending on the number of these bits, the representations of numbers change as well. This calculator is made with the intention of getting the largest floating point number possible as well as the largest integer. There are restrictions on the number of bits that can be checked, due to an overflow possibility in python. |\\n| [Hard Disk Drive (HDD) Reading a File](https://mecsimcalc.com/app/0378917/hard_disk_drive_hdd_reading_a_file)     | Hardware Engineering | Best and random cases of the time an HDD will take to read over a file. Assumes both block size and sector size are the same                                                                                                                                                                                                                                                                                                                                                                                 |\\n\\n## Chemistry\\n\\n| App                                                                                    | Category       | Description                                                                                                                             |\\n| -------------------------------------------------------------------------------------- | -------------- | --------------------------------------------------------------------------------------------------------------------------------------- |\\n| [Thermo Question Type 1](https://mecsimcalc.com/app/0663779/thermo_question_type_1)    | Thermodynamics | An application to determine quality given certain knowns and unknowns. Known variable values must correspond to Thermo tables.          |\\n| [Thermo Question Type 2](https://mecsimcalc.com/app/1903331/thermo_question_type_2)    | Thermodynamics | An application to determine particular unknown given certain knowns. Known variable values must correspond to Thermo tables.            |\\n| [Thermo Question Type 1b](https://mecsimcalc.com/app/2584336/thermo_question_type_1_b) | Thermodynamics | An application to determine a specific value given certain knowns and unknowns. Known variable values must correspond to Thermo tables. |\\n| [Diagrams](https://mecsimcalc.com/app/3069689/diagrams)                                | Thermodynamics | An application to graph Pv and Tv graphs.                                                                                               |\\n\\n## Physics\\n\\n| App                                                                                           | Category      | Description                                                                                                                              |\\n| --------------------------------------------------------------------------------------------- | ------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |\\n| [Thin Lens Equation](https://mecsimcalc.com/app/3152375/thin_lens_equation)                   | Optics        | Knowing the distance an object is from a lens, we can determine the focal length and the magnification.                                  |\\n| [Thin Compound Lens Equation](https://mecsimcalc.com/app/9676607/thin_compound_lens_equation) | Optics        | We can find combined focal length of two lens. If d is input as being greater than f_1, then it will be assumed that d is 0.             |\\n| [Lensmaker Equation](https://mecsimcalc.com/app/6017792/lensmaker_equation)                   | Optics        | The lens maker equation can be used to find both the Power and focal length of a thick lens and a thin lens if the thickness tends to 0. |\\n| [Snell\'s Law](https://mecsimcalc.com/app/1227912/snells_law)                                  | Optics        | This application will derive the angle of refraction using Snell\'s Law.                                                                  |\\n| [Coulomb\'s Law](https://mecsimcalc.com/app/5545394/coulombs_law)                              | Electrostatic | Coulomb\'s Law with three point charges                                                                                                   |\\n\\n## Business and Finance\\n\\n| App                                                               | Category              | Description|\\n| ----------------------------------------------------------------- | --------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| [Antique Lamps](https://mecsimcalc.com/app/6285257/antique_lamps) | Max Profit Estimation | An application to maximize profits, with the given types of lamps, bass, and platinum. Maximize, has 2 inputs with their coefficients. Assembly has 3 inputs, each being its respective coefficients, and Max demand has 1 input. The coefficients are aB+ bP = cC where B is brass, P is platinum, and C is the constant, with the input [a,b,c]. The inputs are interpreted into functions where it is drawn on the graph. There will be a feasible region where all boundaries will be satisfied. The program then picks all the intersections within the feasible region(note that some points will not be accounted for). The output just gives the profits given at that point on the graph. |\\n| [Cattle Profit](https://mecsimcalc.com/app/4532115/cattle_profit) | Max Profit Estimation | An application to maximize profits (only gives boundaries), the first table consists of the first element being the regular, and the 2nd being the premium. The second table consists of the first element being alfalfa and the second being barley. This can also be translated such as the required material for a toy car to be inputted, but in this case it is just using cattle profit as the output. The program basically just gives the boundaries and conditions of what to expect before proceeding onto the next step.                                                                                                                                                                |"},{"id":"welcome","metadata":{"permalink":"/blog/welcome","source":"@site/blog/2022-03-02-welcome.md","title":"Welcome to MecSimCalc","description":"Welcome to our newly released MecSimCalc platform for creating and sharing computational tools on the web. With a few very simple steps, educators and professionals can create interactive web applications for their students or clients.","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"MecSimCalc","permalink":"/blog/tags/mec-sim-calc"}],"readingTime":2.13,"hasTruncateMarker":false,"authors":[{"name":"Samer Adeeb","title":"MecSimCalc Co-founder","url":"https://sameradeeb.srv.ualberta.ca/","imageURL":"https://avatars.githubusercontent.com/u/67557373?v=4","key":"sadeeb"}],"frontMatter":{"slug":"welcome","title":"Welcome to MecSimCalc","authors":"sadeeb","tags":["MecSimCalc"]},"prevItem":{"title":"Starter Calculators","permalink":"/blog/starter-calculators-2021"}},"content":"Welcome to our newly released **MecSimCalc** platform for **creating** and **sharing** computational tools on the web. With a few very simple steps, educators and professionals can create interactive web applications for their students or clients.\\n\\n**MecSimCalc** has been a concept in my head since I joined the Engineering Faculty at the University of Alberta in 2007. At the time, I was looking for an easy way to create interactive web examples for my students to help them visualize different Mathematical and Engineering concepts. Throughout the years, I experimented with [webMathematica](https://www.wolfram.com/products/webmathematica/) and [javascripts](https://www.javascript.com/). However, dealing with web infrastructure has always been a struggle. I still remember the agony of trying to switch my whole website from traditional HTTP to HTTPS or the yearly agony of renewing the licenses of the different components that I was using. Throughout the years, my experience has shaped my vision for creating **MecSimCalc** as a platform that frees the developer from all the ever changing web architecture to allow them to focus on their application.\\n\\n**MecSimCalc** is a simple, yet extremely powerful platform that has applications in a large array of fields. Here is an example in [Medicine](https://www.mecsimcalc.com/app/7188609/diabetes_risk), by answering a simple questionnaire, a visitor to the app can identify their diabetes risk. The app was created based on an algorithm published on a [Canadian government website](https://www.healthycanadians.gc.ca/en/canrisk). For University Mathematics [Education](https://www.mecsimcalc.com/app/4730621/numerical_integration), a student can enter any functional expression and the limits of an integral while the interactive app would calculate the numerical integral and would provide a plot, powered by `matplotlib` for visual illustration of the example.\\n\\nWe created **MecSimCalc** for professionals in engineering and finance. Consider the [app](https://www.mecsimcalc.com/app/3333910/mortgage_calculator) that can be distributed by a mortgage specialist to his or her clients to help them identify the price of the house that matches their finances. Or consider the [Engineering app](https://www.mecsimcalc.com/app/8106967/cor_las_model) that uses the [CorLAS](https://www.researchgate.net/publication/309917227_Review_of_Engineering_Fracture_Mechanics_Model_for_Pipeline_Applications) algorithm to calculate the failure pressure of pipelines with longitudinal crack like features. While these apps are currently publicly available, we can work with any professionals to help them build and share their specific applications only with their clients.\\n\\nI welcome all our visitors to [explore](https://www.mecsimcalc.com/explore) the different applications that have been created using **MecSimCalc**.\\n\\nWe also invite all professionals, scientists, and educators who would like to publicly or privately publish their lively algorithms to try out our **free** platform. We promise to keep it free for any publicly available applications. We are also happy to work with any professionals wishing to use **MecSimCalc** for their enterprise applications.\\n\\nPlease send us any suggestions, questions, or inquiries to info@mecsimcalc.com"}]}')}}]);