"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[190],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>g});var n=a(7294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var o=n.createContext({}),d=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return n.createElement(o.Provider,{value:e},t.children)},s="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,o=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),s=d(a),k=l,g=s["".concat(o,".").concat(k)]||s[k]||u[k]||r;return a?n.createElement(g,i(i({ref:e},m),{},{components:a})):n.createElement(g,i({ref:e},m))}));function g(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=k;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[s]="string"==typeof t?t:l,i[1]=p;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},2741:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_label:"mecsimcalc Library",sidebar_position:100},i="Mecsimcalc v0.1.5 documentation",p={unversionedId:"mecsimcalc-library",id:"mecsimcalc-library",title:"Mecsimcalc v0.1.5 documentation",description:"This library is designed to provide a set of functions for handling and converting various types of data, such as base64 encoded data, Pandas DataFrames, and Pillow images.",source:"@site/docs/mecsimcalc-library.md",sourceDirName:".",slug:"/mecsimcalc-library",permalink:"/mecsimcalc-library",draft:!1,tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_label:"mecsimcalc Library",sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Localhost",permalink:"/self-hosting-apps/localhost"}},o={},d=[{value:"General",id:"general",level:2},{value:"input_to_file",id:"input_to_file",level:3},{value:"Description:",id:"description",level:4},{value:"Arguments:",id:"arguments",level:4},{value:"Raises:",id:"raises",level:4},{value:"Returns:",id:"returns",level:4},{value:"Example:",id:"example",level:4},{value:"metadata_to_filetype",id:"metadata_to_filetype",level:3},{value:"Description:",id:"description-1",level:4},{value:"Arguments:",id:"arguments-1",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"Example:",id:"example-1",level:4},{value:"Text",id:"text",level:2},{value:"string_to_file",id:"string_to_file",level:3},{value:"Description:",id:"description-2",level:4},{value:"Arguments:",id:"arguments-2",level:4},{value:"Raises:",id:"raises-1",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"Example:",id:"example-2",level:4},{value:"Code step:",id:"code-step",level:4},{value:"Outputs step:",id:"outputs-step",level:4},{value:"Spreadsheets",id:"spreadsheets",level:2},{value:"file_to_dataframe",id:"file_to_dataframe",level:3},{value:"Description:",id:"description-3",level:4},{value:"Arguments:",id:"arguments-3",level:4},{value:"Raises:",id:"raises-2",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"Example:",id:"example-3",level:4},{value:"input_to_dataframe",id:"input_to_dataframe",level:3},{value:"Description:",id:"description-4",level:4},{value:"Arguments:",id:"arguments-4",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"Example:",id:"example-4",level:4},{value:"print_dataframe",id:"print_dataframe",level:3},{value:"Description:",id:"description-5",level:4},{value:"Arguments:",id:"arguments-5",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"Example:",id:"example-5",level:4},{value:"Code step:",id:"code-step-1",level:4},{value:"Outputs step:",id:"outputs-step-1",level:4},{value:"Tables",id:"tables",level:2},{value:"table_to_dataframe",id:"table_to_dataframe",level:3},{value:"Description:",id:"description-6",level:4},{value:"Arguments:",id:"arguments-6",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"Example:",id:"example-6",level:4},{value:"print_table",id:"print_table",level:3},{value:"Description:",id:"description-7",level:4},{value:"Arguments:",id:"arguments-7",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"Example:",id:"example-7",level:4},{value:"Code step:",id:"code-step-2",level:4},{value:"Outputs step:",id:"outputs-step-2",level:4},{value:"Images",id:"images",level:2},{value:"file_to_PIL",id:"file_to_pil",level:3},{value:"Description:",id:"description-8",level:4},{value:"Arguments:",id:"arguments-8",level:4},{value:"Raises:",id:"raises-3",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"Example:",id:"example-8",level:4},{value:"Code step:",id:"code-step-3",level:4},{value:"Outputs step:",id:"outputs-step-3",level:4},{value:"input_to_PIL",id:"input_to_pil",level:3},{value:"Description:",id:"description-9",level:4},{value:"Arguments:",id:"arguments-9",level:4},{value:"Returns:",id:"returns-9",level:4},{value:"Example:",id:"example-9",level:4},{value:"print_image",id:"print_image",level:3},{value:"Description:",id:"description-10",level:4},{value:"Arguments:",id:"arguments-10",level:4},{value:"Returns:",id:"returns-10",level:4},{value:"Example:",id:"example-10",level:4},{value:"Code step:",id:"code-step-4",level:4},{value:"Outputs step:",id:"outputs-step-4",level:4},{value:"Plots",id:"plots",level:2},{value:"print_plot",id:"print_plot",level:3},{value:"Description:",id:"description-11",level:4},{value:"Arguments:",id:"arguments-11",level:4},{value:"Returns:",id:"returns-11",level:4},{value:"Example:",id:"example-11",level:4},{value:"Code step:",id:"code-step-5",level:4},{value:"Outputs step:",id:"outputs-step-5",level:4}],m={toc:d},s="wrapper";function u(t){let{components:e,...a}=t;return(0,l.kt)(s,(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"mecsimcalc-v015-documentation"},"Mecsimcalc v0.1.5 documentation"),(0,l.kt)("p",null,"This library is designed to provide a set of functions for handling and converting various types of data, such as base64 encoded data, Pandas DataFrames, and Pillow images."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/MecSimCalc/MecSimCalc-utils"},"GitHub Repository")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://pypi.org/project/mecsimcalc/"},"PyPi Page"))),(0,l.kt)("h2",{id:"general"},"General"),(0,l.kt)("h3",{id:"input_to_file"},"input_to_file"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/general_utils.py#L7C1-L56C61"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"input_to_file(input_file, metadata = False)\n")),(0,l.kt)("h4",{id:"description"},"Description:"),(0,l.kt)("p",null,"Converts a base64 encoded string into a file object and metadata"),(0,l.kt)("h4",{id:"arguments"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input_file"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")),(0,l.kt)("td",{parentName:"tr",align:null},"Base64 encoded string, prefixed with metadata")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"metadata"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"Flag to return metadata with the file. (Defaults to False)")))),(0,l.kt)("h4",{id:"raises"},"Raises:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Exception"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"ValueError"))),(0,l.kt)("td",{parentName:"tr",align:null},"If the input string doesn't contain ';base64,' to separate metadata and file data.")))),(0,l.kt)("h4",{id:"returns"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Condition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"io.BytesIO"))),(0,l.kt)("td",{parentName:"tr",align:null},"The decoded file data (The thing you get when you open a file in Python)"),(0,l.kt)("td",{parentName:"tr",align:null},"metadata is False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"(io.BytesIO, str)"))),(0,l.kt)("td",{parentName:"tr",align:null},"The decoded file data and its metadata"),(0,l.kt)("td",{parentName:"tr",align:null},"metadata is True")))),(0,l.kt)("h4",{id:"example"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  file, metadata = msc.input_to_file(input_file, metadata = True)\n  print(metadata) # data:image/jpeg;base64,\n  print(type(file)) # <class '_io.BytesIO'>\n  return {\"file\":file}\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"metadata_to_filetype"},"metadata_to_filetype"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/general_utils.py#L59C1-L86C21"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"metadata_to_filetype(metadata):\n")),(0,l.kt)("h4",{id:"description-1"},"Description:"),(0,l.kt)("p",null,"Extracts the file type from the metadata"),(0,l.kt)("h4",{id:"arguments-1"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"metadata"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")),(0,l.kt)("td",{parentName:"tr",align:null},'The metadata string in the form "Data:(MIME type);base64,"(returned from ',(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input_to_file")),")")))),(0,l.kt)("h4",{id:"returns-1"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"str"))),(0,l.kt)("td",{parentName:"tr",align:null},'The file type (e.g. "jpeg")')))),(0,l.kt)("h4",{id:"example-1"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  file, metadata = msc.input_to_file(input_file, metadata = True)\n  print(metadata) # data:image/jpeg;base64,\n\n  download_file_type = msc.metadata_to_filetype(metadata)\n  print(download_file_type) # jpeg\n  return {\"file\":file}\n")),(0,l.kt)("h2",{id:"text"},"Text"),(0,l.kt)("h3",{id:"string_to_file"},"string_to_file"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/text_utils.py#L4C1-L67C85"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'string_to_file(\n    text\n    filename= "myfile",\n    download_text = "Download File",\n)\n')),(0,l.kt)("h4",{id:"description-2"},"Description:"),(0,l.kt)("p",null,"Generates a downloadable text file containing the given text"),(0,l.kt)("h4",{id:"arguments-2"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"text"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")),(0,l.kt)("td",{parentName:"tr",align:null},"Text to be downloaded")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"filename"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'Name of the download file. (Defaults to "myfile")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_text"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'Text to be displayed as the download link. (Defaults to "Download File")')))),(0,l.kt)("h4",{id:"raises-1"},"Raises:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Exception"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"TypeError"))),(0,l.kt)("td",{parentName:"tr",align:null},"If the input text is not a string.")))),(0,l.kt)("h4",{id:"returns-2"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"str"))),(0,l.kt)("td",{parentName:"tr",align:null},"HTML download link")))),(0,l.kt)("h4",{id:"example-2"},"Example:"),(0,l.kt)("h4",{id:"code-step"},"Code step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import mecsimcalc as msc\n\ndef main(inputs):\n  download_link = msc.string_to_file("Hello World!")\n  return {"download":download_link}\n')),(0,l.kt)("h4",{id:"outputs-step"},"Outputs step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# outputs.downloadLink is the html download link generated by the function\n{{ outputs.download }}\n")),(0,l.kt)("h2",{id:"spreadsheets"},"Spreadsheets"),(0,l.kt)("h3",{id:"file_to_dataframe"},"file_to_dataframe"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/spreadsheet_utils.py#L9C1-L48C14"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"file_to_dataframe(file_data):\n")),(0,l.kt)("h4",{id:"description-3"},"Description:"),(0,l.kt)("p",null,"Converts a base64 encoded file data into a pandas DataFrame"),(0,l.kt)("h4",{id:"arguments-3"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"file_data"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"io.BytesIO")),(0,l.kt)("td",{parentName:"tr",align:null},"Decoded file data (e.g. from ",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input_to_file")),")")))),(0,l.kt)("h4",{id:"raises-2"},"Raises:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Exception"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"pd.errors.ParserError"))),(0,l.kt)("td",{parentName:"tr",align:null},"If the file data cannot be converted to a DataFrame (i.e. file is not an Excel or CSV file or is corrupted)")))),(0,l.kt)("h4",{id:"returns-3"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"pd.DataFrame"))),(0,l.kt)("td",{parentName:"tr",align:null},"DataFrame created from file data")))),(0,l.kt)("h4",{id:"example-3"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  decoded_file = msc.input_to_file(input_file)\n  df = msc.file_to_dataframe(decoded_file)\n  print(df)\n  #    A  B  C\n  # 0  a  b  c\n  # 1  d  e  f\n  return {\"df\":df}\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"input_to_dataframe"},"input_to_dataframe"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/spreadsheet_utils.py#L51C1-L87C44"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"input_to_dataframe(file):\n")),(0,l.kt)("h4",{id:"description-4"},"Description:"),(0,l.kt)("p",null,"Converts a base64 encoded file data into a pandas DataFrame"),(0,l.kt)("h4",{id:"arguments-4"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input_file"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")),(0,l.kt)("td",{parentName:"tr",align:null},"Base64 encoded file data")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_file_type"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")),(0,l.kt)("td",{parentName:"tr",align:null},"If True, the function also returns the file type (Defaults to False)")))),(0,l.kt)("h4",{id:"returns-4"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Condition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"pd.DataFrame"))),(0,l.kt)("td",{parentName:"tr",align:null},"DataFrame created from file data"),(0,l.kt)("td",{parentName:"tr",align:null},"get_file_type is False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"(pd.DataFrame, str)"))),(0,l.kt)("td",{parentName:"tr",align:null},"Tuple containing the DataFrame and the file type"),(0,l.kt)("td",{parentName:"tr",align:null},"get_file_type is True")))),(0,l.kt)("h4",{id:"example-4"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  df, file_type = msc.input_to_dataframe(input_file, get_file_type = True)\n  print(df)\n  #    A  B  C\n  # 0  a  b  c\n  # 1  d  e  f\n  print(file_type) # csv\n  return {\"df\":df}\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"print_dataframe"},"print_dataframe"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/spreadsheet_utils.py#L90C1-L186C39"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'print_dataframe(\n    df,\n    download = False,\n    download_text = "Download Table",\n    download_file_name = "mytable",\n    download_file_type = "csv",\n):\n')),(0,l.kt)("h4",{id:"description-5"},"Description:"),(0,l.kt)("p",null,"Creates an HTML table and a download link for a given DataFrame"),(0,l.kt)("h4",{id:"arguments-5"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"df"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"pd.DataFrame")),(0,l.kt)("td",{parentName:"tr",align:null},"DataFrame to be converted")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"If True, function returns a download link (Defaults to False)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_text"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'Text to be displayed as the download link (Defaults to "Download Table")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_file_name"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'Name of file when downloaded (Defaults to "mytable")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_file_type"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'File type of downloaded file (Defaults to "csv")')))),(0,l.kt)("h4",{id:"returns-5"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Condition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"str"))),(0,l.kt)("td",{parentName:"tr",align:null},"HTML table"),(0,l.kt)("td",{parentName:"tr",align:null},"download is False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Tuple[str, str]"))),(0,l.kt)("td",{parentName:"tr",align:null},"(HTML table, HTML download link)"),(0,l.kt)("td",{parentName:"tr",align:null},"download is True")))),(0,l.kt)("h4",{id:"example-5"},"Example:"),(0,l.kt)("h4",{id:"code-step-1"},"Code step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs[\'file\']\n  df = msc.input_to_dataframe(input_file)\n  table, download = msc.print_dataframe(df, download=True, download_file_name="FunkyTable", download_text="Download My Funky Table HERE!", download_file_type="xlsx")\n  return {\n    "table":table,\n    "download":download,\n  }\n')),(0,l.kt)("h4",{id:"outputs-step-1"},"Outputs step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# outputs.table is the HTML table\nDisplaying Table\n{{ outputs.table }}\n\n# outputs.download is the download link\nDownloading Table\n{{ outputs.download }}\n")),(0,l.kt)("h2",{id:"tables"},"Tables"),(0,l.kt)("h3",{id:"table_to_dataframe"},"table_to_dataframe"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/table_utils.py#L5C1-L44C54"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"table_to_dataframe(column_headers, rows) -> pd.DataFrame:\n")),(0,l.kt)("h4",{id:"description-6"},"Description:"),(0,l.kt)("p",null,"Create a DataFrame from given rows and column headers"),(0,l.kt)("h4",{id:"arguments-6"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"column_headers"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"List","[str]")),(0,l.kt)("td",{parentName:"tr",align:null},"List of column headers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rows"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"List[List","[str]","]")),(0,l.kt)("td",{parentName:"tr",align:null},"List of rows to be converted into a DataFrame. Each column is a list of strings")))),(0,l.kt)("h4",{id:"returns-6"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"pd.DataFrame"))),(0,l.kt)("td",{parentName:"tr",align:null},"DataFrame created from headers and rows")))),(0,l.kt)("h4",{id:"example-6"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import mecsimcalc as msc\n\ndef main(inputs):\n  column_headers = ["A", "B", "C"]\n  rows = [["a", "b", "c"], ["d", "e", "f"]]\n  df = msc.table_to_dataframe(column_headers, rows)\n  print(df)\n  #    A  B  C\n  # 0  a  b  c\n  # 1  d  e  f\n  return {"df":df}\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"print_table"},"print_table"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/table_utils.py#L47C1-L79C58"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print_table(column_headers, rows):\n")),(0,l.kt)("h4",{id:"description-7"},"Description:"),(0,l.kt)("p",null,"Creates an HTML table from given rows and column headers"),(0,l.kt)("h4",{id:"arguments-7"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"column_headers"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"List","[str]")),(0,l.kt)("td",{parentName:"tr",align:null},"List of column headers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rows"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"List[List","[str]","]")),(0,l.kt)("td",{parentName:"tr",align:null},"List of rows to be converted into a table. Each column is a list of strings")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"index"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to use the first column as the DataFrame's index. (Defaults to True)")))),(0,l.kt)("h4",{id:"returns-7"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"str"))),(0,l.kt)("td",{parentName:"tr",align:null},"HTML table created from rows and headers")))),(0,l.kt)("h4",{id:"example-7"},"Example:"),(0,l.kt)("h4",{id:"code-step-2"},"Code step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import mecsimcalc as msc\n\ndef main(inputs):\n  column_headers = ["A", "B", "C"]\n  rows = [["a", "b", "c"], ["d", "e", "f"]]\n  table = msc.print_table(column_headers, rows)\n  return {"table":table}\n')),(0,l.kt)("h4",{id:"outputs-step-2"},"Outputs step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# outputs.table is the HTML table\nDisplaying Table\n{{ outputs.table }}\n")),(0,l.kt)("h2",{id:"images"},"Images"),(0,l.kt)("h3",{id:"file_to_pil"},"file_to_PIL"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/image_utils.py#L23C1-L51C88"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"file_to_PIL(file):\n")),(0,l.kt)("h4",{id:"description-8"},"Description:"),(0,l.kt)("p",null,"Transforms a file into a Pillow Image object"),(0,l.kt)("h4",{id:"arguments-8"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"file"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")),(0,l.kt)("td",{parentName:"tr",align:null},"Decoded file data (returned from input_to_file)")))),(0,l.kt)("h4",{id:"raises-3"},"Raises:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Exception Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"ValueError"))),(0,l.kt)("td",{parentName:"tr",align:null},"If the file does not contain image data")))),(0,l.kt)("h4",{id:"returns-8"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Image"))),(0,l.kt)("td",{parentName:"tr",align:null},"Pillow Image object")))),(0,l.kt)("h4",{id:"example-8"},"Example:"),(0,l.kt)("h4",{id:"code-step-3"},"Code step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  decoded_file = msc.input_to_file(input_file)\n  image = msc.file_to_PIL(decoded_file)\n  return {\"image\":image}\n")),(0,l.kt)("h4",{id:"outputs-step-3"},"Outputs step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# outputs.image is the Pillow Image object\nDisplaying Image\n{{ outputs.image }}\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"input_to_pil"},"input_to_PIL"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/image_utils.py#L54C1-L102C17"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"input_to_PIL(input_file, get_file_type=False):\n")),(0,l.kt)("h4",{id:"description-9"},"Description:"),(0,l.kt)("p",null,"Converts a base64 encoded file data into a pillow image"),(0,l.kt)("h4",{id:"arguments-9"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input_file"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")),(0,l.kt)("td",{parentName:"tr",align:null},"Base64 encoded file data")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_file_type"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")),(0,l.kt)("td",{parentName:"tr",align:null},"If True, the function also returns the file type (Defaults to False)")))),(0,l.kt)("h4",{id:"returns-9"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Condition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"PIL.Image.Image"))),(0,l.kt)("td",{parentName:"tr",align:null},"Pillow Image object"),(0,l.kt)("td",{parentName:"tr",align:null},"get_file_type is False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Tuple[PIL.Image.Image, str]"))),(0,l.kt)("td",{parentName:"tr",align:null},"(pillow image, metadata)"),(0,l.kt)("td",{parentName:"tr",align:null},"get_file_type is True")))),(0,l.kt)("h4",{id:"example-9"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs['file']\n  image, file_type = msc.input_to_PIL(input_file, get_file_type=True)\n  print(file_type) # jpeg\n  print(type(image)) # <class 'PIL.JpegImagePlugin.JpegImageFile'>\n  return {\"image\":image}\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"print_image"},"print_image"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/image_utils.py#L105C1-L213C36"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'print_image(\n    image,\n    width = 200,\n    height = 200,\n    original_size = False,\n    download = False,\n    download_text = "Download Image",\n    download_file_name= "myimg",\n    download_file_type = "png",\n):\n')),(0,l.kt)("h4",{id:"description-10"},"Description:"),(0,l.kt)("p",null,"Transforms a Pillow image into an HTML image, with an optional download link"),(0,l.kt)("h4",{id:"arguments-10"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"image"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"PIL.Image.Image")),(0,l.kt)("td",{parentName:"tr",align:null},"Pillow image")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"width"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"int")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"Output width of the image in pixels (Defaults to 200)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"height"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"int")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"Output height of the image in pixels (Defaults to 200)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"original_size"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"If True, the HTML image will be displayed in its original size (Defaults to False)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"If True, function returns a download link (Defaults to False)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_text"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'The text to be displayed on the download link (Defaults to "Download Image")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_file_name"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'The name of the image file when downloaded (Defaults to "myimg")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_file_type"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'The file type of the image when downloaded (Defaults to "png")')))),(0,l.kt)("h4",{id:"returns-10"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Condition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"str"))),(0,l.kt)("td",{parentName:"tr",align:null},"HTML image"),(0,l.kt)("td",{parentName:"tr",align:null},"download is False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Tuple[str, str]"))),(0,l.kt)("td",{parentName:"tr",align:null},"(HTML image, download link)"),(0,l.kt)("td",{parentName:"tr",align:null},"download is True")))),(0,l.kt)("h4",{id:"example-10"},"Example:"),(0,l.kt)("h4",{id:"code-step-4"},"Code step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import mecsimcalc as msc\n\ndef main(inputs):\n  input_file = inputs[\'file\']\n  image, metadata = msc.input_to_PIL(input_file)\n  html_image, download = msc.print_image(image, original_size=True, download=True, download_text="Download Image Here", download_file_name="myimage", download_file_type="jpeg")\n  return {\n    "image":html_image,\n    "download":download,\n  }\n')),(0,l.kt)("h4",{id:"outputs-step-4"},"Outputs step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# outputs.image is the HTML image\nDisplaying Image\n{{ outputs.image }}\n\n# outputs.download is the download link\nDownloading Image\n{{ outputs.download }}\n")),(0,l.kt)("h2",{id:"plots"},"Plots"),(0,l.kt)("h3",{id:"print_plot"},"print_plot"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/mecsimcalc/plotting_utils.py#L9C1-L99C35"},(0,l.kt)("strong",{parentName:"a"},"[Source]"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'print_plot(\n    plot_obj,\n    width = 500,\n    dpi= 100,\n    download= False,\n    download_text = "Download Plot",\n    download_file_name = "myplot",\n)\n')),(0,l.kt)("h4",{id:"description-11"},"Description:"),(0,l.kt)("p",null,"Converts a matplotlib.pyplot.axis or matplotlib.figure into an HTML image tag and optionally provides a download link for the image"),(0,l.kt)("h4",{id:"arguments-11"},"Arguments:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"plot_obj"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"axes or figure")),(0,l.kt)("td",{parentName:"tr",align:null},"Matplotlib figure")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"width"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"int")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"Output width of the image in pixels (Defaults to 500)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"dpi"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"int")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"Output dpi of the image in pixels (Defaults to 100)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bool")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"If True, function returns a download link (Defaults to False)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_text"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'The text to be displayed on the download link (Defaults to "Download Plot")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"download_file_name"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"str")," (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},'The name of the image file when downloaded (Defaults to "myplot")')))),(0,l.kt)("h4",{id:"returns-11"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Condition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"str"))),(0,l.kt)("td",{parentName:"tr",align:null},"HTML image"),(0,l.kt)("td",{parentName:"tr",align:null},"download is False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Tuple[str, str]"))),(0,l.kt)("td",{parentName:"tr",align:null},"(HTML image, HTML download link)"),(0,l.kt)("td",{parentName:"tr",align:null},"download is True")))),(0,l.kt)("h4",{id:"example-11"},"Example:"),(0,l.kt)("h4",{id:"code-step-5"},"Code step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import matplotlib.pyplot as plt\nimport numpy as np\nimport mecsimcalc as msc\n\ndef main(inputs):\n  x = np.linspace(0, 2 * np.pi, 400)\n  y = np.sin(x)\n  fig, ax = plt.subplots()\n  ax.plot(x, y)\n  ax.set_title(\'A single plot\')\n  image, download = msc.print_plot(fig, width=500, dpi=100, download=True, download_text="Download Sin Function Plot", download_file_name="sin(x)")\n  return {\n    "image":image,\n    "download":download,\n  }\n')),(0,l.kt)("h4",{id:"outputs-step-5"},"Outputs step:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# outputs.image is the HTML image\nDisplaying Image\n{{ outputs.image }}\n\n# outputs.download is the download link\nDownloading Image\n{{ outputs.download }}\n")))}u.isMDXComponent=!0}}]);