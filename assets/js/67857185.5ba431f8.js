"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[4564],{1106:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var l=i(5893),o=i(1151);const t={sidebar_label:"Example 3",sidebar_position:4},s="Example 3: Folium",r={id:"maps/example-3",title:"Example 3: Folium",description:"This example provides a quick overview on how to create a Folium map with some simple shapes.",source:"@site/docs/maps/example-3.md",sourceDirName:"maps",slug:"/maps/example-3",permalink:"/maps/example-3",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Example 3",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Example 2",permalink:"/maps/example-2"},next:{title:"Overview",permalink:"/self-hosting-apps/overview"}},c={},a=[{value:"Step 1: Inputs",id:"step-1-inputs",level:2},{value:"Step 2: Code",id:"step-2-code",level:2},{value:"Creating a map",id:"creating-a-map",level:3},{value:"Adding shapes",id:"adding-shapes",level:3},{value:"Exporting the map",id:"exporting-the-map",level:3},{value:"Full code",id:"full-code",level:3},{value:"Step 3: Output",id:"step-3-output",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"example-3-folium",children:"Example 3: Folium"}),"\n",(0,l.jsxs)(n.p,{children:["This example provides a quick overview on how to create a ",(0,l.jsx)(n.a,{href:"https://python-visualization.github.io/folium/modules.html",children:"Folium"})," map with some simple shapes."]}),"\n",(0,l.jsx)("div",{style:{width:"100%",height:"600px",overflow:"hidden"},children:(0,l.jsx)("iframe",{src:"https://mecsimcalc.com/app/2028570/map_drawing_shapes",width:"100%",height:"100%",title:"MecSimCalc",style:{position:"relative",left:"-45px",top:"-48px"},frameBorder:"0"})}),"\n",(0,l.jsxs)(n.p,{children:["To get started, go to ",(0,l.jsx)(n.a,{href:"https://mecsimcalc.com/create",children:"mecsimcalc.com/create"}),", click on ",(0,l.jsx)(n.strong,{children:"Maps"}),", and select ",(0,l.jsx)(n.strong,{children:"Drawing shapes"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"step-1-inputs",children:"Step 1: Inputs"}),"\n",(0,l.jsxs)(n.p,{children:["For the inputs, create a ",(0,l.jsx)(n.strong,{children:"Single Select"})," with the following properties:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Name:"})," map_tile"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Label:"})," Map Tile"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Options:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"OpenStreetMap"}),"\n",(0,l.jsx)(n.li,{children:"Stamen Terrain"}),"\n",(0,l.jsx)(n.li,{children:"Stamen Toner"}),"\n",(0,l.jsx)(n.li,{children:"Stamen Watercolor"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["and create a ",(0,l.jsx)(n.strong,{children:"Color Picker"})," with the following properties:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Name:"})," color"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Label:"})," Shape color"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default value:"})," #43BFF5"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"step-2-code",children:"Step 2: Code"}),"\n",(0,l.jsx)(n.h3,{id:"creating-a-map",children:"Creating a map"}),"\n",(0,l.jsxs)(n.p,{children:["Start by creating a Folium map instance, ",(0,l.jsx)(n.code,{children:"m"})," that has the following attributes:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"location"}),": the initial center of the map in latitude and longitude."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"zoom_start"}),": the initial zoom level."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tiles"}),": map tiles.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Map tiles specify the type of map to use, such as satellite vs. road."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'"OpenStreetMap"'})," is the standard tile used to see roads."]}),"\n",(0,l.jsxs)(n.li,{children:["See possible map tiles ",(0,l.jsx)(n.a,{href:"https://python-visualization.github.io/folium/modules.html",children:"here"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"m = folium.Map(location=[45.372, -121.6972],\n                zoom_start=15, tiles=inputs['map_tile'])\n"})}),"\n",(0,l.jsx)(n.h3,{id:"adding-shapes",children:"Adding shapes"}),"\n",(0,l.jsxs)(n.p,{children:["To add shapes to your map, first create the shape and then use ",(0,l.jsx)(n.code,{children:".add_to(m)"})," to add it to your map."]}),"\n",(0,l.jsxs)(n.p,{children:["Add two ",(0,l.jsx)(n.a,{href:"https://python-visualization.github.io/folium/modules.html#folium.map.Marker",children:(0,l.jsx)(n.code,{children:"Markers"})})," to your map:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"location"})," is the marker position in latitude and longitude."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"popup"})," shows up when you click on the marker. You can use HTML in the string."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tooltip"})," shows up when you hover over the marker."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"icon"})," is the optional icon for the marker."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'folium.Marker(\n    [45.372, -121.6972], popup="<i>Italic popup text</i>", tooltip="Click on Marker"\n).add_to(m)\n\nfolium.Marker(  # Marker with icon\n    location=[45.371, -121.683],\n    popup="<b>Bold popup text</b>",\n    tooltip="Click on Marker",\n    icon=folium.Icon(color=inputs[\'color\'], icon="info-sign"),\n).add_to(m)\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Add a ",(0,l.jsx)(n.a,{href:"https://python-visualization.github.io/folium/modules.html#folium.vector_layers.PolyLine",children:(0,l.jsx)(n.code,{children:"PolyLine"})})," to your map:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"locations"})," is the list of points that when connected makes up the line."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"color"})," is the color of the line as a hex color code."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tooltip"})," shows up when you hover over the PolyLine."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"weight"})," is the line thickness."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"opacity"})," is the transparency of the line."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"lat_lng_points = [[45.372, -121.6972],\n                    [45.373, -121.6831],\n                    [45.371, -121.683]]\nfolium.PolyLine(locations=lat_lng_points,\n                color=inputs['color'],\n                tooltip=\"PolyLine\",\n                weight=5,  # line thickness\n                opacity=0.8  # transparency\n                ).add_to(m)\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Add a ",(0,l.jsx)(n.a,{href:"https://python-visualization.github.io/folium/modules.html#folium.vector_layers.Circle",children:(0,l.jsx)(n.code,{children:"Circle"})})," to your map:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"radius"})," is the radius of the circle."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"location"})," is the center of the circle in latitude and longitude."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tooltip"})," shows up when you hover over the Circle."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"popup"})," shows up when you click on the circle. You can use HTML in the string."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"color"})," is the color of the circle as a hex color code."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'folium.Circle(\n    radius=100,\n    location=[45.372, -121.6972],\n    tooltip="Click on Circle",\n    popup="Circle",\n    color=inputs[\'color\'],\n    fill=False,\n).add_to(m)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"exporting-the-map",children:"Exporting the map"}),"\n",(0,l.jsxs)(n.p,{children:["Finally to export the map, simply use ",(0,l.jsx)(n.code,{children:"._repr_html_()"})," to convert the Folium map object into HTML that can be displayed in the output step."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'map_html = m._repr_html_()\nreturn {"map": map_html}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"full-code",children:"Full code"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import folium\n\n\ndef main(inputs):\n    # Create a folium map\n    m = folium.Map(location=[45.372, -121.6972],\n                   zoom_start=15, tiles=inputs[\'map_tile\'])\n\n    # Add markers to map\n    folium.Marker(\n        [45.372, -121.6972], popup="<i>Italic popup text</i>", tooltip="Click on Marker"\n    ).add_to(m)\n    folium.Marker(  # Marker with icon\n        location=[45.371, -121.683],\n        popup="<b>Bold popup text</b>",\n        tooltip="Click on Marker",\n        icon=folium.Icon(color=inputs[\'color\'], icon="info-sign"),\n    ).add_to(m)\n\n    # Add line shape\n    lat_lng_points = [[45.372, -121.6972],\n                      [45.373, -121.6831],\n                      [45.371, -121.683]]\n    folium.PolyLine(lat_lng_points,\n                    color=inputs[\'color\'],\n                    tooltip="PolyLine",\n                    weight=5,  # line thickness\n                    opacity=0.8  # transparency\n                    ).add_to(m)\n\n    # Add circle shape\n    folium.Circle(\n        radius=100,\n        location=[45.372, -121.6972],\n        tooltip="Click on Circle",\n        popup="Circle",\n        color=inputs[\'color\'],\n        fill=False,\n    ).add_to(m)\n\n    # Export folium map as HTML string\n    map_html = m._repr_html_()\n\n    return {"map": map_html}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"step-3-output",children:"Step 3: Output"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"{{ outputs.map }}\n"})}),"\n",(0,l.jsx)("div",{style:{textAlign:"center"},children:(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"img",src:i(4135).Z+"",width:"1006",height:"605"})})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},4135:(e,n,i)=>{i.d(n,{Z:()=>l});const l=i.p+"assets/images/ex3_map-240e68ebb93d0434b8b1c3e146a0eafd.png"},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>s});var l=i(7294);const o={},t=l.createContext(o);function s(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);