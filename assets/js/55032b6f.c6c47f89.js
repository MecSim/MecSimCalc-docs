"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[4731],{1886:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=n(5893),r=n(1151);const s={sidebar_label:"Generating Tables",sidebar_position:6},i="Generating Tables",l={id:"getting-started/tables",title:"Generating Tables",description:"MecSimCalc provides a flexible platform allowing the _developer_ to generate tables in a variety of ways:",source:"@site/docs/getting-started/tables.md",sourceDirName:"getting-started",slug:"/getting-started/tables",permalink:"/getting-started/tables",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Generating Tables",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Example 2",permalink:"/getting-started/example-2"},next:{title:"Example 3",permalink:"/getting-started/example-3"}},o={},c=[];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"generating-tables",children:"Generating Tables"})}),"\n",(0,a.jsxs)(t.p,{children:["MecSimCalc provides a flexible platform allowing the ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.em,{children:"developer"})})," to generate tables in a variety of ways:"]}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["The output editor allows for html tags and a ",(0,a.jsx)(t.em,{children:(0,a.jsx)(t.strong,{children:"developer"})})," familiar with ",(0,a.jsx)(t.a,{href:"https://www.w3schools.com/html/html_tables.asp",children:"html tables"})," can use this functionality to design a table in the ",(0,a.jsx)(t.strong,{children:"output"})," step."]}),"\n",(0,a.jsxs)(t.li,{children:["A ",(0,a.jsx)(t.em,{children:(0,a.jsx)(t.strong,{children:"developer"})})," can choose to generate the table using a utility function in the ",(0,a.jsx)(t.strong,{children:"code"})," step that generates the required html string. For example, the following utility function from the mecsimcalc library ",(0,a.jsx)(t.code,{children:"msc.print_table()"})," generates the required html table based on an input array of the table columns and an array of the column headers:"]}),"\n",(0,a.jsxs)(t.li,{children:["A ",(0,a.jsx)(t.em,{children:(0,a.jsx)(t.strong,{children:"developer"})})," can use one of the many Python libraries that can output a html table directly. For example, the popular ",(0,a.jsx)(t.a,{href:"https://pandas.pydata.org/",children:"Pandas library"}),", which is available on MecSimCalc has the built-in functionality of converting ",(0,a.jsx)(t.a,{href:"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_html.html",children:"Pandas tables to html"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"In the next example, we will show how an html table can be generated using both mecsimcalc library and the Pandas library."})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>i});var a=n(7294);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);