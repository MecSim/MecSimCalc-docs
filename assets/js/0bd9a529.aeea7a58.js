"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[6871],{9314:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var t=i(5893),s=i(1151);const l={sidebar_label:"File Utilities",sidebar_position:1},d="File Utilities",r={id:"mecsimcalc-library/file-utils",title:"File Utilities",description:"Select Version:",source:"@site/docs/mecsimcalc-library/file-utils.md",sourceDirName:"mecsimcalc-library",slug:"/mecsimcalc-library/file-utils",permalink:"/mecsimcalc-library/file-utils",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"File Utilities",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Parallelizing MC Simulation",permalink:"/advanced-applications/mp-monte-carlo"},next:{title:"Plot Draw",permalink:"/mecsimcalc-library/plotdraw"}},c={},a=[{value:"General",id:"general",level:2},{value:"input_to_file",id:"input_to_file",level:3},{value:"Description:",id:"description",level:4},{value:"Arguments:",id:"arguments",level:4},{value:"Raises:",id:"raises",level:4},{value:"Returns:",id:"returns",level:4},{value:"Example:",id:"example",level:4},{value:"metadata_to_filetype",id:"metadata_to_filetype",level:3},{value:"Description:",id:"description-1",level:4},{value:"Arguments:",id:"arguments-1",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"Example:",id:"example-1",level:4},{value:"Text",id:"text",level:2},{value:"string_to_file",id:"string_to_file",level:3},{value:"Description:",id:"description-2",level:4},{value:"Arguments:",id:"arguments-2",level:4},{value:"Raises:",id:"raises-1",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"Example:",id:"example-2",level:4},{value:"Python",id:"python",level:4},{value:"Jinja2",id:"jinja2",level:4},{value:"Spreadsheets",id:"spreadsheets",level:2},{value:"file_to_dataframe",id:"file_to_dataframe",level:3},{value:"Description:",id:"description-3",level:4},{value:"Arguments:",id:"arguments-3",level:4},{value:"Raises:",id:"raises-2",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"Example:",id:"example-3",level:4},{value:"input_to_dataframe",id:"input_to_dataframe",level:3},{value:"Description:",id:"description-4",level:4},{value:"Arguments:",id:"arguments-4",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"Example:",id:"example-4",level:4},{value:"print_dataframe",id:"print_dataframe",level:3},{value:"Description:",id:"description-5",level:4},{value:"Arguments:",id:"arguments-5",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"Example:",id:"example-5",level:4},{value:"Python Code:",id:"python-code",level:4},{value:"Output using Jinja2 Template:",id:"output-using-jinja2-template",level:4},{value:"Tables",id:"tables",level:2},{value:"table_to_dataframe",id:"table_to_dataframe",level:3},{value:"Description:",id:"description-6",level:4},{value:"Arguments:",id:"arguments-6",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"Example:",id:"example-6",level:4},{value:"print_table",id:"print_table",level:3},{value:"Description:",id:"description-7",level:4},{value:"Arguments:",id:"arguments-7",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"Example:",id:"example-7",level:4},{value:"Python Code:",id:"python-code-1",level:4},{value:"Output using Jinja2 Template:",id:"output-using-jinja2-template-1",level:4},{value:"Images",id:"images",level:2},{value:"file_to_PIL",id:"file_to_pil",level:3},{value:"Description:",id:"description-8",level:4},{value:"Arguments:",id:"arguments-8",level:4},{value:"Raises:",id:"raises-3",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"Example:",id:"example-8",level:4},{value:"Python Code:",id:"python-code-2",level:4},{value:"Output using Jinja2 Template:",id:"output-using-jinja2-template-2",level:4},{value:"input_to_PIL",id:"input_to_pil",level:3},{value:"Description:",id:"description-9",level:4},{value:"Arguments:",id:"arguments-9",level:4},{value:"Returns:",id:"returns-9",level:4},{value:"Example:",id:"example-9",level:4},{value:"print_image",id:"print_image",level:3},{value:"Description:",id:"description-10",level:4},{value:"Arguments:",id:"arguments-10",level:4},{value:"Returns:",id:"returns-10",level:4},{value:"Example:",id:"example-10",level:4},{value:"Python Code:",id:"python-code-3",level:4},{value:"Output using Jinja2 Template:",id:"output-using-jinja2-template-3",level:4},{value:"Plots",id:"plots",level:2},{value:"print_plot",id:"print_plot",level:3},{value:"Description:",id:"description-11",level:4},{value:"Arguments:",id:"arguments-11",level:4},{value:"Returns:",id:"returns-11",level:4},{value:"Example:",id:"example-11",level:4},{value:"Python Code:",id:"python-code-4",level:4},{value:"Output using Jinja2 Template:",id:"output-using-jinja2-template-4",level:4},{value:"print_animation",id:"print_animation",level:3},{value:"Description:",id:"description-12",level:4},{value:"Arguments:",id:"arguments-12",level:4},{value:"Returns:",id:"returns-12",level:4},{value:"Example:",id:"example-12",level:4},{value:"animate_plot",id:"animate_plot",level:3},{value:"Description:",id:"description-13",level:4},{value:"Arguments:",id:"arguments-13",level:4},{value:"Returns:",id:"returns-13",level:4},{value:"Example:",id:"example-13",level:4},{value:"plot_slider",id:"plot_slider",level:3},{value:"Description:",id:"description-14",level:4},{value:"Arguments:",id:"arguments-14",level:4},{value:"Returns:",id:"returns-14",level:4},{value:"Example:",id:"example-14",level:4},{value:"Quiz Toolkit",id:"quiz-toolkit",level:2},{value:"append_to_google_sheet",id:"append_to_google_sheet",level:3},{value:"Description:",id:"description-15",level:4},{value:"Arguments:",id:"arguments-15",level:4},{value:"Returns:",id:"returns-15",level:4},{value:"Example:",id:"example-15",level:4},{value:"Code step:",id:"code-step",level:4},{value:"send_gmail",id:"send_gmail",level:3},{value:"Description:",id:"description-16",level:4},{value:"Arguments:",id:"arguments-16",level:4},{value:"Returns:",id:"returns-16",level:4},{value:"Example Usage:",id:"example-usage",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"file-utilities",children:"File Utilities"})}),"\n",(0,t.jsxs)("div",{style:{margin:"1em"},children:[(0,t.jsx)("label",{htmlFor:"version-select",style:{fontWeight:"bold",marginRight:"10px"},children:"Select Version:"}),(0,t.jsxs)("select",{id:"version-select",onChange:e=>window.location.href=e.target.value,children:[(0,t.jsx)("option",{value:"",children:"Latest Release (v0.2.1)"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.9/README.md",children:"v0.1.9"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.6/README.md",children:"v0.1.6"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.5/README.md",children:"v0.1.5"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.4/README.md",children:"v0.1.4"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.3/README.md",children:"v0.1.3"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.1.2/README.md",children:"v0.1.2"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.0.5/README.md",children:"v0.0.5"}),(0,t.jsx)("option",{value:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.0.4/README.md",children:"v0.0.4"})]})]}),"\n",(0,t.jsx)(n.p,{children:"This library is designed to provide a set of functions for handling and converting various types of data, such as base64 encoded data, Pandas DataFrames, and Pillow images."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils",children:"GitHub Repository"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://pypi.org/project/mecsimcalc/",children:"PyPi Page"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,t.jsx)(n.h3,{id:"input_to_file",children:"input_to_file"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/general_utils.py#L7C1-L66C1",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"input_to_file(input_file, metadata = False)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Converts a base64 encoded string into a file object and metadata"}),"\n",(0,t.jsx)(n.h4,{id:"arguments",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"input_file"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"Base64 encoded string, prefixed with metadata"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"metadata"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsx)(n.td,{children:"Flag to return metadata with the file. (Defaults to False)"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"raises",children:"Raises:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Exception"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"ValueError"})})}),(0,t.jsx)(n.td,{children:"If the input string doesn't contain ';base64,' to separate metadata and file data."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Condition"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"io.BytesIO"})})}),(0,t.jsx)(n.td,{children:"The decoded file data (The thing you get when you open a file in Python)"}),(0,t.jsx)(n.td,{children:"metadata is False"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"(io.BytesIO, str)"})})}),(0,t.jsx)(n.td,{children:"The decoded file data and its metadata"}),(0,t.jsx)(n.td,{children:"metadata is True"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import io\nimport mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    file, metadata = msc.input_to_file(input_file, metadata=True)\n    return {"file_type": type(file).__name__, "metadata": metadata}\n\n# Expected output:\n# {"file_type": "_io.BytesIO", "metadata": "data:image/jpeg;base64,"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"metadata_to_filetype",children:"metadata_to_filetype"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/general_utils.py#L68C1-L100C21",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"metadata_to_filetype(metadata):\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description-1",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Extracts the file type from the metadata"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-1",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"metadata"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsxs)(n.td,{children:['The metadata string in the form "Data:(MIME type);base64,"(returned from ',(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"input_to_file"})}),")"]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:'The file type (e.g. "jpeg")'})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    file, metadata = msc.input_to_file(input_file, metadata=True)\n    download_file_type = msc.metadata_to_filetype(metadata)\n    return {"file_type": download_file_type}\n\n# Expected output:\n# {"file_type": "jpeg"}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"text",children:"Text"}),"\n",(0,t.jsx)(n.h3,{id:"string_to_file",children:"string_to_file"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/text_utils.py#L4C1-L63C85",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string_to_file(\n    text\n    filename= "myfile",\n    download_text = "Download File",\n)\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-2",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Generates a downloadable text file containing the given text"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-2",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"text"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"Text to be downloaded"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"filename"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'Name of the download file. (Defaults to "myfile")'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_text"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'Text to be displayed as the download link. (Defaults to "Download File")'})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"raises-1",children:"Raises:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Exception"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"TypeError"})})}),(0,t.jsx)(n.td,{children:"If the input text is not a string."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"HTML download link"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-2",children:"Example:"}),"\n",(0,t.jsx)(n.h4,{id:"python",children:"Python"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    download_link = msc.string_to_file("Hello World!")\n    return {"download": download_link}\n\n# Expected output:\n# {"download": "<a href=\'data:text/plain;base64,SGVsbG8gV29ybGQh\' download=\'myfile.txt\'>Download File</a>"}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"jinja2",children:"Jinja2"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# outputs.downloadLink is the html download link generated by the function\n{{ outputs.download }}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"spreadsheets",children:"Spreadsheets"}),"\n",(0,t.jsx)(n.h3,{id:"file_to_dataframe",children:"file_to_dataframe"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/spreadsheet_utils.py#L9C1-L50C14",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"file_to_dataframe(file_data):\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description-3",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Converts a base64 encoded file data into a pandas DataFrame"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-3",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"file_data"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"io.BytesIO"})}),(0,t.jsxs)(n.td,{children:["Decoded file data (e.g. from ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"input_to_file"})}),")"]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"raises-2",children:"Raises:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Exception"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"pd.errors.ParserError"})})}),(0,t.jsx)(n.td,{children:"If the file data cannot be converted to a DataFrame (i.e. file is not an Excel or CSV file or is corrupted)"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-3",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"pd.DataFrame"})})}),(0,t.jsx)(n.td,{children:"DataFrame created from file data"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-3",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    decoded_file = msc.input_to_file(input_file)\n    df = msc.file_to_dataframe(decoded_file)\n    return {"dataframe": df.to_dict()}\n\n# Expected output:\n# {"dataframe": {\n# "A": {0: "a", 1: "d"},\n# "B": {0: "b", 1: "e"},\n# "C": {0: "c", 1: "f"}}}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"input_to_dataframe",children:"input_to_dataframe"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/spreadsheet_utils.py#L53C1-L92C44",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"input_to_dataframe(file):\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description-4",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Converts a base64 encoded file data into a pandas DataFrame"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-4",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"input_file"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"Base64 encoded file data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"get_file_type"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"bool"})}),(0,t.jsx)(n.td,{children:"If True, the function also returns the file type (Defaults to False)"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-4",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Condition"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"pd.DataFrame"})})}),(0,t.jsx)(n.td,{children:"DataFrame created from file data"}),(0,t.jsx)(n.td,{children:"get_file_type is False"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"(pd.DataFrame, str)"})})}),(0,t.jsx)(n.td,{children:"Tuple containing the DataFrame and the file type"}),(0,t.jsx)(n.td,{children:"get_file_type is True"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example-4",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    df, file_type = msc.input_to_dataframe(input_file, get_file_type=True)\n    return {"dataframe": df.to_dict(), "file_type": file_type}\n\n# Expected output:\n# {"dataframe": {\n# "A": {0: "a", 1: "d"},\n# "B": {0: "b", 1: "e"},\n# "C": {0: "c", 1: "f"}}, "file_type": "csv"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"print_dataframe",children:"print_dataframe"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/spreadsheet_utils.py#L95C1-L186C39",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'print_dataframe(\n    df,\n    download = False,\n    download_text = "Download Table",\n    download_file_name = "mytable",\n    download_file_type = "csv",\n):\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-5",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Creates an HTML table and a download link for a given DataFrame"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-5",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"df"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pd.DataFrame"})}),(0,t.jsx)(n.td,{children:"DataFrame to be converted"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsx)(n.td,{children:"If True, function returns a download link (Defaults to False)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_text"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'Text to be displayed as the download link (Defaults to "Download Table")'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_file_name"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'Name of file when downloaded (Defaults to "mytable")'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_file_type"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'File type of downloaded file (Defaults to "csv")'})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-5",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Condition"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"HTML table"}),(0,t.jsx)(n.td,{children:"download is False"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Tuple[str, str]"})})}),(0,t.jsx)(n.td,{children:"(HTML table, HTML download link)"}),(0,t.jsx)(n.td,{children:"download is True"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example-5",children:"Example:"}),"\n",(0,t.jsx)(n.h4,{id:"python-code",children:"Python Code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    df = msc.input_to_dataframe(input_file)\n    table, download = msc.print_dataframe(df, download=True, download_file_name="Table", download_text="Download My Table HERE!", download_file_type="xlsx")\n    return {"table": table, "download": download}\n\n# Expected output:\n# {"table": "<table>...</table>",\n# "download": "<a href=\'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,...\' download=\'Table.xlsx\'>Download My Table HERE!</a>"}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output-using-jinja2-template",children:"Output using Jinja2 Template:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# outputs.table is the HTML table\nDisplaying Table\n{{ outputs.table }}\n\n# outputs.download is the download link\nDownloading Table\n{{ outputs.download }}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"tables",children:"Tables"}),"\n",(0,t.jsx)(n.h3,{id:"table_to_dataframe",children:"table_to_dataframe"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/table_utils.py#L5C1-L45C1",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"table_to_dataframe(column_headers, rows):\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description-6",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Create a DataFrame from given rows and column headers"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-6",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"column_headers"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"List[str]"})}),(0,t.jsx)(n.td,{children:"List of column headers"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rows"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"List[List[str]]"})}),(0,t.jsx)(n.td,{children:"List of rows to be converted into a DataFrame. Each column is a list of strings"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-6",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"pd.DataFrame"})})}),(0,t.jsx)(n.td,{children:"DataFrame created from headers and rows"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-6",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    column_headers = ["A", "B", "C"]\n    rows = [["a", "b", "c"], ["d", "e", "f"]]\n    df = msc.table_to_dataframe(column_headers, rows)\n    return {"dataframe": df.to_dict()}\n\n# Expected output:\n# {"dataframe": {\n# "A": {0: "a", 1: "d"},\n# "B": {0: "b", 1: "e"},\n# "C": {0: "c", 1: "f"}}}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"print_table",children:"print_table"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/table_utils.py#L47C1-L80C58",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"print_table(column_headers, rows):\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description-7",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Creates an HTML table from given rows and column headers"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-7",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"column_headers"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"List[str]"})}),(0,t.jsx)(n.td,{children:"List of column headers"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rows"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"List[List[str]]"})}),(0,t.jsx)(n.td,{children:"List of rows to be converted into a table. Each column is a list of strings"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"index"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsx)(n.td,{children:"Whether to use the first column as the DataFrame's index. (Defaults to True)"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-7",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"HTML table created from rows and headers"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-7",children:"Example:"}),"\n",(0,t.jsx)(n.h4,{id:"python-code-1",children:"Python Code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'column_headers = ["A", "B", "C"]\nrows = [["a", "b", "c"], ["d", "e", "f"]]\ntable = print_table(column_headers, rows)\nreturn {\n        "table":table,\n    }\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output-using-jinja2-template-1",children:"Output using Jinja2 Template:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# outputs.table is the HTML table\nDisplaying Table\n{{ outputs.table }}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"images",children:"Images"}),"\n",(0,t.jsx)(n.h3,{id:"file_to_pil",children:"file_to_PIL"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/image_utils.py#L23C1-L55C88",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"file_to_PIL(file):\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description-8",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Transforms a file into a Pillow Image object"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-8",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"file"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"Decoded file data (returned from input_to_file)"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"raises-3",children:"Raises:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Exception Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"ValueError"})})}),(0,t.jsx)(n.td,{children:"If the file does not contain image data"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-8",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Image"})})}),(0,t.jsx)(n.td,{children:"Pillow Image object"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-8",children:"Example:"}),"\n",(0,t.jsx)(n.h4,{id:"python-code-2",children:"Python Code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    decoded_file = msc.input_to_file(input_file)\n    image = msc.file_to_PIL(decoded_file)\n    return {"image": image}\n\n# Expected output:\n# {"image": <PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=...>}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output-using-jinja2-template-2",children:"Output using Jinja2 Template:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# outputs.image is the Pillow Image object\nDisplaying Image\n{{ outputs.image }}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"input_to_pil",children:"input_to_PIL"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/image_utils.py#L58C1-L109C1",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"input_to_PIL(input_file, get_file_type=False):\n"})}),"\n",(0,t.jsx)(n.h4,{id:"description-9",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Converts a base64 encoded file data into a pillow image"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-9",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"input_file"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"Base64 encoded file data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"get_file_type"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"bool"})}),(0,t.jsx)(n.td,{children:"If True, the function also returns the file type (Defaults to False)"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-9",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Condition"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"PIL.Image.Image"})})}),(0,t.jsx)(n.td,{children:"Pillow Image object"}),(0,t.jsx)(n.td,{children:"get_file_type is False"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Tuple[PIL.Image.Image, str]"})})}),(0,t.jsx)(n.td,{children:"(pillow image, metadata)"}),(0,t.jsx)(n.td,{children:"get_file_type is True"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example-9",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    image, file_type = msc.input_to_PIL(input_file, get_file_type=True)\n    return {"image": image, "file_type": file_type}\n\n# Expected output:\n# {"image": <PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=...>, "file_type": "jpeg"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"print_image",children:"print_image"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/image_utils.py#L110C1-L209C36",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'print_image(\n    image,\n    width = 200,\n    height = 200,\n    original_size = False,\n    download = False,\n    download_text = "Download Image",\n    download_file_name= "myimg",\n    download_file_type = "png",\n):\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-10",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Transforms a Pillow image into an HTML image, with an optional download link"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-10",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"image"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"PIL.Image.Image"})}),(0,t.jsx)(n.td,{children:"Pillow image"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"width"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,t.jsx)(n.td,{children:"Output width of the image in pixels (Defaults to 200)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"height"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,t.jsx)(n.td,{children:"Output height of the image in pixels (Defaults to 200)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"original_size"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsx)(n.td,{children:"If True, the HTML image will be displayed in its original size (Defaults to False)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsx)(n.td,{children:"If True, function returns a download link (Defaults to False)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_text"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'The text to be displayed on the download link (Defaults to "Download Image")'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_file_name"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'The name of the image file when downloaded (Defaults to "myimg")'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_file_type"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'The file type of the image when downloaded (Defaults to "png")'})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-10",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Condition"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"HTML image"}),(0,t.jsx)(n.td,{children:"download is False"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Tuple[str, str]"})})}),(0,t.jsx)(n.td,{children:"(HTML image, download link)"}),(0,t.jsx)(n.td,{children:"download is True"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example-10",children:"Example:"}),"\n",(0,t.jsx)(n.h4,{id:"python-code-3",children:"Python Code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    input_file = inputs[\'file\']\n    image, metadata = msc.input_to_PIL(input_file)\n    html_image, download = msc.print_image(image, original_size=True, download=True, download_text="Download Image Here", download_file_name="myimage", download_file_type="jpeg")\n    return {"image": html_image, "download": download}\n\n# Expected output:\n# {"image": "<img src=\'data:image/jpeg;base64,...\' width=\'...\' height=\'...\'>",\n# "download": "<a href=\'data:image/jpeg;base64,...\' download=\'myimage.jpeg\'>Download Image Here</a>"}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output-using-jinja2-template-3",children:"Output using Jinja2 Template:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# outputs.image is the HTML image\nDisplaying Image\n{{ outputs.image }}\n\n# outputs.download is the download link\nDownloading Image\n{{ outputs.download }}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"plots",children:"Plots"}),"\n",(0,t.jsx)(n.h3,{id:"print_plot",children:"print_plot"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/plotting_utils.py#L15C1-L102C1",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'print_plot(\n    plot_obj,\n    width = 500,\n    dpi= 100,\n    download= False,\n    download_text = "Download Plot",\n    download_file_name = "myplot",\n)\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-11",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Converts a matplotlib.pyplot.axis or matplotlib.figure into an HTML image tag and optionally provides a download link for the image"}),"\n",(0,t.jsx)(n.h4,{id:"arguments-11",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"plot_obj"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"axes or figure"})}),(0,t.jsx)(n.td,{children:"Matplotlib figure"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"width"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,t.jsx)(n.td,{children:"Output width of the image in pixels (Defaults to 500)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"dpi"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,t.jsx)(n.td,{children:"Output dpi of the image in pixels (Defaults to 100)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsx)(n.td,{children:"If True, function returns a download link (Defaults to False)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_text"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'The text to be displayed on the download link (Defaults to "Download Plot")'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"download_file_name"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsx)(n.td,{children:'The name of the image file when downloaded (Defaults to "myplot")'})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-11",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Condition"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"HTML image"}),(0,t.jsx)(n.td,{children:"download is False"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Tuple[str, str]"})})}),(0,t.jsx)(n.td,{children:"(HTML image, HTML download link)"}),(0,t.jsx)(n.td,{children:"download is True"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example-11",children:"Example:"}),"\n",(0,t.jsx)(n.h4,{id:"python-code-4",children:"Python Code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import matplotlib.pyplot as plt\nimport numpy as np\nimport mecsimcalc as msc\n\ndef main(inputs):\n    x = np.linspace(0, 2 * np.pi, 400)\n    y = np.sin(x)\n    fig, ax = plt.subplots()\n    ax.plot(x, y)\n    ax.set_title(\'A single plot\')\n    image, download = msc.print_plot(fig, width=500, dpi=100, download=True, download_text="Download Sin Function Plot", download_file_name="sin(x)")\n    return {"image": image, "download": download}\n\n# Expected output:\n# {"image": "<img src=\'data:image/jpeg;base64,...\' width=\'500\' height=\'...\'>",\n#  "download": "<a href=\'data:image/jpeg;base64,...\' download=\'sin(x).jpeg\'>Download Sin Function Plot</a>"}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output-using-jinja2-template-4",children:"Output using Jinja2 Template:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# outputs.image is the HTML image\nDisplaying Image\n{{ outputs.image }}\n\n# outputs.download is the download link\nDownloading Image\n{{ outputs.download }}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"print_animation",children:"print_animation"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/plotting_utils.py#L104C1-L156C63",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'print_animation(\n    ani,\n    fps = 30,\n    save_dir = "/tmp/temp_animation.gif"):\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-12",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Converts a matplotlib animation into an animated GIF. Returns an HTML image tag to display it in your app."}),"\n",(0,t.jsx)(n.h4,{id:"arguments-12",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"ani"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"FuncAnimation"})}),(0,t.jsx)(n.td,{children:"The matplotlib animation to be converted."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"fps"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,t.jsx)(n.td,{children:"Frames per second for the animation. (Defaults to 30)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"save_dir"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["The directory to temporarily save files. You can only write to the tmp directory in mecsimcalc. Defaults to ",(0,t.jsx)(n.code,{children:'"/tmp/temp_animation.gif"'})]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-12",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"The HTML image tag as a string."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-12",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nimport numpy as np\nimport mecsimcalc as msc\n\ndef main(inputs):\n    fig, ax = plt.subplots()\n    x = np.linspace(0, 2*np.pi, 100)\n    y = np.sin(x)\n    line, = ax.plot(x, y)\n    def update(frame):\n        line.set_ydata(np.sin(x + frame / 10))\n        return line,\n    ani = FuncAnimation(fig, update, frames=100)\n    animation = msc.print_animation(ani)\n    return {"animation": animation}\n\n# Expected output:\n# {"animation": "<img src=\'data:image/gif;base64,...\'>"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"animate_plot",children:"animate_plot"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/plotting_utils.py#L159C1-L278C1",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'animate_plot(\n    x,\n    y,\n    duration = 3,\n    fps = 15,\n    x_label = "x",\n    y_label = "y",\n    title = "y = f(x)",\n    show_axes = True,\n    follow_tip = False,\n    save_dir = "/tmp/temp_animation.gif",\n    follow_tip = False,\n    hold_last_frame = 1.0,\n)\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-13",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Creates an animated plot from given x and y data and returns it as an HTML image tag."}),"\n",(0,t.jsx)(n.h4,{id:"arguments-13",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"np.ndarray"})}),(0,t.jsx)(n.td,{children:"The x-coordinates of the data points."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"y"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"np.ndarray"})}),(0,t.jsx)(n.td,{children:"The y-coordinates of the data points."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"duration"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"float"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["The duration of the animation in seconds. Defaults to ",(0,t.jsx)(n.code,{children:"3"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"fps"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"float"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Frames per second for the animation. Defaults to ",(0,t.jsx)(n.code,{children:"15"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x_label"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["The label for the x-axis. Defaults to ",(0,t.jsx)(n.code,{children:'"x"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"y_label"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["The label for the y-axis. Defaults to ",(0,t.jsx)(n.code,{children:'"y"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"title"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Title of the plot. Defaults to ",(0,t.jsx)(n.code,{children:'"y = f(x)"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"show_axes"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Whether to show the x and y axes. Defaults to ",(0,t.jsx)(n.code,{children:"True"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"follow_tip"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Whether to follow the tip of the line as it moves along the x-axis. Defaults to ",(0,t.jsx)(n.code,{children:"False"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"hold_last_frame"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"float"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["The duration to hold the last frame in seconds. Defaults to ",(0,t.jsx)(n.code,{children:"1.0"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"save_dir"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["The directory to temporarily save files. You can only write to the tmp directory in mecsimcalc. Defaults to ",(0,t.jsx)(n.code,{children:'"/tmp/temp_animation.gif"'})]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-13",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"The HTML image tag containing the animated plot."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-13",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import numpy as np\nimport mecsimcalc as msc\n\ndef main(inputs):\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    animation_html = msc.animate_plot(x, y, duration=4, title="Sine Wave", show_axes=True)\n    return {"animation": animation_html}\n\n# Expected output:\n# {"animation": "<img src=\'data:image/gif;base64,...\'>"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"plot_slider",children:"plot_slider"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/plotting_utils.py#L280C1-L423C45",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'plot_slider(\n    f_x,\n    x_range,\n    y_range = None,\n    title = "",\n    x_label = "x",\n    y_label = "y",\n    num_points = 250,\n    initial_value = 1,\n    step_size = 0.1,\n    slider_range = (-10, 10),\n):\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-14",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Creates an interactive plot with a slider using Plotly, allowing the user to dynamically update the plot based on a parameter."}),"\n",(0,t.jsx)(n.h4,{id:"arguments-14",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"f_x"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Callable[[float, np.ndarray], np.ndarray]"})}),(0,t.jsx)(n.td,{children:"A function that takes a float and an array of x-values, and returns an array of y-values."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x_range"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Tuple[float, float]"})}),(0,t.jsx)(n.td,{children:"A tuple defining the range of x-values (start, end) for the plot."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"y_range"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"Tuple[float, float]"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["A tuple defining the range of y-values (start, end) for the plot. Defaults to ",(0,t.jsx)(n.code,{children:"None"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"title"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Title of the plot. Defaults to ",(0,t.jsx)(n.code,{children:'""'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x_label"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Label for the x-axis. Defaults to ",(0,t.jsx)(n.code,{children:'"x"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"y_label"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Label for the y-axis. Defaults to ",(0,t.jsx)(n.code,{children:'"y"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"num_points"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"int"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Number of points to plot (line resolution). Defaults to ",(0,t.jsx)(n.code,{children:"250"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"initial_value"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"float"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Initial value of the slider. Defaults to ",(0,t.jsx)(n.code,{children:"1"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"step_size"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"float"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Step size for the slider. Defaults to ",(0,t.jsx)(n.code,{children:"0.1"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"slider_range"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"Tuple[float, float]"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["Range for the slider values (start, end). Defaults to ",(0,t.jsx)(n.code,{children:"(-10, 10)"}),"."]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-14",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"str"})})}),(0,t.jsx)(n.td,{children:"The HTML string containing the Plotly interactive plot."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-14",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef parabola(a, x):\n    return a * x ** 2\n\ndef main(inputs):\n    plot_html = msc.plot_slider(parabola, x_range=(-10, 10), y_range=(-100, 100))\n    return {"plot": plot_html}\n\n# Expected output:\n# The `plot_html` can be used in a web page to display the interactive plot.\n'})}),"\n",(0,t.jsx)(n.h2,{id:"quiz-toolkit",children:"Quiz Toolkit"}),"\n",(0,t.jsx)(n.h3,{id:"append_to_google_sheet",children:"append_to_google_sheet"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/quiz_utils.py#L11C1-L134C1",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'append_to_google_sheet(\n    service_account_info = {...},\n    spreadsheet_id = "123abc...",\n    values = [["name", 12837, ...]],\n    range_name = "Sheet1!A1",\n    include_timestamp = True\n)\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-15",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"This function appends given values to a specified Google Sheet and optionally includes a current timestamp with each entry. It transforms data into a Google Sheets document, facilitating dynamic data entry directly from your application."}),"\n",(0,t.jsx)(n.h4,{id:"arguments-15",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"service_account_info"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"dict"})}),(0,t.jsx)(n.td,{children:"The service account credentials used for Google Sheets API authentication."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"spreadsheet_id"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"The unique identifier of the target Google Spreadsheet."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"values"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"list of lists"})}),(0,t.jsx)(n.td,{children:"The data to append. Each list element represents a row of data."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"range_name"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"str"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["The A1 notation of the range to start appending data. Defaults to ",(0,t.jsx)(n.code,{children:'"Sheet1!A1"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"include_timestamp"})})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"bool"})," (optional)"]}),(0,t.jsxs)(n.td,{children:["If True, appends the current timestamp to each row of data. Defaults to ",(0,t.jsx)(n.code,{children:"True"}),"."]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-15",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"dict"})})}),(0,t.jsx)(n.td,{children:"The response from the Google Sheets API, containing details of the append operation."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-15",children:"Example:"}),"\n",(0,t.jsx)(n.h4,{id:"code-step",children:"Code step:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mecsimcalc as msc\n\ndef main(inputs):\n    service_account_info = {\n        # Your service account info here\n    }\n    spreadsheet_id = \'your_spreadsheet_id_here\'\n    values = [\n        [inputs[\'input_1\'], inputs[\'input_2\'], inputs[\'input_3\']],\n    ]\n    result = msc.append_to_google_sheet(service_account_info, spreadsheet_id, values)\n    return {"result": result}\n\n# Expected output:\n# {"result": {"spreadsheetId": "your_spreadsheet_id_here",\n#  "updatedRange": "Sheet1!A1:C1",\n#  "updatedRows": 1, "updatedColumns": 3, "updatedCells": 3}}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"send_gmail",children:"send_gmail"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/MecSimCalc/MecSimCalc-utils/blob/v0.2.1/mecsimcalc/file_utils/quiz_utils.py#L136C1-L207C21",children:(0,t.jsx)(n.strong,{children:"[Source]"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'send_gmail(\n    sender_email=\'sender@example.com\',\n    receiver_email=\'receiver@example.com\',\n    subject="Quiz",\n    app_password = "xxxx xxxx xxxx xxxx",\n    values = [\n    ["name", "grade"]\n    ]\n)\n'})}),"\n",(0,t.jsx)(n.h4,{id:"description-16",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"This function sends an email with specified values formatted in the message body, utilizing a service account for authentication."}),"\n",(0,t.jsx)(n.h4,{id:"arguments-16",children:"Arguments:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sender_email"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"The email address of the sender."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"receiver_email"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"The email address of the receiver."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"subject"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"The subject line of the email."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"app_password"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"str"})}),(0,t.jsx)(n.td,{children:"The app-specific password for the sender's email account."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"values"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"list"})}),(0,t.jsx)(n.td,{children:"A list of lists. Each list contains data to be included in the email body."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-16",children:"Returns:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Return Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"bool"})})}),(0,t.jsx)(n.td,{children:"Returns True if the email was sent successfully, otherwise False."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"example-usage",children:"Example Usage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import mecsimcalc as msc\n\ndef main(inputs):\n    sender_email = 'sender@example.com'\n    receiver_email = 'receiver@example.com'\n    subject = 'Test Email'\n    app_password = 'your_app_password_here'\n\n    name = inputs['name']\n    grade = inputs['grade']\n\n    values = [\n        [name, grade]\n    ]\n\n    result = msc.send_gmail(sender_email, receiver_email, subject, app_password, values)\n    return {\"result\": result}\n\n# Expected output:\n# {\"result\": True}\n"})})]})}function o(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>d});var t=i(7294);const s={},l=t.createContext(s);function d(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);