"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[9809],{288:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=i(5893),s=i(1151);const a={slug:"JohnYu-apps",title:"John Yu's Apps",authors:["jyu"],tags:["MecSimCalc","Computer Science","Engineering","Math","Statistics"]},r="John Yu Apps (August 5th, 2022)",o={permalink:"/blog/JohnYu-apps",source:"@site/blog/2022-08-05-John-apps.md",title:"John Yu's Apps",description:"The following blogposts were written by John Yu for various apps he had created on MecSimCalc.",date:"2022-08-05T00:00:00.000Z",formattedDate:"August 5, 2022",tags:[{label:"MecSimCalc",permalink:"/blog/tags/mec-sim-calc"},{label:"Computer Science",permalink:"/blog/tags/computer-science"},{label:"Engineering",permalink:"/blog/tags/engineering"},{label:"Math",permalink:"/blog/tags/math"},{label:"Statistics",permalink:"/blog/tags/statistics"}],readingTime:3.155,hasTruncateMarker:!1,authors:[{name:"John Yu",title:"University Researcher",key:"jyu"}],frontMatter:{slug:"JohnYu-apps",title:"John Yu's Apps",authors:["jyu"],tags:["MecSimCalc","Computer Science","Engineering","Math","Statistics"]},unlisted:!1,prevItem:{title:"Vivid Hacks v1.5 MecSimCalc Workshop",permalink:"/blog/Vivid-Hacks-1.5-MecSimCalc-Workshop"},nextItem:{title:"Useful Webtools",permalink:"/blog/websiteplanet-2022"}},l={authorsImageUrls:[void 0]},c=[{value:"<strong>Pairwise Testing Generator</strong>",id:"pairwise-testing-generator",level:2},{value:"<em><strong>About the Pairwise Testing Generator</strong></em>",id:"about-the-pairwise-testing-generator",level:3},{value:"<em><strong>Why I made this app</strong></em>",id:"why-i-made-this-app",level:3},{value:"<strong>Simple Linear Regression and Discrete Probability Distribution</strong>",id:"simple-linear-regression-and-discrete-probability-distribution",level:2},{value:"<em><strong>About the Simple Linear Regression and the Discrete Probability Distribution App</strong></em>",id:"about-the-simple-linear-regression-and-the-discrete-probability-distribution-app",level:3},{value:"<strong>Truth Table Generator</strong>",id:"truth-table-generator",level:2},{value:"<em><strong>About the Truth Table Generator App</strong></em>",id:"about-the-truth-table-generator-app",level:3}];function p(e){const t={a:"a",em:"em",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"The following blogposts were written by John Yu for various apps he had created on MecSimCalc."}),"\n",(0,n.jsx)(t.h2,{id:"pairwise-testing-generator",children:(0,n.jsx)(t.strong,{children:"Pairwise Testing Generator"})}),"\n",(0,n.jsxs)(t.p,{children:["This blog post is dedicated to the ",(0,n.jsx)(t.a,{href:"https://mecsimcalc.com/app/8809236/pairwise_testing_generator",children:"Pairwise Testing Generator"})," app created by John Yu."]}),"\n",(0,n.jsx)(t.h3,{id:"about-the-pairwise-testing-generator",children:(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"About the Pairwise Testing Generator"})})}),"\n",(0,n.jsx)(t.p,{children:"The pairwise testing generator is an app that can generate a set of test cases with up to 5\nindependent variables. The app uses a technique called Taguchi Orthogonal Arrays such that\nevery pairing of variables appears in at least one test case. This method is significantly more\npowerful and more efficient compared to brute-force testing. You can get full testing coverage\nof your program using significantly less test cases. This can save you a lot of time and a lot of\nmoney depending on the size of your program."}),"\n",(0,n.jsx)(t.h3,{id:"why-i-made-this-app",children:(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"Why I made this app"})})}),"\n",(0,n.jsx)(t.p,{children:"Software testing is a critical step in the software development lifecycle. There are countless\nopportunities for mistakes and defects to come up at any point in the development of software.\nFixing code is equally as important as creating code. Finding these bugs early in the\ndevelopment lifecycle will help to mitigate issues that come up later. The hard part of testing\ncode is generating test cases. Full code coverage often comes with a huge set of test cases\nwhich is expensive and time consuming. A small set of test cases is cost effective but lacks code\ncoverage. I made this app to help software engineers generate test cases that can provide\nadequate code coverage in a reasonable amount of test cases. This saves you a lot of time and\nmoney and improves the quality of your code."}),"\n",(0,n.jsx)(t.h2,{id:"simple-linear-regression-and-discrete-probability-distribution",children:(0,n.jsx)(t.strong,{children:"Simple Linear Regression and Discrete Probability Distribution"})}),"\n",(0,n.jsxs)(t.p,{children:["This blog post is dedicated to the ",(0,n.jsx)(t.a,{href:"https://mecsimcalc.com/app/3625435/simple_linear_regression",children:"Simple Linear Regression"})," and ",(0,n.jsx)(t.a,{href:"https://mecsimcalc.com/app/8359657/visualizing_discrete_probability_distributions",children:"Visualizing Discrete Probability Distributions"})," apps created by John Yu."]}),"\n",(0,n.jsx)(t.h3,{id:"about-the-simple-linear-regression-and-the-discrete-probability-distribution-app",children:(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"About the Simple Linear Regression and the Discrete Probability Distribution App"})})}),"\n",(0,n.jsx)(t.p,{children:"The simple linear regression app can generate a regression line from your set of data points.\nThe app is intended to be a helpful tool for Statistics students to understand how the linear\nregression line is calculated. There are no statistical libraries used in the calculation of the\nregression line. All calculations are done using equations from my statistics textbook. The app\nwill calculate the regression line as well as show you how the calculation is performed. In\nstatistics, there are many formulas that can calculate a regression line. This app uses the\nsimplest equation to help students gain a better understanding of how the regression line is\ncalculated."}),"\n",(0,n.jsx)(t.p,{children:"The Discrete Probability Distribution app can visualize common probability distributions in\nStatistics. This app is intended to be a helpful tool for students taking Statistics to understand\nhow these probability distributions work. The user can play around with the parameters of the\ndistributions defined in the app inputs to understand how these parameters impact the graph."}),"\n",(0,n.jsx)(t.h2,{id:"truth-table-generator",children:(0,n.jsx)(t.strong,{children:"Truth Table Generator"})}),"\n",(0,n.jsxs)(t.p,{children:["This blog post is dedicated to the ",(0,n.jsx)(t.a,{href:"https://mecsimcalc.com/app/4669459/truth_table_generator",children:"Truth Table Generator"})," app created by John Yu."]}),"\n",(0,n.jsx)(t.h3,{id:"about-the-truth-table-generator-app",children:(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"About the Truth Table Generator App"})})}),"\n",(0,n.jsx)(t.p,{children:"The truth table generator is an app that can generate a truth table by defining a logical\nexpression. You can define a logic expression simply by typing it into the app inputs. The app\nwill evaluate your expression with each possible combination of inputs and return the expected\noutput. This app is intended to be used by students taking a digital logic class who need to\nquickly generate a truth table. Sometimes a logic expression may be very complicated to\nevaluate by hand. This app can generate a truth table with any expression no matter how\ncomplicated it is. Students will find this app by helpful for verifying your truth table. The app\nhas been tested multiple times to ensure that the expected outputs are correct."})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>r});var n=i(7294);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);