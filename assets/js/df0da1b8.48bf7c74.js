"use strict";(self.webpackChunkmec_sim_calc_docs=self.webpackChunkmec_sim_calc_docs||[]).push([[500],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=r,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2191:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],i={sidebar_label:"Generating Tables",sidebar_position:5},s=void 0,p={unversionedId:"Getting-Started/Tables",id:"Getting-Started/Tables",title:"Tables",description:"MecSimCalc provides a flexible platform allowing the developer_** to generate tables in a variety of ways. First, the output window enables html tags; a _**developer familiar with html tables can use this functionality to design a table in the output page. Alternatively, a developer_ can choose to generate the table using a utility routine in the code step that generates the required html. For example, the following utility function buildhtmltable generates the required html table based on an input array of the table columns and an array of the column headers:",source:"@site/docs/Getting-Started/Tables.md",sourceDirName:"Getting-Started",slug:"/Getting-Started/Tables",permalink:"/Getting-Started/Tables",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Generating Tables",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Example 2",permalink:"/Getting-Started/Example2"},next:{title:"Example 3",permalink:"/Getting-Started/Example3"}},c=[],m={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"MecSimCalc provides a flexible platform allowing the ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"developer"))," to generate tables in a variety of ways. First, the output window enables html tags; a ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"developer"))," familiar with ",(0,l.kt)("a",{parentName:"p",href:"https://www.w3schools.com/html/html_tables.asp"},"html tables")," can use this functionality to design a table in the output page. Alternatively, a ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"developer"))," can choose to generate the table using a utility routine in the code step that generates the required html. For example, the following utility function ",(0,l.kt)("inlineCode",{parentName:"p"},"build_html_table")," generates the required html table based on an input array of the table columns and an array of the column headers:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def build_html_table(columns, ColumnHeaders):\n    # <table> is the table\n    # <tr> is table row\n    # <th> is table header\n    # <td> is table data cell\n    # (1) Table opening table\n    html_table = "<table border=\'3\' cellpadding=\'5\' style=\'border-collapse:collapse;\'><tr>"\n    # (2) Add header row\n    rows=len(columns[0])\n    for h in ColumnHeaders:\n        html_table += "<th>"+h+"</th>"\n    html_table += "</tr>"\n    # (3) Add all data rows\n    for i in range(rows):\n        html_table += "<tr>"\n        for column in columns:\n            html_table += "<td>"+str(column[i])+"</td>"\n        html_table += "</tr>"\n    # (4) Add the table closing tag\n    html_table += "</table>"\n    return html_table\n')),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The above utility routine works only for a table with multiple columns. It can easily be edited to generate a table with one column."))),(0,l.kt)("p",null,"Alternatively, a ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"developer"))," can choose many of the python libraries that can output an html table directly. For example, the ",(0,l.kt)("a",{parentName:"p",href:"https://pandas.pydata.org/"},"Pandas library")," which is available to MecSimCalc ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"developers"))," has the built-in functionality of converting ",(0,l.kt)("a",{parentName:"p",href:"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_html.html"},"pandas tables to html"),"."),(0,l.kt)("p",null,"In the next example, we show how an html table can be generated using both a utility routine and Pandas library."))}u.isMDXComponent=!0}}]);